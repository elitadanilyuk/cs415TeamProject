/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 27 23:55:08 GMT 2023
 */

package edu.colostate.cs415.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.colostate.cs415.model.Project;
import edu.colostate.cs415.model.ProjectSize;
import edu.colostate.cs415.model.Qualification;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Project_ESTest extends Project_ESTest_scaffolding {

  // @Test(timeout = 4000)
  // public void test0()  throws Throwable  {
  //     LinkedHashSet<Qualification> linkedHashSet0 = new LinkedHashSet<Qualification>();
  //     ProjectSize projectSize0 = ProjectSize.SMALL;
  //     linkedHashSet0.add((Qualification) null);
  //     Project project0 = null;
  //     try {
  //       project0 = new Project("ENUM$VALUES", linkedHashSet0, projectSize0);
  //       fail("Expecting exception: NoClassDefFoundError");
      
  //     } catch(NoClassDefFoundError e) {
  //        //
  //        // spark/utils/StringUtils
  //        //
  //        verifyException("edu.colostate.cs415.model.Project", e);
  //     }
  // }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedHashSet<Qualification> linkedHashSet0 = new LinkedHashSet<Qualification>();
      ProjectSize projectSize0 = ProjectSize.BIG;
      Project project0 = null;
      try {
        project0 = new Project("lkrersn=", linkedHashSet0, projectSize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.colostate.cs415.model.Project", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedHashSet<Qualification> linkedHashSet0 = new LinkedHashSet<Qualification>();
      ProjectSize projectSize0 = ProjectSize.BIG;
      Project project0 = null;
      try {
        project0 = new Project("", linkedHashSet0, projectSize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.colostate.cs415.model.Project", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ProjectSize projectSize0 = ProjectSize.MEDIUM;
      Project project0 = null;
      try {
        project0 = new Project("s;[iu", (Set<Qualification>) null, projectSize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.colostate.cs415.model.Project", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedHashSet<Qualification> linkedHashSet0 = new LinkedHashSet<Qualification>();
      Project project0 = null;
      try {
        project0 = new Project("HyU2", linkedHashSet0, (ProjectSize) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.colostate.cs415.model.Project", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedHashSet<Qualification> linkedHashSet0 = new LinkedHashSet<Qualification>();
      ProjectSize projectSize0 = ProjectSize.BIG;
      Project project0 = null;
      try {
        project0 = new Project((String) null, linkedHashSet0, projectSize0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.colostate.cs415.model.Project", e);
      }
  }
}
