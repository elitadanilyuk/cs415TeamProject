package edu.colostate.cs415.model;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        java.lang.String str8 = company6.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company16.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize19 = null;
        edu.colostate.cs415.model.Project project20 = company11.createProject("hi!", qualificationSet18, projectSize19);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company23.createQualification("");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = company23.createWorker("hi!:0:0", qualificationSet31, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker35 = company11.createWorker("", qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker37 = company6.createWorker("hi!", qualificationSet31, (double) 1);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company1.createProject("hi!:0:0", qualificationSet31, projectSize38);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        boolean boolean46 = company42.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray52 = new edu.colostate.cs415.model.Qualification[] { qualification51 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet53 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet53, qualificationArray52);
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        edu.colostate.cs415.model.Project project56 = company42.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet53, projectSize55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker59 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet57, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = worker59.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker59.getQualifications();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company63.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet65 = company63.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company63.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company63.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification69 = company63.createQualification("hi!:0:0");
        worker59.addQualification(qualification69);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNull(project20);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(project56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertNotNull(projectSet65);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualification69);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker28.getQualifications();
        worker28.setSalary((double) 10);
        worker28.setSalary(10.0d);
        worker28.setSalary(100.0d);
        edu.colostate.cs415.model.Project project36 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker28, project36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(qualificationSet29);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company18.getUnassignedWorkers();
        java.lang.String str34 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str45 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company57.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize60 = null;
        edu.colostate.cs415.model.Project project61 = company52.createProject("hi!", qualificationSet59, projectSize60);
        edu.colostate.cs415.model.Worker worker63 = company49.createWorker("", qualificationSet59, 1.0d);
        edu.colostate.cs415.model.Worker worker65 = company44.createWorker("hi!", qualificationSet59, (double) (-1.0f));
        boolean boolean66 = company39.equals((java.lang.Object) qualificationSet59);
        edu.colostate.cs415.model.Worker worker68 = company18.createWorker("hi!", qualificationSet59, (double) (-1));
        edu.colostate.cs415.model.Worker worker70 = company1.createWorker("hi!", qualificationSet59, (double) 0L);
        java.lang.String str71 = company1.toString();
        edu.colostate.cs415.model.Project project72 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNull(project61);
        org.junit.Assert.assertNull(worker63);
        org.junit.Assert.assertNull(worker65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(worker68);
        org.junit.Assert.assertNull(worker70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:0:0" + "'", str71, "hi!:0:0");
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        boolean boolean40 = worker34.isAvailable();
        java.lang.String str41 = worker34.getName();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean48 = qualification45.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification45.getWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification53.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification53.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification53.toDTO();
        java.lang.Object obj58 = null;
        boolean boolean59 = qualification53.equals(obj58);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        boolean boolean66 = company62.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray72 = new edu.colostate.cs415.model.Qualification[] { qualification71 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet73 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet73, qualificationArray72);
        edu.colostate.cs415.model.ProjectSize projectSize75 = null;
        edu.colostate.cs415.model.Project project76 = company62.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet73, projectSize75);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet77 = company62.getQualifications();
        edu.colostate.cs415.model.Worker worker79 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet77, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = worker79.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet81 = worker79.getQualifications();
        qualification53.addWorker(worker79);
        int int83 = worker79.getWorkload();
        edu.colostate.cs415.model.Company company85 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification87 = company85.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet88 = qualification87.getWorkers();
        boolean boolean90 = qualification87.equals((java.lang.Object) 'a');
        java.lang.String str91 = qualification87.toString();
        edu.colostate.cs415.model.Company company93 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean94 = qualification87.equals((java.lang.Object) company93);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO95 = qualification87.toDTO();
        worker79.addQualification(qualification87);
        qualification45.addWorker(worker79);
        boolean boolean98 = worker34.equals((java.lang.Object) worker79);
        edu.colostate.cs415.dto.WorkerDTO workerDTO99 = worker79.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(qualificationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(project76);
        org.junit.Assert.assertNotNull(qualificationSet77);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertNotNull(qualificationSet81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(qualification87);
        org.junit.Assert.assertNotNull(workerSet88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(qualificationDTO95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(workerDTO99);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        boolean boolean48 = qualification3.equals((java.lang.Object) worker46);
        edu.colostate.cs415.model.Project project49 = null;
        boolean boolean50 = worker46.willOverload(project49);
        worker46.setSalary(10.0d);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        boolean boolean59 = qualification56.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification56.toDTO();
        boolean boolean61 = worker46.equals((java.lang.Object) qualification56);
        edu.colostate.cs415.model.Project project62 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker46.addProject(project62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company18.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company13.createProject("hi!", qualificationSet20, projectSize21);
        edu.colostate.cs415.model.Worker worker24 = company10.createWorker("", qualificationSet20, 1.0d);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company2.createProject("", qualificationSet20, projectSize25);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!:0:1:32", qualificationSet20, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertNull(worker24);
        org.junit.Assert.assertNull(project26);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0");
        java.lang.String str19 = company1.getName();
        java.lang.String str20 = company1.getName();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean27 = qualification24.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean33 = qualification24.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean40 = qualification37.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO41 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean46 = qualification37.equals((java.lang.Object) qualification45);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification50.toDTO();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        boolean boolean59 = qualification50.equals((java.lang.Object) qualification58);
        java.lang.String str60 = qualification58.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification58.getWorkers();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        boolean boolean68 = company64.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray74 = new edu.colostate.cs415.model.Qualification[] { qualification73 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet75 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet75, qualificationArray74);
        edu.colostate.cs415.model.ProjectSize projectSize77 = null;
        edu.colostate.cs415.model.Project project78 = company64.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet75, projectSize77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = company64.getQualifications();
        edu.colostate.cs415.model.Worker worker81 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet79, (double) 0L);
        qualification58.removeWorker(worker81);
        qualification45.addWorker(worker81);
        qualification32.removeWorker(worker81);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker81);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualificationDTO41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(qualificationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(project78);
        org.junit.Assert.assertNotNull(qualificationSet79);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean40 = qualification37.equals((java.lang.Object) 'a');
        java.lang.String str41 = qualification37.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean44 = qualification37.equals((java.lang.Object) company43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        edu.colostate.cs415.dto.WorkerDTO workerDTO47 = worker29.toDTO();
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.removeProject(project48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(workerDTO47);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.lang.String str12 = company1.getName();
        java.lang.String str13 = company1.getName();
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company10.createQualification("");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = company10.createWorker("hi!:0:0", qualificationSet18, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company10.getProjects();
        boolean boolean22 = company1.equals((java.lang.Object) company10);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification26.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification26.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification26.toDTO();
        java.lang.Object obj31 = null;
        boolean boolean32 = qualification26.equals(obj31);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray45 = new edu.colostate.cs415.model.Qualification[] { qualification44 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet46 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet46, qualificationArray45);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        edu.colostate.cs415.model.Project project49 = company35.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet46, projectSize48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet50, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker52.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker52.getQualifications();
        qualification26.addWorker(worker52);
        java.lang.String str56 = worker52.toString();
        edu.colostate.cs415.model.Project project57 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker52, project57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(project49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:1:0" + "'", str56, "hi!:0:1:0");
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!");
        java.lang.String str19 = company1.toString();
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNull(qualification18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("");
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean20 = qualification11.equals((java.lang.Object) qualification19);
        java.lang.String str21 = qualification19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        boolean boolean29 = company25.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company25.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, projectSize38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet40, (double) 0L);
        qualification19.removeWorker(worker42);
        edu.colostate.cs415.dto.WorkerDTO workerDTO44 = worker42.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker42.toDTO();
        edu.colostate.cs415.model.Project project46 = null;
        boolean boolean47 = worker42.willOverload(project46);
        edu.colostate.cs415.dto.WorkerDTO workerDTO48 = worker42.toDTO();
        worker42.setSalary(1.0d);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str53 = company52.toString();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getAvailableWorkers();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company65.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company65.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize68 = null;
        edu.colostate.cs415.model.Project project69 = company60.createProject("hi!", qualificationSet67, projectSize68);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet73 = company72.getProjects();
        edu.colostate.cs415.model.Qualification qualification75 = company72.createQualification("");
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company78.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = company78.getQualifications();
        edu.colostate.cs415.model.Worker worker82 = company72.createWorker("hi!:0:0", qualificationSet80, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker84 = company60.createWorker("", qualificationSet80, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize85 = null;
        edu.colostate.cs415.model.Project project86 = company56.createProject("", qualificationSet80, projectSize85);
        edu.colostate.cs415.model.ProjectSize projectSize87 = null;
        edu.colostate.cs415.model.Project project88 = company52.createProject("hi!:0:0", qualificationSet80, projectSize87);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet89 = company52.getProjects();
        java.lang.String str90 = company52.getName();
        boolean boolean91 = worker42.equals((java.lang.Object) str90);
        edu.colostate.cs415.model.Project project92 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker42, project92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNotNull(workerDTO44);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(workerDTO48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0" + "'", str53, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertNull(project69);
        org.junit.Assert.assertNotNull(projectSet73);
        org.junit.Assert.assertNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertNull(worker82);
        org.junit.Assert.assertNull(worker84);
        org.junit.Assert.assertNull(project86);
        org.junit.Assert.assertNull(project88);
        org.junit.Assert.assertNotNull(projectSet89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.lang.String str5 = company2.toString();
        boolean boolean7 = company2.equals((java.lang.Object) (-1L));
        java.lang.String str8 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str2 = qualification1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = qualification1.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification1.toDTO();
        edu.colostate.cs415.model.Qualification qualification6 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray19 = new edu.colostate.cs415.model.Qualification[] { qualification18 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet20 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet20, qualificationArray19);
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company9.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet20, projectSize22);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = worker26.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker26.getQualifications();
        qualification6.removeWorker(worker26);
        qualification1.addWorker(worker26);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification1.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company33.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company33.createQualification("");
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = company33.createWorker("hi!:0:0", qualificationSet41, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company33.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company33.getUnassignedWorkers();
        java.lang.String str46 = company33.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company33.getUnassignedWorkers();
        boolean boolean48 = qualification1.equals((java.lang.Object) company33);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification1.toDTO();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNull(worker43);
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification24 = company21.createQualification("");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company21.createWorker("hi!:0:0", qualificationSet29, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker33 = company9.createWorker("", qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company5.createProject("", qualificationSet29, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company1.createWorker("hi!:0:0", qualificationSet29, 0.0d);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company1.getProjects();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        boolean boolean45 = company41.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray51 = new edu.colostate.cs415.model.Qualification[] { qualification50 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet52 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet52, qualificationArray51);
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company41.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet52, projectSize54);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet56, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = worker58.getQualifications();
        edu.colostate.cs415.model.Project project60 = null;
        boolean boolean61 = worker58.willOverload(project60);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = worker58.getProjects();
        java.lang.String str63 = worker58.getName();
        edu.colostate.cs415.model.Qualification qualification65 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker58.addQualification(qualification65);
        double double67 = worker58.getSalary();
        boolean boolean68 = worker58.isAvailable();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company1.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification35 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification39.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean48 = qualification39.equals((java.lang.Object) qualification47);
        java.lang.String str49 = qualification47.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification47.getWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        boolean boolean57 = company53.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.ProjectSize projectSize66 = null;
        edu.colostate.cs415.model.Project project67 = company53.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, projectSize66);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company53.getQualifications();
        edu.colostate.cs415.model.Worker worker70 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet68, (double) 0L);
        qualification47.removeWorker(worker70);
        edu.colostate.cs415.dto.WorkerDTO workerDTO72 = worker70.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO73 = worker70.toDTO();
        edu.colostate.cs415.model.Project project74 = null;
        boolean boolean75 = worker70.willOverload(project74);
        qualification35.addWorker(worker70);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet77 = worker70.getProjects();
        edu.colostate.cs415.model.Project project78 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker70, project78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(project67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNotNull(workerDTO72);
        org.junit.Assert.assertNotNull(workerDTO73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(projectSet77);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.lang.String str11 = company9.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean21 = qualification18.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification18.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean27 = qualification18.equals((java.lang.Object) qualification26);
        java.lang.String str28 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company32.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet47, (double) 0L);
        qualification26.removeWorker(worker49);
        worker49.setSalary((double) 10.0f);
        edu.colostate.cs415.model.Project project53 = null;
        boolean boolean54 = worker49.willOverload(project53);
        // The following exception was thrown during execution in test generation
        try {
            company9.unassignAll(worker49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = qualification1.getWorkers();
        java.lang.String str3 = qualification1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean29 = qualification26.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification26.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean35 = qualification26.equals((java.lang.Object) qualification34);
        java.lang.String str36 = qualification34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification34.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        boolean boolean44 = company40.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray50 = new edu.colostate.cs415.model.Qualification[] { qualification49 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet51 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet51, qualificationArray50);
        edu.colostate.cs415.model.ProjectSize projectSize53 = null;
        edu.colostate.cs415.model.Project project54 = company40.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet51, projectSize53);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet55, (double) 0L);
        qualification34.removeWorker(worker57);
        qualification12.addWorker(worker57);
        qualification7.addWorker(worker57);
        qualification1.addWorker(worker57);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification1.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification1.toDTO();
        java.lang.String str64 = qualification1.toString();
        java.lang.String str65 = qualification1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(project54);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray17 = new edu.colostate.cs415.model.Qualification[] { qualification16 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet18 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet18, qualificationArray17);
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        edu.colostate.cs415.model.Project project21 = company7.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet18, projectSize20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker24.getQualifications();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnassignedWorkers();
        java.lang.String str32 = company28.getName();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getAvailableWorkers();
        java.lang.String str37 = company35.toString();
        java.lang.String str38 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company28.createProject("hi!", qualificationSet39, projectSize40);
        java.lang.String str42 = company28.toString();
        boolean boolean43 = worker24.equals((java.lang.Object) str42);
        qualification3.addWorker(worker24);
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker24.toDTO();
        int int46 = worker24.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = worker24.getProjects();
        java.lang.String str48 = worker24.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(project21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:1:0" + "'", str48, "hi!:0:1:0");
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        qualification15.removeWorker(worker35);
        boolean boolean39 = company1.equals((java.lang.Object) worker35);
        edu.colostate.cs415.model.Project project40 = null;
        boolean boolean41 = worker35.willOverload(project40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker35.getQualifications();
        edu.colostate.cs415.model.Project project43 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker35.removeProject(project43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationSet42);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.lang.String str4 = company2.toString();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize7 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project8 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet6, projectSize7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:1:32:0:1:12");
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        edu.colostate.cs415.model.Qualification qualification2 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        boolean boolean9 = company5.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray15 = new edu.colostate.cs415.model.Qualification[] { qualification14 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet16 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet16, qualificationArray15);
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company5.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet16, projectSize18);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company5.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker22.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = worker22.getQualifications();
        qualification2.removeWorker(worker22);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        boolean boolean34 = qualification29.equals((java.lang.Object) workerSet33);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification29.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification29.getWorkers();
        boolean boolean37 = worker22.equals((java.lang.Object) workerSet36);
        double double38 = worker22.getSalary();
        int int39 = worker22.getWorkload();
        boolean boolean40 = worker22.isAvailable();
        java.lang.String str41 = worker22.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getAvailableWorkers();
        java.lang.String str45 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnavailableWorkers();
        java.lang.String str47 = company43.toString();
        java.lang.String str48 = company43.toString();
        java.lang.Object obj49 = null;
        boolean boolean50 = company43.equals(obj49);
        boolean boolean51 = worker22.equals((java.lang.Object) boolean50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker22.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize53 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project54 = new edu.colostate.cs415.model.Project("hi!:0:1:10", qualificationSet52, projectSize53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualificationDTO35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:1:0" + "'", str41, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationSet52);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0");
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        java.lang.String str46 = worker34.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = worker34.getProjects();
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.removeProject(project48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(projectSet47);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean49 = qualification46.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification46.getWorkers();
        worker34.addQualification(qualification46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification46.toDTO();
        java.lang.String str53 = qualification46.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification46.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        boolean boolean22 = qualification17.equals((java.lang.Object) workerSet21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        boolean boolean29 = company25.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company25.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, projectSize38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company25.getUnavailableWorkers();
        boolean boolean41 = qualification17.equals((java.lang.Object) workerSet40);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        boolean boolean48 = company44.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray54 = new edu.colostate.cs415.model.Qualification[] { qualification53 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet55 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet55, qualificationArray54);
        edu.colostate.cs415.model.ProjectSize projectSize57 = null;
        edu.colostate.cs415.model.Project project58 = company44.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet55, projectSize57);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company44.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet59, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker61.getQualifications();
        worker61.setSalary((double) 10);
        qualification17.removeWorker(worker61);
        java.lang.String str66 = worker61.toString();
        qualification3.addWorker(worker61);
        double double68 = worker61.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(qualificationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(project58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:1:10" + "'", str66, "hi!:0:1:10");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean17 = qualification8.equals((java.lang.Object) qualification16);
        java.lang.String str18 = qualification16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company22.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 0L);
        qualification16.removeWorker(worker39);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company42.getProjects();
        edu.colostate.cs415.model.Qualification qualification45 = company42.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company42.getAssignedWorkers();
        boolean boolean47 = worker39.equals((java.lang.Object) workerSet46);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str37 = qualification36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification36.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification36.toDTO();
        edu.colostate.cs415.model.Qualification qualification41 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        boolean boolean48 = company44.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray54 = new edu.colostate.cs415.model.Qualification[] { qualification53 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet55 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet55, qualificationArray54);
        edu.colostate.cs415.model.ProjectSize projectSize57 = null;
        edu.colostate.cs415.model.Project project58 = company44.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet55, projectSize57);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company44.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet59, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker61.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker61.getQualifications();
        qualification41.removeWorker(worker61);
        qualification36.addWorker(worker61);
        worker61.setSalary((double) (byte) 10);
        double double68 = worker61.getSalary();
        edu.colostate.cs415.model.Project project69 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker61, project69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationDTO39);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(qualificationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(project58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        boolean boolean9 = company1.equals((java.lang.Object) (short) -1);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        edu.colostate.cs415.model.Project project31 = null;
        boolean boolean32 = worker29.willOverload(project31);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = worker29.getProjects();
        java.lang.String str34 = worker29.getName();
        edu.colostate.cs415.model.Qualification qualification36 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker29.addQualification(qualification36);
        double double38 = worker29.getSalary();
        boolean boolean39 = worker29.isAvailable();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getUnavailableWorkers();
        boolean boolean48 = qualification43.equals((java.lang.Object) workerSet47);
        java.lang.String str49 = qualification43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification43.getWorkers();
        java.lang.String str51 = qualification43.toString();
        worker29.addQualification(qualification43);
        edu.colostate.cs415.model.Project project53 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker29, project53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.lang.String str11 = company9.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company16.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, projectSize29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = worker33.getQualifications();
        worker33.setSalary((double) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = worker33.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker33.getQualifications();
        qualification13.addWorker(worker33);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.lang.String str44 = qualification43.toString();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification48.getWorkers();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification62.getWorkers();
        boolean boolean65 = qualification62.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification62.toDTO();
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        boolean boolean71 = qualification62.equals((java.lang.Object) qualification70);
        java.lang.String str72 = qualification70.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification70.getWorkers();
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        boolean boolean80 = company76.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray86 = new edu.colostate.cs415.model.Qualification[] { qualification85 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet87 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet87, qualificationArray86);
        edu.colostate.cs415.model.ProjectSize projectSize89 = null;
        edu.colostate.cs415.model.Project project90 = company76.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet87, projectSize89);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company76.getQualifications();
        edu.colostate.cs415.model.Worker worker93 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet91, (double) 0L);
        qualification70.removeWorker(worker93);
        qualification48.addWorker(worker93);
        qualification43.addWorker(worker93);
        double double97 = worker93.getSalary();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet98 = worker93.getProjects();
        boolean boolean99 = worker33.equals((java.lang.Object) projectSet98);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(project90);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertNotNull(projectSet98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        boolean boolean6 = company1.equals((java.lang.Object) (-1L));
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray23 = new edu.colostate.cs415.model.Qualification[] { qualification22 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet24 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet24, qualificationArray23);
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        edu.colostate.cs415.model.Project project27 = company13.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet24, projectSize26);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO32 = worker30.toDTO();
        boolean boolean33 = company1.equals((java.lang.Object) workerDTO32);
        edu.colostate.cs415.model.Qualification qualification35 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str36 = qualification35.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification35.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification35.toDTO();
        edu.colostate.cs415.model.Qualification qualification40 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker60.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker60.getQualifications();
        qualification40.removeWorker(worker60);
        qualification35.addWorker(worker60);
        worker60.setSalary((double) (byte) 10);
        int int67 = worker60.getWorkload();
        edu.colostate.cs415.model.Project project68 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker60, project68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(project27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(workerDTO32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationDTO38);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company1.createQualification("hi!:0:1:97");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNull(qualification18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company6.getUnavailableWorkers();
        boolean boolean39 = company1.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str42 = company41.toString();
        java.lang.String str43 = company41.getName();
        edu.colostate.cs415.model.Qualification qualification45 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification49.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        boolean boolean58 = qualification49.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification62.getWorkers();
        boolean boolean65 = qualification62.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification62.toDTO();
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        boolean boolean71 = qualification62.equals((java.lang.Object) qualification70);
        java.lang.String str72 = qualification70.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification70.getWorkers();
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        boolean boolean80 = company76.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray86 = new edu.colostate.cs415.model.Qualification[] { qualification85 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet87 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet87, qualificationArray86);
        edu.colostate.cs415.model.ProjectSize projectSize89 = null;
        edu.colostate.cs415.model.Project project90 = company76.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet87, projectSize89);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company76.getQualifications();
        edu.colostate.cs415.model.Worker worker93 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet91, (double) 0L);
        qualification70.removeWorker(worker93);
        qualification57.addWorker(worker93);
        qualification45.addWorker(worker93);
        double double97 = worker93.getSalary();
        edu.colostate.cs415.model.Project project98 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker93, project98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(project90);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        boolean boolean6 = company1.equals((java.lang.Object) (-1L));
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("");
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNull(qualification10);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker19.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO22 = worker19.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker19.getQualifications();
        java.lang.String str24 = worker19.getName();
        boolean boolean25 = worker19.isAvailable();
        edu.colostate.cs415.dto.WorkerDTO workerDTO26 = worker19.toDTO();
        boolean boolean27 = worker19.isAvailable();
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.removeProject(project28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerDTO22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(workerDTO26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean31 = qualification28.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification28.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification28.toDTO();
        worker21.addQualification(qualification28);
        edu.colostate.cs415.model.Project project35 = null;
        boolean boolean36 = worker21.willOverload(project35);
        worker21.setSalary((double) ' ');
        java.lang.String str39 = worker21.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getAvailableWorkers();
        java.lang.String str43 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company41.getQualifications();
        boolean boolean46 = worker21.equals((java.lang.Object) qualificationSet45);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification50.toDTO();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        boolean boolean59 = qualification50.equals((java.lang.Object) qualification58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = qualification63.getWorkers();
        boolean boolean66 = qualification63.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification63.toDTO();
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        boolean boolean72 = qualification63.equals((java.lang.Object) qualification71);
        java.lang.String str73 = qualification71.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification71.getWorkers();
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        boolean boolean81 = company77.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company84 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification86 = company84.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray87 = new edu.colostate.cs415.model.Qualification[] { qualification86 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet88 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet88, qualificationArray87);
        edu.colostate.cs415.model.ProjectSize projectSize90 = null;
        edu.colostate.cs415.model.Project project91 = company77.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet88, projectSize90);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet92 = company77.getQualifications();
        edu.colostate.cs415.model.Worker worker94 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet92, (double) 0L);
        qualification71.removeWorker(worker94);
        qualification58.addWorker(worker94);
        boolean boolean97 = worker94.isAvailable();
        edu.colostate.cs415.dto.WorkerDTO workerDTO98 = worker94.toDTO();
        boolean boolean99 = worker21.equals((java.lang.Object) worker94);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:1:32" + "'", str39, "hi!:0:1:32");
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification86);
        org.junit.Assert.assertNotNull(qualificationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(project91);
        org.junit.Assert.assertNotNull(qualificationSet92);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(workerDTO98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        boolean boolean12 = company7.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str24 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("");
        java.lang.String str28 = company23.toString();
        boolean boolean29 = qualification17.equals((java.lang.Object) str28);
        boolean boolean30 = company7.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company7.getAvailableWorkers();
        boolean boolean32 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company7.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification38 = company35.createQualification("");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = company35.createWorker("hi!:0:0", qualificationSet43, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification47 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        boolean boolean56 = company52.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray62 = new edu.colostate.cs415.model.Qualification[] { qualification61 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet63 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet63, qualificationArray62);
        edu.colostate.cs415.model.ProjectSize projectSize65 = null;
        edu.colostate.cs415.model.Project project66 = company52.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet63, projectSize65);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company52.getQualifications();
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet67, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = worker69.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = worker69.getQualifications();
        qualification49.removeWorker(worker69);
        boolean boolean73 = company35.equals((java.lang.Object) worker69);
        edu.colostate.cs415.model.Project project74 = null;
        // The following exception was thrown during execution in test generation
        try {
            company7.assign(worker69, project74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNull(qualification27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualificationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(project66);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        boolean boolean9 = company1.equals((java.lang.Object) (short) -1);
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!:0:0", qualificationSet17, 100.0d);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company22.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker39.getQualifications();
        worker39.setSalary((double) 10);
        worker39.setSalary(10.0d);
        boolean boolean45 = worker39.isAvailable();
        edu.colostate.cs415.model.Project project46 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker39, project46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(worker19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification15.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker38.getQualifications();
        qualification15.removeWorker(worker38);
        edu.colostate.cs415.model.Project project42 = null;
        boolean boolean43 = worker38.willOverload(project42);
        qualification3.removeWorker(worker38);
        java.lang.Class<?> wildcardClass45 = worker38.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        qualification15.removeWorker(worker35);
        boolean boolean39 = company1.equals((java.lang.Object) worker35);
        edu.colostate.cs415.model.Project project40 = null;
        boolean boolean41 = worker35.willOverload(project40);
        double double42 = worker35.getSalary();
        edu.colostate.cs415.model.Project project43 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker35.addProject(project43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = worker19.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = worker19.getQualifications();
        java.lang.Class<?> wildcardClass25 = qualificationSet24.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company14.createProject("hi!", qualificationSet21, projectSize22);
        edu.colostate.cs415.model.Worker worker25 = company11.createWorker("", qualificationSet21, 1.0d);
        edu.colostate.cs415.model.Worker worker27 = company6.createWorker("hi!", qualificationSet21, (double) (-1.0f));
        boolean boolean28 = company1.equals((java.lang.Object) qualificationSet21);
        edu.colostate.cs415.model.Qualification qualification30 = company1.createQualification("hi!:0:1:10");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getAvailableWorkers();
        java.lang.String str35 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company33.getAssignedWorkers();
        java.lang.String str37 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company33.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company1.createProject("", qualificationSet38, projectSize39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNull(worker25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(workerSet41);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:2:0");
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO23 = worker19.toDTO();
        edu.colostate.cs415.model.Project project24 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.removeProject(project24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(workerDTO23);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean13 = qualification4.equals((java.lang.Object) qualification12);
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean21 = qualification18.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification18.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean27 = qualification18.equals((java.lang.Object) qualification26);
        java.lang.String str28 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company32.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet47, (double) 0L);
        qualification26.removeWorker(worker49);
        qualification4.removeWorker(worker49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker49.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize53 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project54 = new edu.colostate.cs415.model.Project("hi!:0:1:100", qualificationSet52, projectSize53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(qualificationSet52);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker29.willOverload(project34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker29.toDTO();
        edu.colostate.cs415.model.Project project37 = null;
        boolean boolean38 = worker29.willOverload(project37);
        worker29.setSalary((double) 10);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("");
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean20 = qualification11.equals((java.lang.Object) qualification19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean27 = qualification24.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean33 = qualification24.equals((java.lang.Object) qualification32);
        java.lang.String str34 = qualification32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray48 = new edu.colostate.cs415.model.Qualification[] { qualification47 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet49 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet49, qualificationArray48);
        edu.colostate.cs415.model.ProjectSize projectSize51 = null;
        edu.colostate.cs415.model.Project project52 = company38.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet49, projectSize51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) 0L);
        qualification32.removeWorker(worker55);
        qualification19.addWorker(worker55);
        edu.colostate.cs415.model.Project project58 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker55, project58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(project52);
        org.junit.Assert.assertNotNull(qualificationSet53);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        boolean boolean48 = qualification3.equals((java.lang.Object) worker46);
        worker46.setSalary((double) 'a');
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification54.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification54.getWorkers();
        java.lang.String str58 = qualification54.toString();
        worker46.addQualification(qualification54);
        double double60 = worker46.getSalary();
        java.lang.String str61 = worker46.toString();
        double double62 = worker46.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 97.0d + "'", double60 == 97.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:1:97" + "'", str61, "hi!:0:1:97");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 97.0d + "'", double62 == 97.0d);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("");
        java.lang.String str36 = company1.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNull(qualification35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company18.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company13.createProject("hi!", qualificationSet20, projectSize21);
        edu.colostate.cs415.model.Worker worker24 = company10.createWorker("", qualificationSet20, 1.0d);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company2.createProject("", qualificationSet20, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize28 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project29 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet27, projectSize28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertNull(worker24);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str2 = qualification1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = qualification1.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification1.toDTO();
        java.lang.Class<?> wildcardClass5 = qualification1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company36.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company31.createProject("hi!", qualificationSet38, projectSize39);
        edu.colostate.cs415.model.Worker worker42 = company28.createWorker("", qualificationSet38, 1.0d);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company20.createProject("", qualificationSet38, projectSize43);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company14.createProject("hi!", qualificationSet38, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company14.getEmployedWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNull(worker42);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray24 = new edu.colostate.cs415.model.Qualification[] { qualification23 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet25 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet25, qualificationArray24);
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        edu.colostate.cs415.model.Project project28 = company14.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet25, projectSize27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company14.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification31 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company14.createQualification("");
        boolean boolean34 = qualification3.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification39 = company36.createQualification("");
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = company36.createWorker("hi!:0:0", qualificationSet44, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company36.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company36.createWorker("hi!", qualificationSet58, (double) 100.0f);
        boolean boolean63 = qualification3.equals((java.lang.Object) company36);
        java.lang.String str64 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(project28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNull(qualification31);
        org.junit.Assert.assertNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        java.lang.String str23 = company1.toString();
        java.lang.String str24 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company1.getQualifications();
        edu.colostate.cs415.model.Project project27 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray19 = new edu.colostate.cs415.model.Qualification[] { qualification18 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet20 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet20, qualificationArray19);
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company9.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet20, projectSize22);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = worker26.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker26.getQualifications();
        qualification3.removeWorker(worker26);
        edu.colostate.cs415.model.Project project30 = null;
        boolean boolean31 = worker26.willOverload(project30);
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker26.removeProject(project32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker29.willOverload(project34);
        int int36 = worker29.getWorkload();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        boolean boolean45 = qualification40.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray58 = new edu.colostate.cs415.model.Qualification[] { qualification57 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet59 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet59, qualificationArray58);
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company48.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet59, projectSize61);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company48.getUnavailableWorkers();
        boolean boolean64 = qualification40.equals((java.lang.Object) workerSet63);
        worker29.addQualification(qualification40);
        edu.colostate.cs415.model.Project project66 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.removeProject(project66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification12.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification12.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        java.lang.Object obj17 = null;
        boolean boolean18 = qualification12.equals(obj17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker38.getQualifications();
        qualification12.addWorker(worker38);
        boolean boolean42 = qualification3.equals((java.lang.Object) worker38);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(workerSet44);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        boolean boolean6 = company1.equals((java.lang.Object) (-1L));
        edu.colostate.cs415.model.Worker worker7 = null;
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker7, project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        edu.colostate.cs415.dto.WorkerDTO workerDTO48 = worker46.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker46.toDTO();
        edu.colostate.cs415.model.Project project50 = null;
        boolean boolean51 = worker46.willOverload(project50);
        boolean boolean52 = worker46.isAvailable();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNotNull(workerDTO48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company11.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company18.createQualification("");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company18.createWorker("hi!:0:0", qualificationSet26, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company11.createWorker("", qualificationSet29, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getAvailableWorkers();
        boolean boolean37 = company11.equals((java.lang.Object) workerSet36);
        boolean boolean38 = qualification3.equals((java.lang.Object) company11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company11.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(workerSet40);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company16.createProject("hi!", qualificationSet23, projectSize24);
        edu.colostate.cs415.model.Worker worker27 = company1.createWorker("hi!", qualificationSet23, (double) 100.0f);
        java.lang.String str28 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification30 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        boolean boolean37 = company33.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.ProjectSize projectSize46 = null;
        edu.colostate.cs415.model.Project project47 = company33.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, projectSize46);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet48, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker50.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker50.getQualifications();
        qualification30.removeWorker(worker50);
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker50, project54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(project47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNotNull(qualificationSet52);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company1.getQualifications();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str26 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company25.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company33.createProject("hi!", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Worker worker44 = company30.createWorker("", qualificationSet40, 1.0d);
        edu.colostate.cs415.model.Worker worker46 = company25.createWorker("hi!", qualificationSet40, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company25.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company25.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification50 = company25.createQualification("hi!:0:1:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company25.getAvailableWorkers();
        boolean boolean52 = company1.equals((java.lang.Object) company25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company25.getQualifications();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNull(worker44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(qualificationSet53);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.lang.String str23 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!:0:1:32:0:1:12", qualificationSet6, (double) 12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean29 = qualification26.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification34.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification34.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification34.toDTO();
        java.lang.Object obj39 = null;
        boolean boolean40 = qualification34.equals(obj39);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker60.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker60.getQualifications();
        qualification34.addWorker(worker60);
        int int64 = worker60.getWorkload();
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean71 = qualification68.equals((java.lang.Object) 'a');
        java.lang.String str72 = qualification68.toString();
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean75 = qualification68.equals((java.lang.Object) company74);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO76 = qualification68.toDTO();
        worker60.addQualification(qualification68);
        qualification26.addWorker(worker60);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualificationDTO38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualificationDTO76);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean25 = qualification16.equals((java.lang.Object) qualification24);
        java.lang.String str26 = qualification24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification39 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company30.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, projectSize43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 0L);
        qualification24.removeWorker(worker47);
        qualification11.addWorker(worker47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification11.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification11.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getAvailableWorkers();
        java.lang.String str10 = company8.toString();
        java.lang.String str11 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getAssignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company15.getProjects();
        edu.colostate.cs415.model.Qualification qualification18 = company15.createQualification("");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = company15.createWorker("hi!:0:0", qualificationSet23, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company15.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company30.createProject("hi!", qualificationSet37, projectSize38);
        edu.colostate.cs415.model.Worker worker41 = company15.createWorker("hi!", qualificationSet37, (double) 100.0f);
        java.lang.String str42 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company15.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getAvailableWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company50.createProject("hi!", qualificationSet57, projectSize58);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company62.getProjects();
        edu.colostate.cs415.model.Qualification qualification65 = company62.createQualification("");
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company68.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company68.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = company62.createWorker("hi!:0:0", qualificationSet70, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker74 = company50.createWorker("", qualificationSet70, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize75 = null;
        edu.colostate.cs415.model.Project project76 = company46.createProject("", qualificationSet70, projectSize75);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet77 = company46.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet78 = company46.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize79 = null;
        edu.colostate.cs415.model.Project project80 = company15.createProject("hi!:0:0", qualificationSet78, projectSize79);
        edu.colostate.cs415.model.Worker worker82 = company8.createWorker("hi!:0:1:0", qualificationSet78, (double) 1);
        edu.colostate.cs415.model.ProjectSize projectSize83 = null;
        edu.colostate.cs415.model.Project project84 = company1.createProject("hi!:0:1:32", qualificationSet78, projectSize83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass85 = project84.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(worker25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNull(worker41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNotNull(projectSet63);
        org.junit.Assert.assertNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNull(worker72);
        org.junit.Assert.assertNull(worker74);
        org.junit.Assert.assertNull(project76);
        org.junit.Assert.assertNotNull(projectSet77);
        org.junit.Assert.assertNotNull(qualificationSet78);
        org.junit.Assert.assertNull(project80);
        org.junit.Assert.assertNull(worker82);
        org.junit.Assert.assertNull(project84);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        qualification3.addWorker(worker48);
        java.lang.String str51 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("");
        java.lang.String str14 = company9.toString();
        boolean boolean15 = qualification3.equals((java.lang.Object) str14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification3.getWorkers();
        java.lang.String str17 = qualification3.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getAvailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company23.createProject("hi!", qualificationSet30, projectSize31);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification38 = company35.createQualification("");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = company35.createWorker("hi!:0:0", qualificationSet43, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker47 = company23.createWorker("", qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        edu.colostate.cs415.model.Project project49 = company19.createProject("", qualificationSet43, projectSize48);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company19.getProjects();
        edu.colostate.cs415.model.Qualification qualification54 = company19.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company19.getAvailableWorkers();
        boolean boolean56 = qualification3.equals((java.lang.Object) workerSet55);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertNull(worker47);
        org.junit.Assert.assertNull(project49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(projectSet52);
        org.junit.Assert.assertNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification11.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification11.toDTO();
        boolean boolean17 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getAvailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company23.createProject("hi!", qualificationSet30, projectSize31);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification38 = company35.createQualification("");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = company35.createWorker("hi!:0:0", qualificationSet43, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker47 = company23.createWorker("", qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        edu.colostate.cs415.model.Project project49 = company19.createProject("", qualificationSet43, projectSize48);
        boolean boolean50 = qualification3.equals((java.lang.Object) projectSize48);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification3.getWorkers();
        edu.colostate.cs415.model.Qualification qualification53 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str54 = qualification53.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification53.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification53.toDTO();
        edu.colostate.cs415.model.Qualification qualification58 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        boolean boolean65 = company61.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray71 = new edu.colostate.cs415.model.Qualification[] { qualification70 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet72 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet72, qualificationArray71);
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company61.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet72, projectSize74);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker78 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet76, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = worker78.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = worker78.getQualifications();
        qualification58.removeWorker(worker78);
        qualification53.addWorker(worker78);
        boolean boolean83 = worker78.isAvailable();
        qualification3.removeWorker(worker78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet85 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertNull(worker47);
        org.junit.Assert.assertNull(project49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(qualificationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNotNull(qualificationSet76);
        org.junit.Assert.assertNotNull(qualificationSet79);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(workerSet85);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray20 = new edu.colostate.cs415.model.Qualification[] { qualification19 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet21 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet21, qualificationArray20);
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company10.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet21, projectSize23);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker27.getQualifications();
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker27, project30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        boolean boolean42 = qualification37.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean49 = company45.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray55 = new edu.colostate.cs415.model.Qualification[] { qualification54 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet56 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet56, qualificationArray55);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company45.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet56, projectSize58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company45.getUnavailableWorkers();
        boolean boolean61 = qualification37.equals((java.lang.Object) workerSet60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        worker29.setSalary(10.0d);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker29.getQualifications();
        edu.colostate.cs415.model.Project project67 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.addProject(project67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet66);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.getName();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        edu.colostate.cs415.model.Qualification qualification17 = company14.createQualification("");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = company14.createWorker("hi!:0:0", qualificationSet22, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company9.createProject("hi!:0:0", qualificationSet22, projectSize25);
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        edu.colostate.cs415.model.Project project28 = company1.createProject("hi!:0:1:10", qualificationSet22, projectSize27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification33.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification33.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification33.toDTO();
        java.lang.Class<?> wildcardClass38 = qualificationDTO37.getClass();
        boolean boolean39 = company1.equals((java.lang.Object) qualificationDTO37);
        edu.colostate.cs415.model.Qualification qualification41 = company1.createQualification("hi!:0:0");
        java.lang.String str42 = qualification41.toString();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNull(worker24);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNull(project28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationDTO35);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean13 = qualification8.equals((java.lang.Object) workerSet12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company16.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, projectSize29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company16.getUnavailableWorkers();
        boolean boolean32 = qualification8.equals((java.lang.Object) workerSet31);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray45 = new edu.colostate.cs415.model.Qualification[] { qualification44 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet46 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet46, qualificationArray45);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        edu.colostate.cs415.model.Project project49 = company35.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet46, projectSize48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet50, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker52.getQualifications();
        worker52.setSalary((double) 10);
        qualification8.removeWorker(worker52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker52.getQualifications();
        edu.colostate.cs415.model.Worker worker59 = company2.createWorker("hi!", qualificationSet57, (double) '#');
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker61 = new edu.colostate.cs415.model.Worker("", qualificationSet57, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(project49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(worker59);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:1:10");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification12 = company9.createQualification("");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company9.createWorker("hi!:0:0", qualificationSet17, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company9.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company29.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize32 = null;
        edu.colostate.cs415.model.Project project33 = company24.createProject("hi!", qualificationSet31, projectSize32);
        edu.colostate.cs415.model.Worker worker35 = company9.createWorker("hi!", qualificationSet31, (double) 100.0f);
        java.lang.String str36 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getAvailableWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company49.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company44.createProject("hi!", qualificationSet51, projectSize52);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company56.getProjects();
        edu.colostate.cs415.model.Qualification qualification59 = company56.createQualification("");
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company62.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company62.getQualifications();
        edu.colostate.cs415.model.Worker worker66 = company56.createWorker("hi!:0:0", qualificationSet64, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker68 = company44.createWorker("", qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company40.createProject("", qualificationSet64, projectSize69);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet71 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company40.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company9.createProject("hi!:0:0", qualificationSet72, projectSize73);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize76 = null;
        edu.colostate.cs415.model.Project project77 = company1.createProject("hi!:0:0:0:0", qualificationSet75, projectSize76);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(worker19);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNull(project33);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNull(project53);
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNull(worker66);
        org.junit.Assert.assertNull(worker68);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNotNull(projectSet71);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertNull(project74);
        org.junit.Assert.assertNotNull(qualificationSet75);
        org.junit.Assert.assertNull(project77);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification7.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification7.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification7.toDTO();
        java.lang.Object obj12 = null;
        boolean boolean13 = qualification7.equals(obj12);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company16.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, projectSize29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = worker33.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = worker33.getQualifications();
        qualification7.addWorker(worker33);
        int int37 = worker33.getWorkload();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker33.willOverload(project38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO40 = worker33.toDTO();
        edu.colostate.cs415.model.Project project41 = null;
        boolean boolean42 = worker33.willOverload(project41);
        edu.colostate.cs415.model.Project project43 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker33, project43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerDTO40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean21 = qualification18.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification18.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean27 = qualification18.equals((java.lang.Object) qualification26);
        java.lang.String str28 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company32.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet47, (double) 0L);
        qualification26.removeWorker(worker49);
        edu.colostate.cs415.dto.WorkerDTO workerDTO51 = worker49.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO52 = worker49.toDTO();
        edu.colostate.cs415.model.Project project53 = null;
        boolean boolean54 = worker49.willOverload(project53);
        boolean boolean55 = worker49.isAvailable();
        java.lang.String str56 = worker49.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker49.getQualifications();
        qualification3.removeWorker(worker49);
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker49.removeProject(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(workerDTO51);
        org.junit.Assert.assertNotNull(workerDTO52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet57);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getAvailableWorkers();
        java.lang.String str10 = company8.toString();
        java.lang.String str11 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company8.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company1.createProject("hi!", qualificationSet12, projectSize13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        java.lang.String str46 = worker34.getName();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean53 = company49.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray59 = new edu.colostate.cs415.model.Qualification[] { qualification58 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet60 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet60, qualificationArray59);
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company49.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet60, projectSize62);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company49.getQualifications();
        edu.colostate.cs415.model.Worker worker66 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet64, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = worker66.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = worker66.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO69 = worker66.toDTO();
        boolean boolean70 = worker34.equals((java.lang.Object) workerDTO69);
        int int71 = worker34.getWorkload();
        java.lang.Class<?> wildcardClass72 = worker34.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNotNull(workerDTO69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.String str8 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("");
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNull(qualification8);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        boolean boolean33 = qualification28.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification28.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification28.getWorkers();
        boolean boolean36 = worker21.equals((java.lang.Object) workerSet35);
        double double37 = worker21.getSalary();
        int int38 = worker21.getWorkload();
        boolean boolean39 = worker21.isAvailable();
        java.lang.String str40 = worker21.toString();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getAvailableWorkers();
        java.lang.String str44 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnavailableWorkers();
        java.lang.String str46 = company42.toString();
        java.lang.String str47 = company42.toString();
        java.lang.Object obj48 = null;
        boolean boolean49 = company42.equals(obj48);
        boolean boolean50 = worker21.equals((java.lang.Object) boolean49);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = worker21.getProjects();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:1:0" + "'", str40, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(projectSet51);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company16.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, projectSize29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company16.getUnassignedWorkers();
        java.lang.String str32 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company16.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company37.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str43 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company42.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company50.createProject("hi!", qualificationSet57, projectSize58);
        edu.colostate.cs415.model.Worker worker61 = company47.createWorker("", qualificationSet57, 1.0d);
        edu.colostate.cs415.model.Worker worker63 = company42.createWorker("hi!", qualificationSet57, (double) (-1.0f));
        boolean boolean64 = company37.equals((java.lang.Object) qualificationSet57);
        edu.colostate.cs415.model.Worker worker66 = company16.createWorker("hi!", qualificationSet57, (double) (-1));
        edu.colostate.cs415.model.Worker worker68 = company7.createWorker("hi!:0:0", qualificationSet57, (double) (short) 10);
        edu.colostate.cs415.model.Worker worker70 = company1.createWorker("hi!", qualificationSet57, (double) (-1));
        edu.colostate.cs415.model.Project project71 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertNull(worker63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(worker66);
        org.junit.Assert.assertNull(worker68);
        org.junit.Assert.assertNull(worker70);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getAvailableWorkers();
        java.lang.String str10 = company8.toString();
        java.lang.String str11 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company8.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company1.createProject("hi!", qualificationSet12, projectSize13);
        java.lang.String str15 = company1.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company18.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getAvailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str31 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company30.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company43.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize46 = null;
        edu.colostate.cs415.model.Project project47 = company38.createProject("hi!", qualificationSet45, projectSize46);
        edu.colostate.cs415.model.Worker worker49 = company35.createWorker("", qualificationSet45, 1.0d);
        edu.colostate.cs415.model.Worker worker51 = company30.createWorker("hi!", qualificationSet45, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company30.getAssignedWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str56 = company55.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company55.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company68.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company68.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize71 = null;
        edu.colostate.cs415.model.Project project72 = company63.createProject("hi!", qualificationSet70, projectSize71);
        edu.colostate.cs415.model.Worker worker74 = company60.createWorker("", qualificationSet70, 1.0d);
        edu.colostate.cs415.model.Worker worker76 = company55.createWorker("hi!", qualificationSet70, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company55.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company55.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification80 = company55.createQualification("");
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company83.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = company83.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize86 = null;
        edu.colostate.cs415.model.Project project87 = company55.createProject("hi!:0:0", qualificationSet85, projectSize86);
        edu.colostate.cs415.model.Worker worker89 = company30.createWorker("", qualificationSet85, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize90 = null;
        edu.colostate.cs415.model.Project project91 = company18.createProject("hi!:0:0", qualificationSet85, projectSize90);
        edu.colostate.cs415.model.ProjectSize projectSize92 = null;
        edu.colostate.cs415.model.Project project93 = company1.createProject("hi!:0:0", qualificationSet85, projectSize92);
        edu.colostate.cs415.model.Project project94 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNull(project47);
        org.junit.Assert.assertNull(worker49);
        org.junit.Assert.assertNull(worker51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0" + "'", str56, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNull(project72);
        org.junit.Assert.assertNull(worker74);
        org.junit.Assert.assertNull(worker76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet84);
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertNull(project87);
        org.junit.Assert.assertNull(worker89);
        org.junit.Assert.assertNull(project91);
        org.junit.Assert.assertNull(project93);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Worker worker21 = company7.createWorker("", qualificationSet17, 1.0d);
        edu.colostate.cs415.model.Worker worker23 = company2.createWorker("hi!", qualificationSet17, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company40.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company35.createProject("hi!", qualificationSet42, projectSize43);
        edu.colostate.cs415.model.Worker worker46 = company32.createWorker("", qualificationSet42, 1.0d);
        edu.colostate.cs415.model.Worker worker48 = company27.createWorker("hi!", qualificationSet42, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company27.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification52 = company27.createQualification("");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company27.createProject("hi!:0:0", qualificationSet57, projectSize58);
        edu.colostate.cs415.model.Worker worker61 = company2.createWorker("", qualificationSet57, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker63 = new edu.colostate.cs415.model.Worker("", qualificationSet57, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNull(worker23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNull(worker48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNull(worker61);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = company2.createWorker("hi!:0:0", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification14 = company2.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.ProjectSize projectSize32 = null;
        edu.colostate.cs415.model.Project project33 = company19.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, projectSize32);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet34, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker36.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker36.getQualifications();
        qualification16.removeWorker(worker36);
        boolean boolean40 = company2.equals((java.lang.Object) worker36);
        edu.colostate.cs415.model.Project project41 = null;
        boolean boolean42 = worker36.willOverload(project41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = worker36.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("", qualificationSet43, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNull(worker12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(project33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationSet43);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = company2.createWorker("hi!:0:0", qualificationSet10, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company2.getProjects();
        java.lang.String str14 = company2.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getAvailableWorkers();
        java.lang.String str19 = company17.toString();
        java.lang.String str20 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = company2.createWorker("hi!:0:0", qualificationSet21, 1.0d);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("", qualificationSet21, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNull(worker12);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNull(worker23);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        edu.colostate.cs415.model.Qualification qualification18 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company2.getAvailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str24 = company23.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getAvailableWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company36.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company31.createProject("hi!", qualificationSet38, projectSize39);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company43.getProjects();
        edu.colostate.cs415.model.Qualification qualification46 = company43.createQualification("");
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company49.getQualifications();
        edu.colostate.cs415.model.Worker worker53 = company43.createWorker("hi!:0:0", qualificationSet51, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker55 = company31.createWorker("", qualificationSet51, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company27.createProject("", qualificationSet51, projectSize56);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company23.createProject("hi!:0:0", qualificationSet51, projectSize58);
        edu.colostate.cs415.model.Worker worker61 = company2.createWorker("hi!", qualificationSet51, (double) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker63 = new edu.colostate.cs415.model.Worker("hi!:0:1:32", qualificationSet51, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNull(worker53);
        org.junit.Assert.assertNull(worker55);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNull(worker61);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        boolean boolean48 = qualification3.equals((java.lang.Object) worker46);
        edu.colostate.cs415.model.Project project49 = null;
        boolean boolean50 = worker46.willOverload(project49);
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker46.addProject(project51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification12.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification12.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        java.lang.Object obj17 = null;
        boolean boolean18 = qualification12.equals(obj17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker38.getQualifications();
        qualification12.addWorker(worker38);
        boolean boolean42 = qualification3.equals((java.lang.Object) worker38);
        edu.colostate.cs415.model.Project project43 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.removeProject(project43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        worker34.setSalary((double) 10.0f);
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        boolean boolean45 = company41.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company41.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getUnavailableWorkers();
        boolean boolean49 = worker34.equals((java.lang.Object) company41);
        java.lang.Class<?> wildcardClass50 = worker34.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company6.getUnavailableWorkers();
        boolean boolean39 = company1.equals((java.lang.Object) company6);
        java.lang.String str40 = company1.getName();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker60.getQualifications();
        worker60.setSalary((double) 10);
        worker60.setSalary(10.0d);
        boolean boolean66 = worker60.isAvailable();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company16.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize19 = null;
        edu.colostate.cs415.model.Project project20 = company11.createProject("hi!", qualificationSet18, projectSize19);
        edu.colostate.cs415.model.Worker worker22 = company8.createWorker("", qualificationSet18, 1.0d);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str26 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company25.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company33.createProject("hi!", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Worker worker44 = company30.createWorker("", qualificationSet40, 1.0d);
        edu.colostate.cs415.model.Worker worker46 = company25.createWorker("hi!", qualificationSet40, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company25.getAssignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str51 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company50.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company63.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = company63.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize66 = null;
        edu.colostate.cs415.model.Project project67 = company58.createProject("hi!", qualificationSet65, projectSize66);
        edu.colostate.cs415.model.Worker worker69 = company55.createWorker("", qualificationSet65, 1.0d);
        edu.colostate.cs415.model.Worker worker71 = company50.createWorker("hi!", qualificationSet65, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company50.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company50.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification75 = company50.createQualification("");
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company78.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = company78.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize81 = null;
        edu.colostate.cs415.model.Project project82 = company50.createProject("hi!:0:0", qualificationSet80, projectSize81);
        edu.colostate.cs415.model.Worker worker84 = company25.createWorker("", qualificationSet80, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize85 = null;
        edu.colostate.cs415.model.Project project86 = company8.createProject("hi!:0:0", qualificationSet80, projectSize85);
        java.lang.String str87 = company8.getName();
        boolean boolean88 = qualification3.equals((java.lang.Object) str87);
        java.lang.String str89 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNull(project20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNull(worker44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0" + "'", str51, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertNotNull(qualificationSet65);
        org.junit.Assert.assertNull(project67);
        org.junit.Assert.assertNull(worker69);
        org.junit.Assert.assertNull(worker71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertNull(project82);
        org.junit.Assert.assertNull(worker84);
        org.junit.Assert.assertNull(project86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(workerSet35);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAvailableWorkers();
        java.lang.String str26 = company1.toString();
        edu.colostate.cs415.model.Project project27 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company7.createProject("hi!", qualificationSet14, projectSize15);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company19.getProjects();
        edu.colostate.cs415.model.Qualification qualification22 = company19.createQualification("");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = company19.createWorker("hi!:0:0", qualificationSet27, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker31 = company7.createWorker("", qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker33 = company1.createWorker("", qualificationSet27, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getUnavailableWorkers();
        java.lang.String str35 = company1.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker19.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO22 = worker19.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker19.getQualifications();
        java.lang.String str24 = worker19.getName();
        boolean boolean25 = worker19.isAvailable();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray38 = new edu.colostate.cs415.model.Qualification[] { qualification37 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet39 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet39, qualificationArray38);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company28.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet39, projectSize41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker45.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker45.getQualifications();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company49.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company49.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company49.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification55 = company49.createQualification("hi!:0:0");
        worker45.addQualification(qualification55);
        worker19.addQualification(qualification55);
        boolean boolean58 = worker19.isAvailable();
        int int59 = worker19.getWorkload();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerDTO22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company51.getProjects();
        edu.colostate.cs415.model.Qualification qualification54 = company51.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company51.getAssignedWorkers();
        boolean boolean56 = worker48.equals((java.lang.Object) workerSet55);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean63 = qualification60.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = qualification60.getWorkers();
        worker48.addQualification(qualification60);
        boolean boolean66 = worker48.isAvailable();
        qualification3.removeWorker(worker48);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(projectSet52);
        org.junit.Assert.assertNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean49 = qualification46.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification46.getWorkers();
        worker34.addQualification(qualification46);
        boolean boolean52 = worker34.isAvailable();
        java.lang.String str53 = worker34.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:1:0" + "'", str53, "hi!:0:1:0");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification16.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company22.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = worker39.getQualifications();
        qualification16.removeWorker(worker39);
        java.lang.String str43 = worker39.getName();
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker39, project44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company11.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company18.createQualification("");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company18.createWorker("hi!:0:0", qualificationSet26, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company11.createWorker("", qualificationSet29, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getAvailableWorkers();
        boolean boolean37 = company11.equals((java.lang.Object) workerSet36);
        boolean boolean38 = qualification3.equals((java.lang.Object) company11);
        java.lang.String str39 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = worker34.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(projectSet43);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        java.lang.String str8 = qualification3.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        boolean boolean17 = qualification12.equals((java.lang.Object) workerSet16);
        java.lang.String str18 = qualification12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification12.getWorkers();
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean27 = qualification24.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean33 = qualification24.equals((java.lang.Object) qualification32);
        java.lang.String str34 = qualification32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray48 = new edu.colostate.cs415.model.Qualification[] { qualification47 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet49 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet49, qualificationArray48);
        edu.colostate.cs415.model.ProjectSize projectSize51 = null;
        edu.colostate.cs415.model.Project project52 = company38.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet49, projectSize51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) 0L);
        qualification32.removeWorker(worker55);
        boolean boolean57 = qualification12.equals((java.lang.Object) worker55);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        boolean boolean63 = company59.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification68 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.ProjectSize projectSize72 = null;
        edu.colostate.cs415.model.Project project73 = company59.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, projectSize72);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company59.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification76 = company59.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company59.getUnassignedWorkers();
        boolean boolean78 = worker55.equals((java.lang.Object) company59);
        qualification3.removeWorker(worker55);
        edu.colostate.cs415.model.Company company81 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company81.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company81.getAssignedWorkers();
        boolean boolean84 = qualification3.equals((java.lang.Object) company81);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet85 = company81.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(project52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(project73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertNotNull(workerSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(projectSet85);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO24 = worker21.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker21.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!:0:2:0", qualificationSet26, (double) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("", qualificationSet26, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerDTO24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company1.getQualifications();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str26 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company25.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company33.createProject("hi!", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Worker worker44 = company30.createWorker("", qualificationSet40, 1.0d);
        edu.colostate.cs415.model.Worker worker46 = company25.createWorker("hi!", qualificationSet40, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company25.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company25.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification50 = company25.createQualification("hi!:0:1:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company25.getAvailableWorkers();
        boolean boolean52 = company1.equals((java.lang.Object) company25);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company55.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification59 = company55.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company67.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company67.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        edu.colostate.cs415.model.Project project71 = company62.createProject("hi!", qualificationSet69, projectSize70);
        edu.colostate.cs415.model.ProjectSize projectSize72 = null;
        edu.colostate.cs415.model.Project project73 = company55.createProject("hi!", qualificationSet69, projectSize72);
        edu.colostate.cs415.model.Worker worker75 = company25.createWorker("", qualificationSet69, 100.0d);
        edu.colostate.cs415.model.Project project76 = null;
        // The following exception was thrown during execution in test generation
        try {
            company25.finish(project76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNull(worker44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualificationSet69);
        org.junit.Assert.assertNull(project71);
        org.junit.Assert.assertNull(project73);
        org.junit.Assert.assertNull(worker75);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0");
        java.lang.String str19 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean16 = qualification7.equals((java.lang.Object) qualification15);
        java.lang.String str17 = qualification15.toString();
        java.lang.String str18 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean26 = qualification23.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification30.toDTO();
        boolean boolean32 = qualification23.equals((java.lang.Object) qualificationDTO31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean40 = qualification37.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO41 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean46 = qualification37.equals((java.lang.Object) qualification45);
        java.lang.String str47 = qualification45.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification45.getWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        boolean boolean55 = company51.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray61 = new edu.colostate.cs415.model.Qualification[] { qualification60 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet62 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet62, qualificationArray61);
        edu.colostate.cs415.model.ProjectSize projectSize64 = null;
        edu.colostate.cs415.model.Project project65 = company51.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet62, projectSize64);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company51.getQualifications();
        edu.colostate.cs415.model.Worker worker68 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet66, (double) 0L);
        qualification45.removeWorker(worker68);
        qualification23.addWorker(worker68);
        edu.colostate.cs415.dto.WorkerDTO workerDTO71 = worker68.toDTO();
        java.lang.String str72 = worker68.getName();
        qualification15.addWorker(worker68);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualificationDTO41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(qualificationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(project65);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerDTO71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company6.createProject("hi!", qualificationSet13, projectSize14);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company18.createQualification("");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company18.createWorker("hi!:0:0", qualificationSet26, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker30 = company6.createWorker("", qualificationSet26, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company2.createProject("", qualificationSet26, projectSize31);
        java.lang.String str33 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company2.createProject("hi!:0:0:0:0", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str46 = company45.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company45.getUnavailableWorkers();
        java.lang.String str48 = company45.toString();
        boolean boolean50 = company45.equals((java.lang.Object) (-1L));
        java.lang.String str51 = company45.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company45.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company45.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company45.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        edu.colostate.cs415.model.Project project56 = company2.createProject("hi!:0:2:0", qualificationSet54, projectSize55);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker58 = new edu.colostate.cs415.model.Worker("hi!:0:1:32:0:1:12", qualificationSet54, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertNull(worker30);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNull(project56);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getAvailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company15.createProject("hi!", qualificationSet22, projectSize23);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company27.createQualification("");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = company27.createWorker("hi!:0:0", qualificationSet35, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker39 = company15.createWorker("", qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company11.createProject("", qualificationSet35, projectSize40);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company7.createProject("hi!:0:0", qualificationSet35, projectSize42);
        edu.colostate.cs415.model.Worker worker45 = company1.createWorker("hi!", qualificationSet35, (double) 1L);
        edu.colostate.cs415.model.Project project46 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNull(worker45);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        java.lang.String str13 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str18 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("");
        java.lang.String str22 = company17.toString();
        boolean boolean23 = qualification11.equals((java.lang.Object) str22);
        boolean boolean24 = company1.equals((java.lang.Object) qualification11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project27 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNull(qualification21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification24 = company21.createQualification("");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company21.createWorker("hi!:0:0", qualificationSet29, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker33 = company9.createWorker("", qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company5.createProject("", qualificationSet29, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company1.createWorker("hi!:0:0", qualificationSet29, 0.0d);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company1.getProjects();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company41.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company41.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company1.createProject("", qualificationSet44, projectSize45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass47 = project46.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNull(project46);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray19 = new edu.colostate.cs415.model.Qualification[] { qualification18 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet20 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet20, qualificationArray19);
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company9.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet20, projectSize22);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 0L);
        worker26.setSalary((double) 0.0f);
        int int29 = worker26.getWorkload();
        worker26.setSalary(100.0d);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = worker26.getQualifications();
        edu.colostate.cs415.model.Project project33 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker26, project33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(qualificationSet32);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Worker worker7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getAvailableWorkers();
        java.lang.String str10 = company8.toString();
        java.lang.String str11 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company8.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company1.createProject("hi!", qualificationSet12, projectSize13);
        java.lang.String str15 = company1.toString();
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        boolean boolean48 = qualification3.equals((java.lang.Object) worker46);
        worker46.setSalary((double) 'a');
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification54.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification54.getWorkers();
        java.lang.String str58 = qualification54.toString();
        worker46.addQualification(qualification54);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification54.getWorkers();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification64.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification64.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification64.getWorkers();
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification72.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO74 = qualification72.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification72.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO76 = qualification72.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO77 = qualification72.toDTO();
        boolean boolean78 = qualification64.equals((java.lang.Object) qualification72);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification72.toDTO();
        boolean boolean80 = qualification54.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification54.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNotNull(qualificationDTO74);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertNotNull(qualificationDTO76);
        org.junit.Assert.assertNotNull(qualificationDTO77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.removeProject(project38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!:0:1:0", qualificationSet23, (double) (short) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker25.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project28 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet26, projectSize27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualificationSet26);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean31 = qualification28.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification28.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification28.toDTO();
        worker21.addQualification(qualification28);
        edu.colostate.cs415.model.Project project35 = null;
        boolean boolean36 = worker21.willOverload(project35);
        worker21.setSalary((double) ' ');
        java.lang.String str39 = worker21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = worker21.getProjects();
        edu.colostate.cs415.model.Project project41 = null;
        boolean boolean42 = worker21.willOverload(project41);
        edu.colostate.cs415.model.Project project43 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker21.removeProject(project43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:1:32" + "'", str39, "hi!:0:1:32");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        java.lang.String str46 = worker34.toString();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.removeProject(project47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:1:0" + "'", str46, "hi!:0:1:0");
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.lang.String str7 = company2.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.ProjectSize projectSize32 = null;
        edu.colostate.cs415.model.Project project33 = company19.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, projectSize32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company19.getUnassignedWorkers();
        java.lang.String str35 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company19.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company19.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company40.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str46 = company45.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company45.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company58.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company53.createProject("hi!", qualificationSet60, projectSize61);
        edu.colostate.cs415.model.Worker worker64 = company50.createWorker("", qualificationSet60, 1.0d);
        edu.colostate.cs415.model.Worker worker66 = company45.createWorker("hi!", qualificationSet60, (double) (-1.0f));
        boolean boolean67 = company40.equals((java.lang.Object) qualificationSet60);
        edu.colostate.cs415.model.Worker worker69 = company19.createWorker("hi!", qualificationSet60, (double) (-1));
        edu.colostate.cs415.model.Worker worker71 = company10.createWorker("hi!:0:0", qualificationSet60, (double) (short) 10);
        edu.colostate.cs415.model.Worker worker73 = company2.createWorker("hi!:0:0", qualificationSet60, (double) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker75 = new edu.colostate.cs415.model.Worker("hi!:0:1:0", qualificationSet60, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(project33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNull(worker64);
        org.junit.Assert.assertNull(worker66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(worker69);
        org.junit.Assert.assertNull(worker71);
        org.junit.Assert.assertNull(worker73);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:1:0");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray17 = new edu.colostate.cs415.model.Qualification[] { qualification16 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet18 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet18, qualificationArray17);
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        edu.colostate.cs415.model.Project project21 = company7.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet18, projectSize20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker24.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO27 = worker24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker24.getQualifications();
        boolean boolean29 = qualification4.equals((java.lang.Object) qualificationSet28);
        edu.colostate.cs415.model.Qualification qualification31 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        boolean boolean38 = company34.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.ProjectSize projectSize47 = null;
        edu.colostate.cs415.model.Project project48 = company34.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, projectSize47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker51.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker51.getQualifications();
        qualification31.removeWorker(worker51);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean61 = qualification58.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification58.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification58.toDTO();
        worker51.addQualification(qualification58);
        edu.colostate.cs415.model.Project project65 = null;
        boolean boolean66 = worker51.willOverload(project65);
        worker51.setSalary((double) ' ');
        java.lang.String str69 = worker51.toString();
        qualification4.removeWorker(worker51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification4.toDTO();
        boolean boolean73 = qualification4.equals((java.lang.Object) "hi!:0:1:32");
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(project21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerDTO27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(project48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:1:32" + "'", str69, "hi!:0:1:32");
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("");
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNull(qualification8);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification17 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker37.getQualifications();
        qualification17.removeWorker(worker37);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        boolean boolean49 = qualification44.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification44.getWorkers();
        boolean boolean52 = worker37.equals((java.lang.Object) workerSet51);
        qualification3.addWorker(worker37);
        double double54 = worker37.getSalary();
        java.lang.Class<?> wildcardClass55 = worker37.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.lang.String str4 = company2.toString();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!:0:1:32", qualificationSet7, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        boolean boolean40 = worker34.isAvailable();
        java.lang.String str41 = worker34.getName();
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.removeProject(project42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification24 = company21.createQualification("");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company21.createWorker("hi!:0:0", qualificationSet29, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker33 = company9.createWorker("", qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company5.createProject("", qualificationSet29, projectSize34);
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        edu.colostate.cs415.model.Project project37 = company1.createProject("hi!:0:0", qualificationSet29, projectSize36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification44 = company41.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company41.getAssignedWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company48.getProjects();
        edu.colostate.cs415.model.Qualification qualification51 = company48.createQualification("");
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company54.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = company48.createWorker("hi!:0:0", qualificationSet56, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = company41.createWorker("", qualificationSet59, (double) 'a');
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company1.createProject("hi!:0:0", qualificationSet59, projectSize62);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet64 = company1.getProjects();
        java.lang.Class<?> wildcardClass65 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(project37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(projectSet49);
        org.junit.Assert.assertNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNull(worker58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertNotNull(projectSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.lang.String str14 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("");
        edu.colostate.cs415.model.Worker worker18 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNull(qualification17);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray24 = new edu.colostate.cs415.model.Qualification[] { qualification23 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet25 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet25, qualificationArray24);
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        edu.colostate.cs415.model.Project project28 = company14.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet25, projectSize27);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = worker31.getQualifications();
        worker31.setSalary((double) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = worker31.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker31.getQualifications();
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker31, project37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(project28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean22 = qualification13.equals((java.lang.Object) qualification21);
        java.lang.String str23 = qualification21.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company27.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, projectSize40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet42, (double) 0L);
        qualification21.removeWorker(worker44);
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker44.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO47 = worker44.toDTO();
        edu.colostate.cs415.model.Project project48 = null;
        boolean boolean49 = worker44.willOverload(project48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker44.toDTO();
        boolean boolean51 = worker44.isAvailable();
        double double52 = worker44.getSalary();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertNotNull(workerDTO47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.lang.String str23 = worker19.toString();
        worker19.setSalary((double) ' ');
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getAvailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company33.createProject("hi!", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company45.getProjects();
        edu.colostate.cs415.model.Qualification qualification48 = company45.createQualification("");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = company45.createWorker("hi!:0:0", qualificationSet53, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker57 = company33.createWorker("", qualificationSet53, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker59 = company27.createWorker("", qualificationSet53, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company27.getUnavailableWorkers();
        boolean boolean61 = worker19.equals((java.lang.Object) company27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company27.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:1:10" + "'", str23, "hi!:0:1:10");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(worker55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(workerSet62);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        boolean boolean14 = qualification9.equals((java.lang.Object) workerSet13);
        java.lang.String str15 = qualification9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification9.getWorkers();
        java.lang.String str17 = qualification9.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean30 = qualification21.equals((java.lang.Object) qualification29);
        java.lang.String str31 = qualification29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray45 = new edu.colostate.cs415.model.Qualification[] { qualification44 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet46 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet46, qualificationArray45);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        edu.colostate.cs415.model.Project project49 = company35.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet46, projectSize48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet50, (double) 0L);
        qualification29.removeWorker(worker52);
        boolean boolean54 = qualification9.equals((java.lang.Object) worker52);
        edu.colostate.cs415.model.Project project55 = null;
        boolean boolean56 = worker52.willOverload(project55);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = worker52.getProjects();
        qualification3.removeWorker(worker52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(project49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNotNull(qualificationDTO59);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company11.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company18.createQualification("");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company18.createWorker("hi!:0:0", qualificationSet26, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company11.createWorker("", qualificationSet29, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getAvailableWorkers();
        boolean boolean37 = company11.equals((java.lang.Object) workerSet36);
        boolean boolean38 = qualification3.equals((java.lang.Object) company11);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification42.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification42.toDTO();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray58 = new edu.colostate.cs415.model.Qualification[] { qualification57 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet59 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet59, qualificationArray58);
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company48.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet59, projectSize61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker65 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet63, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker65.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = worker65.getQualifications();
        qualification42.removeWorker(worker65);
        edu.colostate.cs415.model.Project project69 = null;
        boolean boolean70 = worker65.willOverload(project69);
        edu.colostate.cs415.model.Project project71 = null;
        boolean boolean72 = worker65.willOverload(project71);
        // The following exception was thrown during execution in test generation
        try {
            company11.unassignAll(worker65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        java.lang.String str16 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company22.createProject("hi!", qualificationSet29, projectSize30);
        edu.colostate.cs415.model.Worker worker33 = company19.createWorker("", qualificationSet29, 1.0d);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str37 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company36.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company49.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company44.createProject("hi!", qualificationSet51, projectSize52);
        edu.colostate.cs415.model.Worker worker55 = company41.createWorker("", qualificationSet51, 1.0d);
        edu.colostate.cs415.model.Worker worker57 = company36.createWorker("hi!", qualificationSet51, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company36.getAssignedWorkers();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str62 = company61.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company61.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company74.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company74.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize77 = null;
        edu.colostate.cs415.model.Project project78 = company69.createProject("hi!", qualificationSet76, projectSize77);
        edu.colostate.cs415.model.Worker worker80 = company66.createWorker("", qualificationSet76, 1.0d);
        edu.colostate.cs415.model.Worker worker82 = company61.createWorker("hi!", qualificationSet76, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company61.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company61.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification86 = company61.createQualification("");
        edu.colostate.cs415.model.Company company89 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet90 = company89.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company89.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize92 = null;
        edu.colostate.cs415.model.Project project93 = company61.createProject("hi!:0:0", qualificationSet91, projectSize92);
        edu.colostate.cs415.model.Worker worker95 = company36.createWorker("", qualificationSet91, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize96 = null;
        edu.colostate.cs415.model.Project project97 = company19.createProject("hi!:0:0", qualificationSet91, projectSize96);
        java.lang.String str98 = company19.getName();
        boolean boolean99 = qualification3.equals((java.lang.Object) company19);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNull(project53);
        org.junit.Assert.assertNull(worker55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0" + "'", str62, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertNotNull(qualificationSet76);
        org.junit.Assert.assertNull(project78);
        org.junit.Assert.assertNull(worker80);
        org.junit.Assert.assertNull(worker82);
        org.junit.Assert.assertNotNull(workerSet83);
        org.junit.Assert.assertNotNull(workerSet84);
        org.junit.Assert.assertNull(qualification86);
        org.junit.Assert.assertNotNull(workerSet90);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertNull(project93);
        org.junit.Assert.assertNull(worker95);
        org.junit.Assert.assertNull(project97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO40 = worker34.toDTO();
        worker34.setSalary(1.0d);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str45 = company44.toString();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getAvailableWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company57.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize60 = null;
        edu.colostate.cs415.model.Project project61 = company52.createProject("hi!", qualificationSet59, projectSize60);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet65 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification67 = company64.createQualification("");
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company70.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company70.getQualifications();
        edu.colostate.cs415.model.Worker worker74 = company64.createWorker("hi!:0:0", qualificationSet72, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker76 = company52.createWorker("", qualificationSet72, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize77 = null;
        edu.colostate.cs415.model.Project project78 = company48.createProject("", qualificationSet72, projectSize77);
        edu.colostate.cs415.model.ProjectSize projectSize79 = null;
        edu.colostate.cs415.model.Project project80 = company44.createProject("hi!:0:0", qualificationSet72, projectSize79);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet81 = company44.getProjects();
        java.lang.String str82 = company44.getName();
        boolean boolean83 = worker34.equals((java.lang.Object) str82);
        edu.colostate.cs415.model.Project project84 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.addProject(project84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerDTO40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNull(project61);
        org.junit.Assert.assertNotNull(projectSet65);
        org.junit.Assert.assertNull(qualification67);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertNull(worker74);
        org.junit.Assert.assertNull(worker76);
        org.junit.Assert.assertNull(project78);
        org.junit.Assert.assertNull(project80);
        org.junit.Assert.assertNotNull(projectSet81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker19.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO22 = worker19.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker19.getQualifications();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean30 = qualification27.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification27.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        boolean boolean36 = qualification27.equals((java.lang.Object) qualification35);
        worker19.addQualification(qualification27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification27.getWorkers();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerDTO22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        edu.colostate.cs415.dto.WorkerDTO workerDTO48 = worker46.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker46.toDTO();
        edu.colostate.cs415.model.Project project50 = null;
        boolean boolean51 = worker46.willOverload(project50);
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            company9.unassign(worker46, project52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNotNull(workerDTO48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("");
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNull(qualification6);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.lang.String str14 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company1.getQualifications();
        java.lang.String str16 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project18 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.lang.String str32 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getAvailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company49.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company44.createProject("hi!", qualificationSet51, projectSize52);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company56.getProjects();
        edu.colostate.cs415.model.Qualification qualification59 = company56.createQualification("");
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company62.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company62.getQualifications();
        edu.colostate.cs415.model.Worker worker66 = company56.createWorker("hi!:0:0", qualificationSet64, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker68 = company44.createWorker("", qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker70 = company38.createWorker("", qualificationSet64, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet72 = company38.getProjects();
        boolean boolean73 = qualification35.equals((java.lang.Object) projectSet72);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        boolean boolean80 = company76.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray86 = new edu.colostate.cs415.model.Qualification[] { qualification85 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet87 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet87, qualificationArray86);
        edu.colostate.cs415.model.ProjectSize projectSize89 = null;
        edu.colostate.cs415.model.Project project90 = company76.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet87, projectSize89);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company76.getQualifications();
        edu.colostate.cs415.model.Worker worker93 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet91, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet94 = worker93.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet95 = worker93.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO96 = worker93.toDTO();
        qualification35.removeWorker(worker93);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO98 = qualification35.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNull(project53);
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNull(worker66);
        org.junit.Assert.assertNull(worker68);
        org.junit.Assert.assertNull(worker70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(projectSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(project90);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertNotNull(qualificationSet94);
        org.junit.Assert.assertNotNull(qualificationSet95);
        org.junit.Assert.assertNotNull(workerDTO96);
        org.junit.Assert.assertNotNull(qualificationDTO98);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!:0:1:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray18 = new edu.colostate.cs415.model.Qualification[] { qualification17 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet19 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet19, qualificationArray18);
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company8.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet19, projectSize21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker25.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = worker25.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO28 = worker25.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker25.getQualifications();
        boolean boolean30 = qualification5.equals((java.lang.Object) qualificationSet29);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project32 = new edu.colostate.cs415.model.Project("hi!:0:2:0", qualificationSet29, projectSize31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(workerDTO28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker29.willOverload(project34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker29.toDTO();
        edu.colostate.cs415.model.Project project37 = null;
        boolean boolean38 = worker29.willOverload(project37);
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.removeProject(project39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) false);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.getName();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        java.lang.String str11 = company8.toString();
        boolean boolean13 = company8.equals((java.lang.Object) (-1L));
        java.lang.String str14 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company8.getQualifications();
        boolean boolean18 = company1.equals((java.lang.Object) company8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company8.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(workerSet19);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company15.createProject("hi!", qualificationSet22, projectSize23);
        edu.colostate.cs415.model.Worker worker26 = company12.createWorker("", qualificationSet22, 1.0d);
        edu.colostate.cs415.model.Worker worker28 = company7.createWorker("hi!", qualificationSet22, (double) (-1.0f));
        boolean boolean29 = company2.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project31 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet22, projectSize30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNull(worker26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean21 = qualification12.equals((java.lang.Object) qualification20);
        java.lang.String str22 = qualification20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company26.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, projectSize39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0L);
        qualification20.removeWorker(worker43);
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker43.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker43.toDTO();
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker43.willOverload(project47);
        qualification8.addWorker(worker43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification8.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(workerSet50);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean25 = qualification16.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean32 = qualification29.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean38 = qualification29.equals((java.lang.Object) qualification37);
        java.lang.String str39 = qualification37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        qualification37.removeWorker(worker60);
        qualification24.addWorker(worker60);
        qualification11.removeWorker(worker60);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification67.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification67.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO70 = qualification67.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification67.toDTO();
        java.lang.Object obj72 = null;
        boolean boolean73 = qualification67.equals(obj72);
        worker60.addQualification(qualification67);
        edu.colostate.cs415.model.Project project75 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker60.removeProject(project75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertNotNull(qualificationDTO70);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company11.getUnavailableWorkers();
        boolean boolean27 = qualification3.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification39 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company30.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, projectSize43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker47.getQualifications();
        worker47.setSalary((double) 10);
        qualification3.removeWorker(worker47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationDTO53);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        edu.colostate.cs415.model.Project project13 = company4.createProject("hi!", qualificationSet11, projectSize12);
        edu.colostate.cs415.model.Worker worker15 = company1.createWorker("", qualificationSet11, 1.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company26.createProject("hi!", qualificationSet33, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company23.createWorker("", qualificationSet33, 1.0d);
        edu.colostate.cs415.model.Worker worker39 = company18.createWorker("hi!", qualificationSet33, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str44 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company43.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company48.createWorker("", qualificationSet58, 1.0d);
        edu.colostate.cs415.model.Worker worker64 = company43.createWorker("hi!", qualificationSet58, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company43.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company43.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification68 = company43.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company43.createProject("hi!:0:0", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.Worker worker77 = company18.createWorker("", qualificationSet73, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification82 = company1.createQualification("hi!:0:1:97");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNull(project13);
        org.junit.Assert.assertNull(worker15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(worker64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertNotNull(workerSet83);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.lang.String str23 = worker19.toString();
        boolean boolean24 = worker19.isAvailable();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:1:10" + "'", str23, "hi!:0:1:10");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Qualification qualification9 = company2.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project13 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet11, projectSize12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company8.createQualification("");
        java.lang.String str13 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getUnassignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getEmployedWorkers();
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company8.finish(project17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNull(qualification12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(workerSet16);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        java.lang.String str23 = company1.toString();
        java.lang.String str24 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company1.getQualifications();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        worker46.setSalary((double) 0.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker46.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker46.toDTO();
        boolean boolean51 = worker46.isAvailable();
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker46, project52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company7.createProject("hi!", qualificationSet14, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("", qualificationSet17, (double) (short) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(worker19);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean49 = qualification46.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification46.getWorkers();
        worker34.addQualification(qualification46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification46.toDTO();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str55 = company54.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company54.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification58 = company54.createQualification("");
        java.lang.String str59 = company54.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company54.getUnassignedWorkers();
        boolean boolean61 = qualification46.equals((java.lang.Object) workerSet60);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        boolean boolean68 = company64.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray74 = new edu.colostate.cs415.model.Qualification[] { qualification73 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet75 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet75, qualificationArray74);
        edu.colostate.cs415.model.ProjectSize projectSize77 = null;
        edu.colostate.cs415.model.Project project78 = company64.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet75, projectSize77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = company64.getQualifications();
        edu.colostate.cs415.model.Worker worker81 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet79, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet82 = worker81.getQualifications();
        edu.colostate.cs415.model.Project project83 = null;
        boolean boolean84 = worker81.willOverload(project83);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet85 = worker81.getProjects();
        java.lang.String str86 = worker81.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet87 = worker81.getProjects();
        qualification46.addWorker(worker81);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0" + "'", str55, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNull(qualification58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(qualificationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(project78);
        org.junit.Assert.assertNotNull(qualificationSet79);
        org.junit.Assert.assertNotNull(qualificationSet82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(projectSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNotNull(projectSet87);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.getName();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        java.lang.String str11 = company8.toString();
        boolean boolean13 = company8.equals((java.lang.Object) (-1L));
        java.lang.String str14 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company8.getQualifications();
        boolean boolean18 = company1.equals((java.lang.Object) company8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company8.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(workerSet19);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        boolean boolean42 = qualification37.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean49 = company45.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray55 = new edu.colostate.cs415.model.Qualification[] { qualification54 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet56 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet56, qualificationArray55);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company45.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet56, projectSize58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company45.getUnavailableWorkers();
        boolean boolean61 = qualification37.equals((java.lang.Object) workerSet60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification37.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationDTO64);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        boolean boolean9 = company1.equals((java.lang.Object) (short) -1);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company11.createQualification("");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company11.createWorker("hi!:0:0", qualificationSet19, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification23 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray38 = new edu.colostate.cs415.model.Qualification[] { qualification37 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet39 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet39, qualificationArray38);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company28.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet39, projectSize41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker45.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker45.getQualifications();
        qualification25.removeWorker(worker45);
        boolean boolean49 = company11.equals((java.lang.Object) worker45);
        edu.colostate.cs415.model.Project project50 = null;
        boolean boolean51 = worker45.willOverload(project50);
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker45, project52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean25 = qualification16.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean32 = qualification29.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean38 = qualification29.equals((java.lang.Object) qualification37);
        java.lang.String str39 = qualification37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        qualification37.removeWorker(worker60);
        qualification24.addWorker(worker60);
        qualification11.removeWorker(worker60);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification67.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification67.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO70 = qualification67.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification67.toDTO();
        java.lang.Object obj72 = null;
        boolean boolean73 = qualification67.equals(obj72);
        worker60.addQualification(qualification67);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification67.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = qualification67.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = qualification67.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertNotNull(qualificationDTO70);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertNotNull(workerSet76);
        org.junit.Assert.assertNotNull(workerSet77);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company18.getUnassignedWorkers();
        java.lang.String str34 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str45 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company57.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize60 = null;
        edu.colostate.cs415.model.Project project61 = company52.createProject("hi!", qualificationSet59, projectSize60);
        edu.colostate.cs415.model.Worker worker63 = company49.createWorker("", qualificationSet59, 1.0d);
        edu.colostate.cs415.model.Worker worker65 = company44.createWorker("hi!", qualificationSet59, (double) (-1.0f));
        boolean boolean66 = company39.equals((java.lang.Object) qualificationSet59);
        edu.colostate.cs415.model.Worker worker68 = company18.createWorker("hi!", qualificationSet59, (double) (-1));
        edu.colostate.cs415.model.Worker worker70 = company1.createWorker("hi!", qualificationSet59, (double) 0L);
        edu.colostate.cs415.model.Qualification qualification72 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str73 = qualification72.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNull(project61);
        org.junit.Assert.assertNull(worker63);
        org.junit.Assert.assertNull(worker65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(worker68);
        org.junit.Assert.assertNull(worker70);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!:0:0:0:0" + "'", str73, "hi!:0:0:0:0");
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean19 = qualification10.equals((java.lang.Object) qualification18);
        java.lang.String str20 = qualification10.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean27 = qualification24.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean33 = qualification24.equals((java.lang.Object) qualification32);
        java.lang.String str34 = qualification32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray48 = new edu.colostate.cs415.model.Qualification[] { qualification47 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet49 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet49, qualificationArray48);
        edu.colostate.cs415.model.ProjectSize projectSize51 = null;
        edu.colostate.cs415.model.Project project52 = company38.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet49, projectSize51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) 0L);
        qualification32.removeWorker(worker55);
        qualification10.removeWorker(worker55);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(project52);
        org.junit.Assert.assertNotNull(qualificationSet53);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification3.toString();
        java.lang.Object obj14 = null;
        boolean boolean15 = qualification3.equals(obj14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:1:32");
        boolean boolean18 = qualification3.equals((java.lang.Object) company17);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("");
        java.lang.String str14 = company9.toString();
        boolean boolean15 = qualification3.equals((java.lang.Object) str14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification3.getWorkers();
        java.lang.String str17 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        edu.colostate.cs415.model.Project project40 = null;
        boolean boolean41 = worker38.willOverload(project40);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = worker38.getProjects();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getAvailableWorkers();
        java.lang.String str46 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company44.getProjects();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getAvailableWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company58.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company53.createProject("hi!", qualificationSet60, projectSize61);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company65.getProjects();
        edu.colostate.cs415.model.Qualification qualification68 = company65.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker75 = company65.createWorker("hi!:0:0", qualificationSet73, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker77 = company53.createWorker("", qualificationSet73, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company49.createProject("", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company49.getUnavailableWorkers();
        boolean boolean82 = company44.equals((java.lang.Object) company49);
        boolean boolean83 = worker38.equals((java.lang.Object) company49);
        qualification3.removeWorker(worker38);
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification88 = company86.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = qualification88.getWorkers();
        edu.colostate.cs415.model.Company company91 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet92 = company91.getUnavailableWorkers();
        boolean boolean93 = qualification88.equals((java.lang.Object) workerSet92);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO94 = qualification88.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet95 = qualification88.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO96 = qualification88.toDTO();
        boolean boolean97 = worker38.equals((java.lang.Object) qualification88);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(worker75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertNotNull(workerSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(qualificationDTO94);
        org.junit.Assert.assertNotNull(workerSet95);
        org.junit.Assert.assertNotNull(qualificationDTO96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.lang.String str32 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass38 = workerSet37.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.lang.String str13 = company1.toString();
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company14.createProject("hi!", qualificationSet21, projectSize22);
        edu.colostate.cs415.model.Worker worker25 = company11.createWorker("", qualificationSet21, 1.0d);
        edu.colostate.cs415.model.Worker worker27 = company6.createWorker("hi!", qualificationSet21, (double) (-1.0f));
        boolean boolean28 = company1.equals((java.lang.Object) qualificationSet21);
        edu.colostate.cs415.model.Qualification qualification30 = company1.createQualification("hi!:0:1:10");
        edu.colostate.cs415.model.Qualification qualification32 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray45 = new edu.colostate.cs415.model.Qualification[] { qualification44 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet46 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet46, qualificationArray45);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        edu.colostate.cs415.model.Project project49 = company35.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet46, projectSize48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet50, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker52.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker52.getQualifications();
        qualification32.removeWorker(worker52);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean62 = qualification59.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification59.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification59.toDTO();
        worker52.addQualification(qualification59);
        edu.colostate.cs415.model.Project project66 = null;
        boolean boolean67 = worker52.willOverload(project66);
        boolean boolean68 = worker52.isAvailable();
        edu.colostate.cs415.model.Project project69 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker52, project69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNull(worker25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(project49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        worker34.setSalary((double) 10.0f);
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO40 = worker34.toDTO();
        int int41 = worker34.getWorkload();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerDTO40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean19 = qualification10.equals((java.lang.Object) qualification18);
        java.lang.String str20 = qualification10.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean27 = qualification24.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean33 = qualification24.equals((java.lang.Object) qualification32);
        java.lang.String str34 = qualification32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray48 = new edu.colostate.cs415.model.Qualification[] { qualification47 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet49 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet49, qualificationArray48);
        edu.colostate.cs415.model.ProjectSize projectSize51 = null;
        edu.colostate.cs415.model.Project project52 = company38.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet49, projectSize51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) 0L);
        qualification32.removeWorker(worker55);
        qualification10.removeWorker(worker55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = worker55.getQualifications();
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker55, project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(project52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualificationSet58);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Worker worker21 = company7.createWorker("", qualificationSet17, 1.0d);
        edu.colostate.cs415.model.Worker worker23 = company2.createWorker("hi!", qualificationSet17, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company2.getQualifications();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str27 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company26.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company39.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company34.createProject("hi!", qualificationSet41, projectSize42);
        edu.colostate.cs415.model.Worker worker45 = company31.createWorker("", qualificationSet41, 1.0d);
        edu.colostate.cs415.model.Worker worker47 = company26.createWorker("hi!", qualificationSet41, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company26.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company26.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification51 = company26.createQualification("hi!:0:1:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company26.getAvailableWorkers();
        boolean boolean53 = company2.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company56.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification60 = company56.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company68.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company68.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize71 = null;
        edu.colostate.cs415.model.Project project72 = company63.createProject("hi!", qualificationSet70, projectSize71);
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company56.createProject("hi!", qualificationSet70, projectSize73);
        edu.colostate.cs415.model.Worker worker76 = company26.createWorker("", qualificationSet70, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize77 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project78 = new edu.colostate.cs415.model.Project("hi!:0:1:32", qualificationSet70, projectSize77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNull(worker23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertNull(worker47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNull(project72);
        org.junit.Assert.assertNull(project74);
        org.junit.Assert.assertNull(worker76);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        worker19.setSalary((double) 0.0f);
        int int22 = worker19.getWorkload();
        java.lang.String str23 = worker19.getName();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company1.getProjects();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getAvailableWorkers();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company36.getProjects();
        boolean boolean44 = company1.equals((java.lang.Object) company36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company36.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(workerSet45);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification24 = company21.createQualification("");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company21.createWorker("hi!:0:0", qualificationSet29, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker33 = company9.createWorker("", qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company5.createProject("", qualificationSet29, projectSize34);
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        edu.colostate.cs415.model.Project project37 = company1.createProject("hi!:0:0", qualificationSet29, projectSize36);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company1.getProjects();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification44 = company41.createQualification("");
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = company41.createWorker("hi!:0:0", qualificationSet49, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification53 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        boolean boolean62 = company58.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray68 = new edu.colostate.cs415.model.Qualification[] { qualification67 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet69 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet69, qualificationArray68);
        edu.colostate.cs415.model.ProjectSize projectSize71 = null;
        edu.colostate.cs415.model.Project project72 = company58.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet69, projectSize71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company58.getQualifications();
        edu.colostate.cs415.model.Worker worker75 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet73, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = worker75.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet77 = worker75.getQualifications();
        qualification55.removeWorker(worker75);
        boolean boolean79 = company41.equals((java.lang.Object) worker75);
        edu.colostate.cs415.model.Project project80 = null;
        boolean boolean81 = worker75.willOverload(project80);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet82 = worker75.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize83 = null;
        edu.colostate.cs415.model.Project project84 = company1.createProject("hi!:0:2:0", qualificationSet82, projectSize83);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(project37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNull(worker51);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(qualificationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(project72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNotNull(qualificationSet76);
        org.junit.Assert.assertNotNull(qualificationSet77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualificationSet82);
        org.junit.Assert.assertNull(project84);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean31 = qualification28.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification28.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification28.toDTO();
        worker21.addQualification(qualification28);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = worker21.getProjects();
        java.lang.String str36 = worker21.toString();
        int int37 = worker21.getWorkload();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:1:0" + "'", str36, "hi!:0:1:0");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        boolean boolean44 = worker34.equals((java.lang.Object) '#');
        java.lang.String str45 = worker34.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:1:0" + "'", str45, "hi!:0:1:0");
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.lang.String str14 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        edu.colostate.cs415.model.Qualification qualification19 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str20 = qualification19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification19.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification19.toDTO();
        edu.colostate.cs415.model.Qualification qualification24 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company27.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, projectSize40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet42, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = worker44.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker44.getQualifications();
        qualification24.removeWorker(worker44);
        qualification19.addWorker(worker44);
        worker44.setSalary((double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker44.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company2.createProject("hi!:0:1:32:0:1:12", qualificationSet51, projectSize52);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!:0:1:32", qualificationSet51, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNull(project53);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company6.getUnavailableWorkers();
        boolean boolean39 = company1.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean52 = qualification43.equals((java.lang.Object) qualification51);
        java.lang.String str53 = qualification51.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification51.getWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        boolean boolean61 = company57.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray67 = new edu.colostate.cs415.model.Qualification[] { qualification66 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet68 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet68, qualificationArray67);
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        edu.colostate.cs415.model.Project project71 = company57.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet68, projectSize70);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company57.getQualifications();
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet72, (double) 0L);
        qualification51.removeWorker(worker74);
        edu.colostate.cs415.dto.WorkerDTO workerDTO76 = worker74.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO77 = worker74.toDTO();
        edu.colostate.cs415.model.Project project78 = null;
        boolean boolean79 = worker74.willOverload(project78);
        edu.colostate.cs415.dto.WorkerDTO workerDTO80 = worker74.toDTO();
        boolean boolean81 = worker74.isAvailable();
        double double82 = worker74.getSalary();
        edu.colostate.cs415.model.Project project83 = null;
        // The following exception was thrown during execution in test generation
        try {
            company6.unassign(worker74, project83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(qualificationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(project71);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertNotNull(workerDTO76);
        org.junit.Assert.assertNotNull(workerDTO77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(workerDTO80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean49 = qualification46.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification46.getWorkers();
        worker34.addQualification(qualification46);
        int int52 = worker34.getWorkload();
        worker34.setSalary((double) 0.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = worker34.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(projectSet55);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getAssignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet7, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean25 = qualification16.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean32 = qualification29.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean38 = qualification29.equals((java.lang.Object) qualification37);
        java.lang.String str39 = qualification37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        qualification37.removeWorker(worker60);
        qualification24.addWorker(worker60);
        qualification11.removeWorker(worker60);
        // The following exception was thrown during execution in test generation
        try {
            worker60.setSalary((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str25 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company37.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company32.createProject("hi!", qualificationSet39, projectSize40);
        edu.colostate.cs415.model.Worker worker43 = company29.createWorker("", qualificationSet39, 1.0d);
        edu.colostate.cs415.model.Worker worker45 = company24.createWorker("hi!", qualificationSet39, (double) (-1.0f));
        boolean boolean46 = company19.equals((java.lang.Object) qualificationSet39);
        boolean boolean47 = company1.equals((java.lang.Object) boolean46);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean53 = company49.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray59 = new edu.colostate.cs415.model.Qualification[] { qualification58 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet60 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet60, qualificationArray59);
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company49.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet60, projectSize62);
        boolean boolean64 = company1.equals((java.lang.Object) projectSize62);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet65 = company1.getProjects();
        java.lang.String str66 = company1.toString();
        edu.colostate.cs415.model.Project project67 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNull(worker43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(projectSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        boolean boolean46 = worker34.isAvailable();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification24 = company21.createQualification("");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company21.createWorker("hi!:0:0", qualificationSet29, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker33 = company9.createWorker("", qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company5.createProject("", qualificationSet29, projectSize34);
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        edu.colostate.cs415.model.Project project37 = company1.createProject("hi!:0:0", qualificationSet29, projectSize36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification44 = company41.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company41.getAssignedWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company48.getProjects();
        edu.colostate.cs415.model.Qualification qualification51 = company48.createQualification("");
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company54.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = company48.createWorker("hi!:0:0", qualificationSet56, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = company41.createWorker("", qualificationSet59, (double) 'a');
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company1.createProject("hi!:0:0", qualificationSet59, projectSize62);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean71 = qualification68.equals((java.lang.Object) 'a');
        boolean boolean72 = company1.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company1.getQualifications();
        edu.colostate.cs415.model.Project project74 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(project37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(projectSet49);
        org.junit.Assert.assertNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNull(worker58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualificationSet73);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company1.createQualification("");
        edu.colostate.cs415.model.Qualification qualification22 = company1.createQualification("");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getAvailableWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company34.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        edu.colostate.cs415.model.Project project38 = company29.createProject("hi!", qualificationSet36, projectSize37);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification44 = company41.createQualification("");
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = company41.createWorker("hi!:0:0", qualificationSet49, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker53 = company29.createWorker("", qualificationSet49, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company25.createProject("", qualificationSet49, projectSize54);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet56 = company25.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company25.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company25.getAvailableWorkers();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getAvailableWorkers();
        java.lang.String str63 = company61.toString();
        java.lang.String str64 = company61.toString();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str68 = company67.toString();
        java.lang.String str69 = company67.getName();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet73 = company72.getProjects();
        edu.colostate.cs415.model.Qualification qualification75 = company72.createQualification("");
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company78.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = company78.getQualifications();
        edu.colostate.cs415.model.Worker worker82 = company72.createWorker("hi!:0:0", qualificationSet80, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize83 = null;
        edu.colostate.cs415.model.Project project84 = company67.createProject("hi!:0:0", qualificationSet80, projectSize83);
        edu.colostate.cs415.model.ProjectSize projectSize85 = null;
        edu.colostate.cs415.model.Project project86 = company61.createProject("hi!", qualificationSet80, projectSize85);
        edu.colostate.cs415.model.ProjectSize projectSize87 = null;
        edu.colostate.cs415.model.Project project88 = company25.createProject("hi!:0:1:10", qualificationSet80, projectSize87);
        edu.colostate.cs415.model.ProjectSize projectSize89 = null;
        edu.colostate.cs415.model.Project project90 = company1.createProject("hi!", qualificationSet80, projectSize89);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNull(qualification18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNull(project38);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNull(worker51);
        org.junit.Assert.assertNull(worker53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNotNull(projectSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0" + "'", str63, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!:0:0" + "'", str64, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!:0:0" + "'", str68, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(projectSet73);
        org.junit.Assert.assertNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertNull(worker82);
        org.junit.Assert.assertNull(project84);
        org.junit.Assert.assertNull(project86);
        org.junit.Assert.assertNull(project88);
        org.junit.Assert.assertNull(project90);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getUnassignedWorkers();
        java.lang.String str24 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification26 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker46.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker46.getQualifications();
        qualification26.removeWorker(worker46);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        boolean boolean58 = qualification53.equals((java.lang.Object) workerSet57);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification53.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification53.getWorkers();
        boolean boolean61 = worker46.equals((java.lang.Object) workerSet60);
        double double62 = worker46.getSalary();
        edu.colostate.cs415.model.Project project63 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker46, project63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.Class<?> wildcardClass20 = qualification18.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company11.getUnassignedWorkers();
        java.lang.String str27 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str38 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company37.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company50.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company50.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize53 = null;
        edu.colostate.cs415.model.Project project54 = company45.createProject("hi!", qualificationSet52, projectSize53);
        edu.colostate.cs415.model.Worker worker56 = company42.createWorker("", qualificationSet52, 1.0d);
        edu.colostate.cs415.model.Worker worker58 = company37.createWorker("hi!", qualificationSet52, (double) (-1.0f));
        boolean boolean59 = company32.equals((java.lang.Object) qualificationSet52);
        edu.colostate.cs415.model.Worker worker61 = company11.createWorker("hi!", qualificationSet52, (double) (-1));
        edu.colostate.cs415.model.Worker worker63 = company2.createWorker("hi!:0:0", qualificationSet52, (double) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker65 = new edu.colostate.cs415.model.Worker("hi!:0:1:97", qualificationSet52, (double) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertNull(project54);
        org.junit.Assert.assertNull(worker56);
        org.junit.Assert.assertNull(worker58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertNull(worker63);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean25 = qualification16.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean32 = qualification29.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean38 = qualification29.equals((java.lang.Object) qualification37);
        java.lang.String str39 = qualification37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        qualification37.removeWorker(worker60);
        qualification24.addWorker(worker60);
        qualification11.removeWorker(worker60);
        // The following exception was thrown during execution in test generation
        try {
            worker60.setSalary((double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO40 = worker34.toDTO();
        boolean boolean41 = worker34.isAvailable();
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.removeProject(project42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerDTO40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company16.createProject("hi!", qualificationSet23, projectSize24);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company28.createQualification("");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = company28.createWorker("hi!:0:0", qualificationSet36, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker40 = company16.createWorker("", qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company12.createProject("", qualificationSet36, projectSize41);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company8.createProject("hi!:0:0", qualificationSet36, projectSize43);
        edu.colostate.cs415.model.Worker worker46 = company2.createWorker("hi!", qualificationSet36, (double) 1L);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification52 = company49.createQualification("hi!:0:1:0");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        boolean boolean59 = company55.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.ProjectSize projectSize68 = null;
        edu.colostate.cs415.model.Project project69 = company55.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, projectSize68);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company55.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = worker72.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = worker72.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO75 = worker72.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = worker72.getQualifications();
        boolean boolean77 = qualification52.equals((java.lang.Object) qualificationSet76);
        edu.colostate.cs415.model.Worker worker79 = company2.createWorker("hi!:0:1:10", qualificationSet76, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize80 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project81 = new edu.colostate.cs415.model.Project("hi!:0:1:32", qualificationSet76, projectSize80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNull(worker38);
        org.junit.Assert.assertNull(worker40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(project69);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNotNull(qualificationSet74);
        org.junit.Assert.assertNotNull(workerDTO75);
        org.junit.Assert.assertNotNull(qualificationSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(worker79);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker20 = company1.createWorker("", qualificationSet16, (double) 0.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company1.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNotNull(projectSet21);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        qualification15.removeWorker(worker35);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification42.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification42.toDTO();
        worker35.addQualification(qualification42);
        edu.colostate.cs415.model.Project project49 = null;
        boolean boolean50 = worker35.willOverload(project49);
        boolean boolean51 = worker35.isAvailable();
        java.lang.String str52 = worker35.getName();
        qualification13.removeWorker(worker35);
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        java.lang.String str8 = company6.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company16.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize19 = null;
        edu.colostate.cs415.model.Project project20 = company11.createProject("hi!", qualificationSet18, projectSize19);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company23.createQualification("");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = company23.createWorker("hi!:0:0", qualificationSet31, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker35 = company11.createWorker("", qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker37 = company6.createWorker("hi!", qualificationSet31, (double) 1);
        boolean boolean38 = company1.equals((java.lang.Object) worker37);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean52 = qualification43.equals((java.lang.Object) qualification51);
        java.lang.String str53 = qualification51.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification51.getWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        boolean boolean61 = company57.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray67 = new edu.colostate.cs415.model.Qualification[] { qualification66 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet68 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet68, qualificationArray67);
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        edu.colostate.cs415.model.Project project71 = company57.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet68, projectSize70);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company57.getQualifications();
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet72, (double) 0L);
        qualification51.removeWorker(worker74);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet78 = company77.getProjects();
        edu.colostate.cs415.model.Qualification qualification80 = company77.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company77.getAssignedWorkers();
        boolean boolean82 = worker74.equals((java.lang.Object) workerSet81);
        boolean boolean84 = worker74.equals((java.lang.Object) '#');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker74.getQualifications();
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!:0:1:32:0:1:12", qualificationSet85, (double) 100.0f);
        double double88 = worker87.getSalary();
        edu.colostate.cs415.model.Project project89 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker87, project89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNull(project20);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(qualificationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(project71);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertNotNull(projectSet78);
        org.junit.Assert.assertNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 100.0d + "'", double88 == 100.0d);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray24 = new edu.colostate.cs415.model.Qualification[] { qualification23 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet25 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet25, qualificationArray24);
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        edu.colostate.cs415.model.Project project28 = company14.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet25, projectSize27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company14.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification31 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company14.createQualification("");
        boolean boolean34 = qualification3.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification39 = company36.createQualification("");
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = company36.createWorker("hi!:0:0", qualificationSet44, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company36.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company36.createWorker("hi!", qualificationSet58, (double) 100.0f);
        boolean boolean63 = qualification3.equals((java.lang.Object) company36);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification3.toDTO();
        java.lang.String str65 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(project28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNull(qualification31);
        org.junit.Assert.assertNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray18 = new edu.colostate.cs415.model.Qualification[] { qualification17 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet19 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet19, qualificationArray18);
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company8.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet19, projectSize21);
        boolean boolean23 = company1.equals((java.lang.Object) projectSize21);
        edu.colostate.cs415.model.Project project24 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        edu.colostate.cs415.model.Project project21 = null;
        boolean boolean22 = worker19.willOverload(project21);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = worker19.getProjects();
        java.lang.String str24 = worker19.getName();
        edu.colostate.cs415.model.Qualification qualification26 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker19.addQualification(qualification26);
        double double28 = worker19.getSalary();
        edu.colostate.cs415.model.Project project29 = null;
        boolean boolean30 = worker19.willOverload(project29);
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.removeProject(project31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = worker34.getProjects();
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.addProject(project41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(projectSet40);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker19.getQualifications();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company23.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company23.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification29 = company23.createQualification("hi!:0:0");
        worker19.addQualification(qualification29);
        java.lang.String str31 = worker19.getName();
        edu.colostate.cs415.dto.WorkerDTO workerDTO32 = worker19.toDTO();
        // The following exception was thrown during execution in test generation
        try {
            worker19.setSalary((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerDTO32);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        boolean boolean48 = qualification3.equals((java.lang.Object) worker46);
        worker46.setSalary((double) 'a');
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification54.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification54.getWorkers();
        java.lang.String str58 = qualification54.toString();
        worker46.addQualification(qualification54);
        boolean boolean60 = worker46.isAvailable();
        boolean boolean61 = worker46.isAvailable();
        boolean boolean62 = worker46.isAvailable();
        boolean boolean64 = worker46.equals((java.lang.Object) "hi!:0:1:32:0:1:12");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        java.lang.String str18 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getAvailableWorkers();
        java.lang.Class<?> wildcardClass21 = workerSet20.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company1.getQualifications();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        worker19.setSalary(10.0d);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company26.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, projectSize39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company26.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification43 = company26.createQualification("hi!");
        boolean boolean44 = worker19.equals((java.lang.Object) qualification43);
        java.lang.String str45 = worker19.toString();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNull(qualification43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:1:10" + "'", str45, "hi!:0:1:10");
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker6 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet4, 32.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.Class<?> wildcardClass4 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker29.willOverload(project34);
        int int36 = worker29.getWorkload();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        boolean boolean45 = qualification40.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray58 = new edu.colostate.cs415.model.Qualification[] { qualification57 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet59 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet59, qualificationArray58);
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company48.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet59, projectSize61);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company48.getUnavailableWorkers();
        boolean boolean64 = qualification40.equals((java.lang.Object) workerSet63);
        worker29.addQualification(qualification40);
        double double66 = worker29.getSalary();
        edu.colostate.cs415.model.Qualification qualification68 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str69 = qualification68.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification68.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = qualification68.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification68.getWorkers();
        worker29.addQualification(qualification68);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(workerSet72);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.lang.String str32 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company37.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company1.createProject("hi!:0:0:0:0", qualificationSet39, projectSize40);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str45 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getUnavailableWorkers();
        java.lang.String str47 = company44.toString();
        boolean boolean49 = company44.equals((java.lang.Object) (-1L));
        java.lang.String str50 = company44.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company44.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company44.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company44.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company1.createProject("hi!:0:2:0", qualificationSet53, projectSize54);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company58.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification62 = company58.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company70.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company70.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company65.createProject("hi!", qualificationSet72, projectSize73);
        edu.colostate.cs415.model.ProjectSize projectSize75 = null;
        edu.colostate.cs415.model.Project project76 = company58.createProject("hi!", qualificationSet72, projectSize75);
        edu.colostate.cs415.model.Worker worker78 = company1.createWorker("hi!:0:1:100", qualificationSet72, (-1.0d));
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertNull(project74);
        org.junit.Assert.assertNull(project76);
        org.junit.Assert.assertNull(worker78);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        qualification3.removeWorker(worker48);
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker48.removeProject(project51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.lang.String str11 = company9.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company9.start(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification17 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker37.getQualifications();
        qualification17.removeWorker(worker37);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        boolean boolean49 = qualification44.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification44.getWorkers();
        boolean boolean52 = worker37.equals((java.lang.Object) workerSet51);
        qualification3.addWorker(worker37);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str56 = company55.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company55.getUnavailableWorkers();
        java.lang.String str58 = company55.toString();
        boolean boolean60 = company55.equals((java.lang.Object) (-1L));
        java.lang.String str61 = company55.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company55.getQualifications();
        edu.colostate.cs415.model.Qualification qualification64 = company55.createQualification("hi!:0:1:32:0:1:12");
        boolean boolean65 = worker37.equals((java.lang.Object) "hi!:0:1:32:0:1:12");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0" + "'", str56, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean31 = qualification28.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification28.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification28.toDTO();
        worker21.addQualification(qualification28);
        double double35 = worker21.getSalary();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 'a');
        java.lang.String str15 = qualification11.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean18 = qualification11.equals((java.lang.Object) company17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str22 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company34.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        edu.colostate.cs415.model.Project project38 = company29.createProject("hi!", qualificationSet36, projectSize37);
        edu.colostate.cs415.model.Worker worker40 = company26.createWorker("", qualificationSet36, 1.0d);
        edu.colostate.cs415.model.Worker worker42 = company21.createWorker("hi!", qualificationSet36, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company21.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company21.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification46 = company21.createQualification("");
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company49.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company21.createProject("hi!:0:0", qualificationSet51, projectSize52);
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company17.createProject("hi!:0:0", qualificationSet51, projectSize54);
        edu.colostate.cs415.model.Worker worker57 = company2.createWorker("hi!:0:1:0", qualificationSet51, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker59 = new edu.colostate.cs415.model.Worker("hi!:0:1:10", qualificationSet51, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNull(project38);
        org.junit.Assert.assertNull(worker40);
        org.junit.Assert.assertNull(worker42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNull(project53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNull(worker57);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getAvailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnavailableWorkers();
        java.lang.String str24 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnavailableWorkers();
        boolean boolean26 = company1.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification28 = company20.createQualification("");
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(qualification28);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean20 = qualification11.equals((java.lang.Object) qualification19);
        java.lang.String str21 = qualification19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        boolean boolean29 = company25.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company25.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, projectSize38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet40, (double) 0L);
        qualification19.removeWorker(worker42);
        edu.colostate.cs415.dto.WorkerDTO workerDTO44 = worker42.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker42.toDTO();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 'a');
        worker42.addQualification(qualification49);
        java.lang.String str54 = worker42.getName();
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker42.toDTO();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNotNull(workerDTO44);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(workerDTO55);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company6.createProject("hi!", qualificationSet13, projectSize14);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company18.createQualification("");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company18.createWorker("hi!:0:0", qualificationSet26, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker30 = company6.createWorker("", qualificationSet26, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company2.createProject("", qualificationSet26, projectSize31);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:1:97", qualificationSet26, 97.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertNull(worker30);
        org.junit.Assert.assertNull(project32);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.lang.String str11 = company9.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company16.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, projectSize29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = worker33.getQualifications();
        worker33.setSalary((double) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = worker33.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker33.getQualifications();
        qualification13.addWorker(worker33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker33.getQualifications();
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker33.removeProject(project41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet40);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean49 = qualification46.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification46.getWorkers();
        worker34.addQualification(qualification46);
        // The following exception was thrown during execution in test generation
        try {
            worker34.setSalary((double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(workerSet50);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker29.willOverload(project34);
        int int36 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.removeProject(project37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray23 = new edu.colostate.cs415.model.Qualification[] { qualification22 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet24 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet24, qualificationArray23);
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        edu.colostate.cs415.model.Project project27 = company13.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet24, projectSize26);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker30.getQualifications();
        worker30.setSalary((double) 10);
        java.lang.String str34 = worker30.toString();
        worker30.setSalary((double) ' ');
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        boolean boolean45 = qualification40.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification40.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company49.getProjects();
        edu.colostate.cs415.model.Qualification qualification52 = company49.createQualification("");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        edu.colostate.cs415.model.Worker worker59 = company49.createWorker("hi!:0:0", qualificationSet57, (double) 100.0f);
        boolean boolean60 = qualification40.equals((java.lang.Object) company49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification40.toDTO();
        boolean boolean62 = worker30.equals((java.lang.Object) qualificationDTO61);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        boolean boolean69 = company65.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray75 = new edu.colostate.cs415.model.Qualification[] { qualification74 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet76 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet76, qualificationArray75);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company65.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet76, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = company65.getQualifications();
        edu.colostate.cs415.model.Worker worker82 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet80, (double) 0L);
        worker82.setSalary((double) 0.0f);
        boolean boolean85 = worker30.equals((java.lang.Object) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNull(qualification8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(project27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:1:10" + "'", str34, "hi!:0:1:10");
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(qualificationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getAvailableWorkers();
        java.lang.String str39 = company37.toString();
        java.lang.String str40 = company37.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str44 = company43.toString();
        java.lang.String str45 = company43.getName();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company48.getProjects();
        edu.colostate.cs415.model.Qualification qualification51 = company48.createQualification("");
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company54.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = company48.createWorker("hi!:0:0", qualificationSet56, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company43.createProject("hi!:0:0", qualificationSet56, projectSize59);
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company37.createProject("hi!", qualificationSet56, projectSize61);
        edu.colostate.cs415.model.ProjectSize projectSize63 = null;
        edu.colostate.cs415.model.Project project64 = company1.createProject("hi!:0:1:10", qualificationSet56, projectSize63);
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        boolean boolean71 = company67.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification76 = company74.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray77 = new edu.colostate.cs415.model.Qualification[] { qualification76 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet78 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet78, qualificationArray77);
        edu.colostate.cs415.model.ProjectSize projectSize80 = null;
        edu.colostate.cs415.model.Project project81 = company67.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet78, projectSize80);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet82 = company67.getQualifications();
        edu.colostate.cs415.model.Worker worker84 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet82, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker84.getQualifications();
        edu.colostate.cs415.model.Project project86 = null;
        boolean boolean87 = worker84.willOverload(project86);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet88 = worker84.getProjects();
        java.lang.String str89 = worker84.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet90 = worker84.getProjects();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(projectSet49);
        org.junit.Assert.assertNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNull(worker58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNull(project64);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(qualificationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(project81);
        org.junit.Assert.assertNotNull(qualificationSet82);
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(projectSet88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertNotNull(projectSet90);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean21 = qualification18.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification18.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean27 = qualification18.equals((java.lang.Object) qualification26);
        java.lang.String str28 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company32.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet47, (double) 0L);
        qualification26.removeWorker(worker49);
        edu.colostate.cs415.dto.WorkerDTO workerDTO51 = worker49.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO52 = worker49.toDTO();
        edu.colostate.cs415.model.Project project53 = null;
        boolean boolean54 = worker49.willOverload(project53);
        boolean boolean55 = worker49.isAvailable();
        java.lang.String str56 = worker49.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker49.getQualifications();
        qualification3.removeWorker(worker49);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification62.getWorkers();
        boolean boolean65 = qualification62.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification62.toDTO();
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        boolean boolean71 = qualification62.equals((java.lang.Object) qualification70);
        java.lang.String str72 = qualification70.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification70.getWorkers();
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        boolean boolean80 = company76.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray86 = new edu.colostate.cs415.model.Qualification[] { qualification85 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet87 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet87, qualificationArray86);
        edu.colostate.cs415.model.ProjectSize projectSize89 = null;
        edu.colostate.cs415.model.Project project90 = company76.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet87, projectSize89);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company76.getQualifications();
        edu.colostate.cs415.model.Worker worker93 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet91, (double) 0L);
        qualification70.removeWorker(worker93);
        edu.colostate.cs415.dto.WorkerDTO workerDTO95 = worker93.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO96 = worker93.toDTO();
        edu.colostate.cs415.model.Project project97 = null;
        boolean boolean98 = worker93.willOverload(project97);
        qualification3.addWorker(worker93);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(workerDTO51);
        org.junit.Assert.assertNotNull(workerDTO52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(project90);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertNotNull(workerDTO95);
        org.junit.Assert.assertNotNull(workerDTO96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:1:32");
        java.lang.String str2 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:1:32:0:0" + "'", str2, "hi!:0:1:32:0:0");
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean21 = qualification12.equals((java.lang.Object) qualification20);
        java.lang.String str22 = qualification20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company26.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, projectSize39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0L);
        qualification20.removeWorker(worker43);
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker43.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker43.toDTO();
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker43.willOverload(project47);
        qualification8.addWorker(worker43);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = worker43.getProjects();
        double double51 = worker43.getSalary();
        java.lang.String str52 = worker43.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification15.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker38.getQualifications();
        qualification15.removeWorker(worker38);
        edu.colostate.cs415.model.Project project42 = null;
        boolean boolean43 = worker38.willOverload(project42);
        qualification3.removeWorker(worker38);
        java.lang.String str45 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        edu.colostate.cs415.model.Project project13 = company4.createProject("hi!", qualificationSet11, projectSize12);
        edu.colostate.cs415.model.Worker worker15 = company1.createWorker("", qualificationSet11, 1.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company26.createProject("hi!", qualificationSet33, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company23.createWorker("", qualificationSet33, 1.0d);
        edu.colostate.cs415.model.Worker worker39 = company18.createWorker("hi!", qualificationSet33, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str44 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company43.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company48.createWorker("", qualificationSet58, 1.0d);
        edu.colostate.cs415.model.Worker worker64 = company43.createWorker("hi!", qualificationSet58, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company43.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company43.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification68 = company43.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company43.createProject("hi!:0:0", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.Worker worker77 = company18.createWorker("", qualificationSet73, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet80 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNull(project13);
        org.junit.Assert.assertNull(worker15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(worker64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(projectSet80);
        org.junit.Assert.assertNotNull(workerSet81);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray13 = new edu.colostate.cs415.model.Qualification[] { qualification12 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet14 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet14, qualificationArray13);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        edu.colostate.cs415.model.Project project17 = company3.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet14, projectSize16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker20.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO23 = worker20.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = worker20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project27 = new edu.colostate.cs415.model.Project("hi!", qualificationSet25, projectSize26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(project17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(workerDTO23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = null;
        edu.colostate.cs415.model.ProjectSize projectSize6 = null;
        edu.colostate.cs415.model.Project project7 = company1.createProject("hi!:0:0", qualificationSet5, projectSize6);
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNull(project7);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray13 = new edu.colostate.cs415.model.Qualification[] { qualification12 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet14 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet14, qualificationArray13);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        edu.colostate.cs415.model.Project project17 = company3.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet14, projectSize16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker20.getQualifications();
        edu.colostate.cs415.model.Project project22 = null;
        boolean boolean23 = worker20.willOverload(project22);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = worker20.getProjects();
        java.lang.String str25 = worker20.getName();
        edu.colostate.cs415.model.Qualification qualification27 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker20.addQualification(qualification27);
        double double29 = worker20.getSalary();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project32 = new edu.colostate.cs415.model.Project("hi!:0:1:32:0:0", qualificationSet30, projectSize31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(project17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(qualificationSet30);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = company2.createWorker("hi!:0:0", qualificationSet10, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project15 = new edu.colostate.cs415.model.Project("hi!:0:2:0", qualificationSet13, projectSize14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNull(worker12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getAvailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company15.createProject("hi!", qualificationSet22, projectSize23);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company27.createQualification("");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = company27.createWorker("hi!:0:0", qualificationSet35, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker39 = company15.createWorker("", qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company11.createProject("", qualificationSet35, projectSize40);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company7.createProject("hi!:0:0", qualificationSet35, projectSize42);
        edu.colostate.cs415.model.Worker worker45 = company1.createWorker("hi!", qualificationSet35, (double) 1L);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification51 = company48.createQualification("hi!:0:1:0");
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        boolean boolean58 = company54.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray64 = new edu.colostate.cs415.model.Qualification[] { qualification63 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet65 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet65, qualificationArray64);
        edu.colostate.cs415.model.ProjectSize projectSize67 = null;
        edu.colostate.cs415.model.Project project68 = company54.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet65, projectSize67);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company54.getQualifications();
        edu.colostate.cs415.model.Worker worker71 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet69, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = worker71.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = worker71.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO74 = worker71.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = worker71.getQualifications();
        boolean boolean76 = qualification51.equals((java.lang.Object) qualificationSet75);
        edu.colostate.cs415.model.Worker worker78 = company1.createWorker("hi!:0:1:10", qualificationSet75, (double) (byte) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(project68);
        org.junit.Assert.assertNotNull(qualificationSet69);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNotNull(workerDTO74);
        org.junit.Assert.assertNotNull(qualificationSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(worker78);
        org.junit.Assert.assertNotNull(workerSet79);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company18.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company13.createProject("hi!", qualificationSet20, projectSize21);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company25.createQualification("");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = company25.createWorker("hi!:0:0", qualificationSet33, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker37 = company13.createWorker("", qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company9.createProject("", qualificationSet33, projectSize38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company9.getUnavailableWorkers();
        boolean boolean41 = qualification3.equals((java.lang.Object) workerSet40);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company43.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company43.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company43.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification49 = company43.createQualification("hi!:0:0");
        boolean boolean51 = company43.equals((java.lang.Object) (short) -1);
        edu.colostate.cs415.model.Qualification qualification53 = company43.createQualification("");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = company56.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company56.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = company43.createWorker("hi!:0:0", qualificationSet59, 100.0d);
        boolean boolean62 = qualification3.equals((java.lang.Object) worker61);
        java.lang.String str63 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification3.toDTO();
        java.lang.String str65 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(projectSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean40 = qualification37.equals((java.lang.Object) 'a');
        java.lang.String str41 = qualification37.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean44 = qualification37.equals((java.lang.Object) company43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        int int47 = worker29.getWorkload();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        boolean boolean27 = qualification22.equals((java.lang.Object) workerSet26);
        java.lang.String str28 = qualification22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company32.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet47, (double) 0L);
        worker49.setSalary((double) 0.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker49.getQualifications();
        qualification22.addWorker(worker49);
        double double54 = worker49.getSalary();
        java.lang.String str55 = worker49.toString();
        edu.colostate.cs415.model.Project project56 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker49, project56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:1:0" + "'", str55, "hi!:0:1:0");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification12 = company9.createQualification("");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company9.createWorker("hi!:0:0", qualificationSet17, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = company2.createWorker("", qualificationSet20, (double) 'a');
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project24 = new edu.colostate.cs415.model.Project("hi!:0:1:10", qualificationSet20, projectSize23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(worker19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNull(worker22);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("");
        java.lang.String str14 = company9.toString();
        boolean boolean15 = qualification3.equals((java.lang.Object) str14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification3.getWorkers();
        java.lang.String str17 = qualification3.toString();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        qualification3.addWorker(worker37);
        int int40 = worker37.getWorkload();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.lang.String str16 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker19.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO22 = worker19.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker19.getQualifications();
        java.lang.String str24 = worker19.getName();
        boolean boolean25 = worker19.isAvailable();
        worker19.setSalary((double) (short) 100);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.addProject(project28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerDTO22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet8, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray18 = new edu.colostate.cs415.model.Qualification[] { qualification17 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet19 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet19, qualificationArray18);
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company8.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet19, projectSize21);
        boolean boolean23 = company1.equals((java.lang.Object) projectSize21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.lang.String str32 = company27.getName();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company40.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company35.createProject("hi!", qualificationSet42, projectSize43);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company47.getProjects();
        edu.colostate.cs415.model.Qualification qualification50 = company47.createQualification("");
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company53.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company53.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company47.createWorker("hi!:0:0", qualificationSet55, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker59 = company35.createWorker("", qualificationSet55, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker61 = company27.createWorker("hi!:0:0", qualificationSet55, (double) 'a');
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company1.createProject("", qualificationSet55, projectSize62);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company66.createProject("hi!", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.ProjectSize projectSize76 = null;
        edu.colostate.cs415.model.Project project77 = company1.createProject("hi!:0:1:97", qualificationSet73, projectSize76);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(project77);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        java.lang.String str23 = company1.toString();
        java.lang.String str24 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company1.getQualifications();
        java.lang.Class<?> wildcardClass27 = company1.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        edu.colostate.cs415.model.Project project21 = null;
        boolean boolean22 = worker19.willOverload(project21);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = worker19.getProjects();
        java.lang.String str24 = worker19.getName();
        edu.colostate.cs415.model.Qualification qualification26 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker19.addQualification(qualification26);
        double double28 = worker19.getSalary();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker19.getQualifications();
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.removeProject(project30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(qualificationSet29);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.removeProject(project20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = null;
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("", qualificationSet9, (double) (short) -1);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company22.createProject("hi!", qualificationSet29, projectSize30);
        edu.colostate.cs415.model.Worker worker33 = company19.createWorker("", qualificationSet29, 1.0d);
        edu.colostate.cs415.model.Worker worker35 = company14.createWorker("hi!", qualificationSet29, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company14.getAvailableWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification43.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification52.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification52.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification52.toDTO();
        java.lang.Object obj57 = null;
        boolean boolean58 = qualification52.equals(obj57);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        boolean boolean65 = company61.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray71 = new edu.colostate.cs415.model.Qualification[] { qualification70 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet72 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet72, qualificationArray71);
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company61.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet72, projectSize74);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker78 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet76, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = worker78.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = worker78.getQualifications();
        qualification52.addWorker(worker78);
        boolean boolean82 = qualification43.equals((java.lang.Object) worker78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker78.getQualifications();
        edu.colostate.cs415.model.Worker worker85 = company14.createWorker("hi!:0:1:0", qualificationSet83, 0.0d);
        edu.colostate.cs415.model.ProjectSize projectSize86 = null;
        edu.colostate.cs415.model.Project project87 = company1.createProject("hi!", qualificationSet83, projectSize86);
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(qualificationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNotNull(qualificationSet76);
        org.junit.Assert.assertNotNull(qualificationSet79);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertNull(worker85);
        org.junit.Assert.assertNull(project87);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = qualification5.toString();
        edu.colostate.cs415.model.Worker worker7 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification5.removeWorker(worker7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification7.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray23 = new edu.colostate.cs415.model.Qualification[] { qualification22 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet24 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet24, qualificationArray23);
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        edu.colostate.cs415.model.Project project27 = company13.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet24, projectSize26);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker30.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = worker30.getQualifications();
        qualification7.removeWorker(worker30);
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker30.willOverload(project34);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(project27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        worker19.setSalary((double) 0.0f);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean28 = qualification25.equals((java.lang.Object) 'a');
        java.lang.String str29 = qualification25.toString();
        java.lang.String str30 = qualification25.toString();
        boolean boolean31 = worker19.equals((java.lang.Object) qualification25);
        boolean boolean32 = worker19.isAvailable();
        edu.colostate.cs415.model.Project project33 = null;
        boolean boolean34 = worker19.willOverload(project33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = worker19.getQualifications();
        edu.colostate.cs415.model.Project project36 = null;
        boolean boolean37 = worker19.willOverload(project36);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company1.getQualifications();
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        edu.colostate.cs415.model.Project project13 = company4.createProject("hi!", qualificationSet11, projectSize12);
        edu.colostate.cs415.model.Worker worker15 = company1.createWorker("", qualificationSet11, 1.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company26.createProject("hi!", qualificationSet33, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company23.createWorker("", qualificationSet33, 1.0d);
        edu.colostate.cs415.model.Worker worker39 = company18.createWorker("hi!", qualificationSet33, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str44 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company43.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company48.createWorker("", qualificationSet58, 1.0d);
        edu.colostate.cs415.model.Worker worker64 = company43.createWorker("hi!", qualificationSet58, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company43.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company43.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification68 = company43.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company43.createProject("hi!:0:0", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.Worker worker77 = company18.createWorker("", qualificationSet73, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet80 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNull(project13);
        org.junit.Assert.assertNull(worker15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(worker64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(projectSet80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertNotNull(workerSet83);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.lang.String str16 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company19.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company19.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company19.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean33 = qualification30.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification30.toDTO();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        boolean boolean39 = qualification30.equals((java.lang.Object) qualification38);
        java.lang.String str40 = qualification38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification38.getWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        boolean boolean48 = company44.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray54 = new edu.colostate.cs415.model.Qualification[] { qualification53 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet55 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet55, qualificationArray54);
        edu.colostate.cs415.model.ProjectSize projectSize57 = null;
        edu.colostate.cs415.model.Project project58 = company44.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet55, projectSize57);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company44.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet59, (double) 0L);
        qualification38.removeWorker(worker61);
        edu.colostate.cs415.dto.WorkerDTO workerDTO63 = worker61.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO64 = worker61.toDTO();
        edu.colostate.cs415.model.Project project65 = null;
        boolean boolean66 = worker61.willOverload(project65);
        qualification26.addWorker(worker61);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet68 = worker61.getProjects();
        double double69 = worker61.getSalary();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(qualificationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(project58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNotNull(workerDTO63);
        org.junit.Assert.assertNotNull(workerDTO64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(projectSet68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        worker19.setSalary((double) 0.0f);
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.removeProject(project22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        java.lang.String str25 = worker21.getName();
        java.lang.String str26 = worker21.getName();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        boolean boolean6 = company1.equals((java.lang.Object) (-1L));
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company26.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company21.createProject("hi!", qualificationSet28, projectSize29);
        edu.colostate.cs415.model.Worker worker32 = company18.createWorker("", qualificationSet28, 1.0d);
        edu.colostate.cs415.model.Worker worker34 = company13.createWorker("hi!", qualificationSet28, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification38 = company13.createQualification("");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company41.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company13.createProject("hi!:0:0", qualificationSet43, projectSize44);
        edu.colostate.cs415.model.ProjectSize projectSize46 = null;
        edu.colostate.cs415.model.Project project47 = company9.createProject("hi!:0:0", qualificationSet43, projectSize46);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company9.getAvailableWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification53.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification53.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification53.toDTO();
        java.lang.Object obj58 = null;
        boolean boolean59 = qualification53.equals(obj58);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        boolean boolean66 = company62.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray72 = new edu.colostate.cs415.model.Qualification[] { qualification71 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet73 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet73, qualificationArray72);
        edu.colostate.cs415.model.ProjectSize projectSize75 = null;
        edu.colostate.cs415.model.Project project76 = company62.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet73, projectSize75);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet77 = company62.getQualifications();
        edu.colostate.cs415.model.Worker worker79 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet77, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = worker79.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet81 = worker79.getQualifications();
        qualification53.addWorker(worker79);
        int int83 = worker79.getWorkload();
        boolean boolean84 = worker79.isAvailable();
        // The following exception was thrown during execution in test generation
        try {
            company9.unassignAll(worker79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNull(project47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(qualificationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(project76);
        org.junit.Assert.assertNotNull(qualificationSet77);
        org.junit.Assert.assertNotNull(qualificationSet80);
        org.junit.Assert.assertNotNull(qualificationSet81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:1:10");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        worker19.setSalary((double) 0.0f);
        int int22 = worker19.getWorkload();
        worker19.setSalary(100.0d);
        double double25 = worker19.getSalary();
        java.lang.String str26 = worker19.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = worker19.getQualifications();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 100.0d + "'", double25 == 100.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:1:100" + "'", str26, "hi!:0:1:100");
        org.junit.Assert.assertNotNull(qualificationSet27);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = null;
        edu.colostate.cs415.model.ProjectSize projectSize7 = null;
        edu.colostate.cs415.model.Project project8 = company1.createProject("hi!:0:1:32", qualificationSet6, projectSize7);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean21 = qualification12.equals((java.lang.Object) qualification20);
        java.lang.String str22 = qualification20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company26.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, projectSize39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0L);
        qualification20.removeWorker(worker43);
        worker43.setSalary((double) 10.0f);
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker43.willOverload(project47);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        boolean boolean54 = company50.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company50.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company50.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getUnavailableWorkers();
        boolean boolean58 = worker43.equals((java.lang.Object) company50);
        boolean boolean59 = company1.equals((java.lang.Object) company50);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNull(project8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification11.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification11.toDTO();
        boolean boolean17 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        worker38.setSalary((double) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = worker38.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = worker38.getQualifications();
        qualification11.addWorker(worker38);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(qualificationSet43);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification35.toDTO();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification40.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        boolean boolean50 = company46.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray56 = new edu.colostate.cs415.model.Qualification[] { qualification55 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet57 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet57, qualificationArray56);
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company46.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet57, projectSize59);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company46.getQualifications();
        edu.colostate.cs415.model.Worker worker63 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet61, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker63.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = worker63.getQualifications();
        qualification40.removeWorker(worker63);
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = qualification70.getWorkers();
        boolean boolean73 = qualification70.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification70.getWorkers();
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str77 = company76.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company76.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification80 = company76.createQualification("");
        java.lang.String str81 = company76.toString();
        boolean boolean82 = qualification70.equals((java.lang.Object) str81);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO83 = qualification70.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO84 = qualification70.toDTO();
        boolean boolean85 = worker63.equals((java.lang.Object) qualificationDTO84);
        boolean boolean86 = qualification35.equals((java.lang.Object) qualificationDTO84);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(qualificationSet65);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!:0:0" + "'", str77, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertNull(qualification80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!:0:0" + "'", str81, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(qualificationDTO83);
        org.junit.Assert.assertNotNull(qualificationDTO84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.lang.String str12 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.lang.String str14 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass16 = company1.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification13.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification13.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification13.getWorkers();
        boolean boolean18 = company1.equals((java.lang.Object) qualification13);
        java.lang.Class<?> wildcardClass19 = qualification13.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        qualification3.addWorker(worker48);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        boolean boolean57 = qualification54.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification54.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        boolean boolean63 = qualification54.equals((java.lang.Object) qualification62);
        java.lang.String str64 = qualification62.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification62.getWorkers();
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        boolean boolean72 = company68.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray78 = new edu.colostate.cs415.model.Qualification[] { qualification77 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet79 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet79, qualificationArray78);
        edu.colostate.cs415.model.ProjectSize projectSize81 = null;
        edu.colostate.cs415.model.Project project82 = company68.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet79, projectSize81);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = company68.getQualifications();
        edu.colostate.cs415.model.Worker worker85 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet83, (double) 0L);
        qualification62.removeWorker(worker85);
        edu.colostate.cs415.dto.WorkerDTO workerDTO87 = worker85.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO88 = worker85.toDTO();
        edu.colostate.cs415.model.Project project89 = null;
        boolean boolean90 = worker85.willOverload(project89);
        boolean boolean91 = worker85.isAvailable();
        qualification3.removeWorker(worker85);
        edu.colostate.cs415.model.Project project93 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker85.addProject(project93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(qualificationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(project82);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertNotNull(workerDTO87);
        org.junit.Assert.assertNotNull(workerDTO88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        double double34 = worker29.getSalary();
        edu.colostate.cs415.dto.WorkerDTO workerDTO35 = worker29.toDTO();
        edu.colostate.cs415.model.Project project36 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.removeProject(project36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(workerDTO35);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) false);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker28.getQualifications();
        edu.colostate.cs415.model.Project project30 = null;
        boolean boolean31 = worker28.willOverload(project30);
        qualification3.addWorker(worker28);
        edu.colostate.cs415.model.Project project33 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker28.addProject(project33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str25 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company37.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company32.createProject("hi!", qualificationSet39, projectSize40);
        edu.colostate.cs415.model.Worker worker43 = company29.createWorker("", qualificationSet39, 1.0d);
        edu.colostate.cs415.model.Worker worker45 = company24.createWorker("hi!", qualificationSet39, (double) (-1.0f));
        boolean boolean46 = company19.equals((java.lang.Object) qualificationSet39);
        boolean boolean47 = company1.equals((java.lang.Object) boolean46);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean53 = company49.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray59 = new edu.colostate.cs415.model.Qualification[] { qualification58 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet60 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet60, qualificationArray59);
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company49.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet60, projectSize62);
        boolean boolean64 = company1.equals((java.lang.Object) projectSize62);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet65 = company1.getProjects();
        java.lang.String str66 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification68 = company1.createQualification("");
        edu.colostate.cs415.model.Qualification qualification70 = company1.createQualification("hi!:0:0");
        java.lang.String str71 = qualification70.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNull(worker43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(projectSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:0:0" + "'", str71, "hi!:0:0");
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        edu.colostate.cs415.model.Project project13 = company4.createProject("hi!", qualificationSet11, projectSize12);
        edu.colostate.cs415.model.Worker worker15 = company1.createWorker("", qualificationSet11, 1.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company26.createProject("hi!", qualificationSet33, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company23.createWorker("", qualificationSet33, 1.0d);
        edu.colostate.cs415.model.Worker worker39 = company18.createWorker("hi!", qualificationSet33, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str44 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company43.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company48.createWorker("", qualificationSet58, 1.0d);
        edu.colostate.cs415.model.Worker worker64 = company43.createWorker("hi!", qualificationSet58, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company43.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company43.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification68 = company43.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company43.createProject("hi!:0:0", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.Worker worker77 = company18.createWorker("", qualificationSet73, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet80 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet81 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNull(project13);
        org.junit.Assert.assertNull(worker15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(worker64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(projectSet80);
        org.junit.Assert.assertNotNull(projectSet81);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("");
        java.lang.String str14 = company9.toString();
        boolean boolean15 = qualification3.equals((java.lang.Object) str14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification3.getWorkers();
        java.lang.String str17 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        edu.colostate.cs415.model.Project project40 = null;
        boolean boolean41 = worker38.willOverload(project40);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = worker38.getProjects();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getAvailableWorkers();
        java.lang.String str46 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company44.getProjects();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getAvailableWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company58.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company53.createProject("hi!", qualificationSet60, projectSize61);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company65.getProjects();
        edu.colostate.cs415.model.Qualification qualification68 = company65.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker75 = company65.createWorker("hi!:0:0", qualificationSet73, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker77 = company53.createWorker("", qualificationSet73, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company49.createProject("", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company49.getUnavailableWorkers();
        boolean boolean82 = company44.equals((java.lang.Object) company49);
        boolean boolean83 = worker38.equals((java.lang.Object) company49);
        qualification3.removeWorker(worker38);
        double double85 = worker38.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(worker75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.lang.String str13 = company1.toString();
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:1:32:0:0");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        worker34.setSalary(0.0d);
        boolean boolean39 = worker34.isAvailable();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company16.createProject("hi!", qualificationSet23, projectSize24);
        edu.colostate.cs415.model.Worker worker27 = company1.createWorker("hi!", qualificationSet23, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        boolean boolean14 = qualification9.equals((java.lang.Object) workerSet13);
        java.lang.String str15 = qualification9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification9.getWorkers();
        java.lang.String str17 = qualification9.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean30 = qualification21.equals((java.lang.Object) qualification29);
        java.lang.String str31 = qualification29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray45 = new edu.colostate.cs415.model.Qualification[] { qualification44 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet46 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet46, qualificationArray45);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        edu.colostate.cs415.model.Project project49 = company35.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet46, projectSize48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet50, (double) 0L);
        qualification29.removeWorker(worker52);
        boolean boolean54 = qualification9.equals((java.lang.Object) worker52);
        edu.colostate.cs415.model.Project project55 = null;
        boolean boolean56 = worker52.willOverload(project55);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = worker52.getProjects();
        qualification3.removeWorker(worker52);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getAvailableWorkers();
        java.lang.String str62 = company60.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company60.getAssignedWorkers();
        java.lang.Class<?> wildcardClass64 = company60.getClass();
        boolean boolean65 = worker52.equals((java.lang.Object) company60);
        edu.colostate.cs415.model.Project project66 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker52.addProject(project66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(project49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0" + "'", str62, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:1:100");
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!", qualificationSet9, (-1.0d));
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        java.lang.String str25 = worker21.getName();
        java.lang.String str26 = worker21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = worker21.getProjects();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:1:0" + "'", str26, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(projectSet27);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray23 = new edu.colostate.cs415.model.Qualification[] { qualification22 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet24 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet24, qualificationArray23);
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        edu.colostate.cs415.model.Project project27 = company13.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet24, projectSize26);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 0L);
        worker30.setSalary((double) 0.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = worker30.getQualifications();
        qualification3.addWorker(worker30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = worker30.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(project27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet35);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        boolean boolean25 = company1.equals((java.lang.Object) boolean24);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str29 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getUnavailableWorkers();
        java.lang.String str31 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getAssignedWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        boolean boolean40 = company36.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray46 = new edu.colostate.cs415.model.Qualification[] { qualification45 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet47 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet47, qualificationArray46);
        edu.colostate.cs415.model.ProjectSize projectSize49 = null;
        edu.colostate.cs415.model.Project project50 = company36.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet47, projectSize49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker53 = company28.createWorker("hi!:0:0", qualificationSet51, (double) 0.0f);
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company1.createProject("hi!:0:1:97", qualificationSet51, projectSize54);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNull(qualification18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(project50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNull(worker53);
        org.junit.Assert.assertNull(project55);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.lang.String str13 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray13 = new edu.colostate.cs415.model.Qualification[] { qualification12 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet14 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet14, qualificationArray13);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        edu.colostate.cs415.model.Project project17 = company3.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet14, projectSize16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker20.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!:0:1:0", qualificationSet22, (double) (short) 0);
        boolean boolean25 = worker24.isAvailable();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification29.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification29.getWorkers();
        boolean boolean34 = qualification29.equals((java.lang.Object) false);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray47 = new edu.colostate.cs415.model.Qualification[] { qualification46 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet48 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet48, qualificationArray47);
        edu.colostate.cs415.model.ProjectSize projectSize50 = null;
        edu.colostate.cs415.model.Project project51 = company37.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet48, projectSize50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet52, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker54.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker54.getQualifications();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company58.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company58.getUnassignedWorkers();
        java.lang.String str62 = company58.getName();
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company65.getAvailableWorkers();
        java.lang.String str67 = company65.toString();
        java.lang.String str68 = company65.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company65.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        edu.colostate.cs415.model.Project project71 = company58.createProject("hi!", qualificationSet69, projectSize70);
        java.lang.String str72 = company58.toString();
        boolean boolean73 = worker54.equals((java.lang.Object) str72);
        qualification29.removeWorker(worker54);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO75 = qualification29.toDTO();
        worker24.addQualification(qualification29);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(project17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(project51);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!:0:0" + "'", str67, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!:0:0" + "'", str68, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet69);
        org.junit.Assert.assertNull(project71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!:0:0" + "'", str72, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualificationDTO75);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:1:100");
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company36.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company31.createProject("hi!", qualificationSet38, projectSize39);
        edu.colostate.cs415.model.Worker worker42 = company28.createWorker("", qualificationSet38, 1.0d);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company20.createProject("", qualificationSet38, projectSize43);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company14.createProject("hi!", qualificationSet38, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company14.getProjects();
        edu.colostate.cs415.model.Worker worker48 = null;
        edu.colostate.cs415.model.Project project49 = null;
        // The following exception was thrown during execution in test generation
        try {
            company14.assign(worker48, project49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNull(worker42);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(projectSet47);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company22.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company22.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company22.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification29 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean36 = qualification33.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification33.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean42 = qualification33.equals((java.lang.Object) qualification41);
        java.lang.String str43 = qualification41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification41.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        boolean boolean51 = company47.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray57 = new edu.colostate.cs415.model.Qualification[] { qualification56 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet58 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet58, qualificationArray57);
        edu.colostate.cs415.model.ProjectSize projectSize60 = null;
        edu.colostate.cs415.model.Project project61 = company47.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet58, projectSize60);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker64 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet62, (double) 0L);
        qualification41.removeWorker(worker64);
        edu.colostate.cs415.dto.WorkerDTO workerDTO66 = worker64.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO67 = worker64.toDTO();
        edu.colostate.cs415.model.Project project68 = null;
        boolean boolean69 = worker64.willOverload(project68);
        qualification29.addWorker(worker64);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet71 = worker64.getProjects();
        java.lang.Object obj72 = null;
        boolean boolean73 = worker64.equals(obj72);
        worker64.setSalary((double) 1);
        int int76 = worker64.getWorkload();
        edu.colostate.cs415.model.Project project77 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker64, project77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(qualificationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(project61);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertNotNull(workerDTO66);
        org.junit.Assert.assertNotNull(workerDTO67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(projectSet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray17 = new edu.colostate.cs415.model.Qualification[] { qualification16 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet18 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet18, qualificationArray17);
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        edu.colostate.cs415.model.Project project21 = company7.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet18, projectSize20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker24.getQualifications();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnassignedWorkers();
        java.lang.String str32 = company28.getName();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getAvailableWorkers();
        java.lang.String str37 = company35.toString();
        java.lang.String str38 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company28.createProject("hi!", qualificationSet39, projectSize40);
        java.lang.String str42 = company28.toString();
        boolean boolean43 = worker24.equals((java.lang.Object) str42);
        qualification3.addWorker(worker24);
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker24.toDTO();
        int int46 = worker24.getWorkload();
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker24.willOverload(project47);
        edu.colostate.cs415.model.Project project49 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker24.removeProject(project49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(project21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification17 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker37.getQualifications();
        qualification17.removeWorker(worker37);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        boolean boolean49 = qualification44.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification44.getWorkers();
        boolean boolean52 = worker37.equals((java.lang.Object) workerSet51);
        qualification3.addWorker(worker37);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean60 = qualification57.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification57.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        boolean boolean66 = qualification57.equals((java.lang.Object) qualification65);
        java.lang.String str67 = qualification65.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification65.getWorkers();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        boolean boolean75 = company71.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray81 = new edu.colostate.cs415.model.Qualification[] { qualification80 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet82 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet82, qualificationArray81);
        edu.colostate.cs415.model.ProjectSize projectSize84 = null;
        edu.colostate.cs415.model.Project project85 = company71.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet82, projectSize84);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker88 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet86, (double) 0L);
        qualification65.removeWorker(worker88);
        edu.colostate.cs415.dto.WorkerDTO workerDTO90 = worker88.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO91 = worker88.toDTO();
        edu.colostate.cs415.model.Project project92 = null;
        boolean boolean93 = worker88.willOverload(project92);
        edu.colostate.cs415.dto.WorkerDTO workerDTO94 = worker88.toDTO();
        qualification3.addWorker(worker88);
        edu.colostate.cs415.dto.WorkerDTO workerDTO96 = worker88.toDTO();
        double double97 = worker88.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(qualificationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(project85);
        org.junit.Assert.assertNotNull(qualificationSet86);
        org.junit.Assert.assertNotNull(workerDTO90);
        org.junit.Assert.assertNotNull(workerDTO91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(workerDTO94);
        org.junit.Assert.assertNotNull(workerDTO96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        boolean boolean33 = qualification28.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification28.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification28.getWorkers();
        boolean boolean36 = worker21.equals((java.lang.Object) workerSet35);
        double double37 = worker21.getSalary();
        int int38 = worker21.getWorkload();
        boolean boolean39 = worker21.isAvailable();
        java.lang.String str40 = worker21.toString();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getAvailableWorkers();
        java.lang.String str44 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnavailableWorkers();
        java.lang.String str46 = company42.toString();
        java.lang.String str47 = company42.toString();
        java.lang.Object obj48 = null;
        boolean boolean49 = company42.equals(obj48);
        boolean boolean50 = worker21.equals((java.lang.Object) boolean49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker21.getQualifications();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        boolean boolean58 = qualification55.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification55.toDTO();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        boolean boolean64 = qualification55.equals((java.lang.Object) qualification63);
        java.lang.String str65 = qualification63.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification63.getWorkers();
        worker21.addQualification(qualification63);
        java.lang.String str68 = qualification63.toString();
        java.lang.String str69 = qualification63.toString();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        boolean boolean76 = qualification73.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO77 = qualification73.toDTO();
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        boolean boolean82 = qualification73.equals((java.lang.Object) qualification81);
        java.lang.String str83 = qualification81.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = qualification81.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO85 = qualification81.toDTO();
        boolean boolean86 = qualification63.equals((java.lang.Object) qualificationDTO85);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:1:0" + "'", str40, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(qualificationDTO77);
        org.junit.Assert.assertNotNull(qualification81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(workerSet84);
        org.junit.Assert.assertNotNull(qualificationDTO85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project35 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company16.createProject("hi!", qualificationSet23, projectSize24);
        edu.colostate.cs415.model.Worker worker27 = company1.createWorker("hi!", qualificationSet23, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company1.getQualifications();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:1:10");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        java.lang.String str5 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:1:10");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        worker48.setSalary((double) 10.0f);
        qualification13.addWorker(worker48);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification13.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerSet53);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        boolean boolean12 = company7.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str24 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("");
        java.lang.String str28 = company23.toString();
        boolean boolean29 = qualification17.equals((java.lang.Object) str28);
        boolean boolean30 = company7.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company7.getAvailableWorkers();
        boolean boolean32 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Project project33 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNull(qualification27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker29.willOverload(project34);
        java.lang.String str36 = worker29.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str23 = company22.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getAvailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company30.createProject("hi!", qualificationSet37, projectSize38);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company42.getProjects();
        edu.colostate.cs415.model.Qualification qualification45 = company42.createQualification("");
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = company42.createWorker("hi!:0:0", qualificationSet50, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker54 = company30.createWorker("", qualificationSet50, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        edu.colostate.cs415.model.Project project56 = company26.createProject("", qualificationSet50, projectSize55);
        edu.colostate.cs415.model.ProjectSize projectSize57 = null;
        edu.colostate.cs415.model.Project project58 = company22.createProject("hi!:0:0", qualificationSet50, projectSize57);
        edu.colostate.cs415.model.Worker worker60 = company1.createWorker("hi!", qualificationSet50, (double) 1.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project62 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertNull(worker52);
        org.junit.Assert.assertNull(worker54);
        org.junit.Assert.assertNull(project56);
        org.junit.Assert.assertNull(project58);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(workerSet61);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.lang.String str23 = worker19.toString();
        worker19.setSalary((double) ' ');
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getAvailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company33.createProject("hi!", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company45.getProjects();
        edu.colostate.cs415.model.Qualification qualification48 = company45.createQualification("");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = company45.createWorker("hi!:0:0", qualificationSet53, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker57 = company33.createWorker("", qualificationSet53, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker59 = company27.createWorker("", qualificationSet53, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company27.getUnavailableWorkers();
        boolean boolean61 = worker19.equals((java.lang.Object) company27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company27.getAssignedWorkers();
        java.lang.Class<?> wildcardClass64 = company27.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:1:10" + "'", str23, "hi!:0:1:10");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(worker55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.lang.String str23 = worker19.toString();
        worker19.setSalary((double) ' ');
        edu.colostate.cs415.model.Project project26 = null;
        boolean boolean27 = worker19.willOverload(project26);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = worker19.getProjects();
        edu.colostate.cs415.model.Project project29 = null;
        boolean boolean30 = worker19.willOverload(project29);
        double double31 = worker19.getSalary();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:1:10" + "'", str23, "hi!:0:1:10");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 32.0d + "'", double31 == 32.0d);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        worker34.setSalary((double) 0.0f);
        edu.colostate.cs415.dto.WorkerDTO workerDTO48 = worker34.toDTO();
        boolean boolean49 = worker34.isAvailable();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(workerDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification11.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification11.toDTO();
        boolean boolean17 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification11.toDTO();
        edu.colostate.cs415.model.Qualification qualification20 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        edu.colostate.cs415.model.Project project37 = company23.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, projectSize36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = worker40.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker40.getQualifications();
        qualification20.removeWorker(worker40);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification47.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification47.toDTO();
        worker40.addQualification(qualification47);
        edu.colostate.cs415.model.Project project54 = null;
        boolean boolean55 = worker40.willOverload(project54);
        worker40.setSalary((double) ' ');
        java.lang.String str58 = worker40.toString();
        qualification11.removeWorker(worker40);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification11.getWorkers();
        java.lang.String str61 = qualification11.toString();
        edu.colostate.cs415.model.Worker worker62 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification11.removeWorker(worker62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(project37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:1:32" + "'", str58, "hi!:0:1:32");
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:1:0");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        worker21.setSalary((double) 10);
        worker21.setSalary(10.0d);
        worker21.setSalary(100.0d);
        qualification1.addWorker(worker21);
        int int30 = worker21.getWorkload();
        java.lang.String str31 = worker21.getName();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company15.createProject("hi!", qualificationSet22, projectSize23);
        edu.colostate.cs415.model.Worker worker26 = company12.createWorker("", qualificationSet22, 1.0d);
        edu.colostate.cs415.model.Worker worker28 = company7.createWorker("hi!", qualificationSet22, (double) (-1.0f));
        boolean boolean29 = company2.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project31 = new edu.colostate.cs415.model.Project("hi!:0:1:32", qualificationSet22, projectSize30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNull(worker26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company27.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company22.createProject("hi!", qualificationSet29, projectSize30);
        edu.colostate.cs415.model.Worker worker33 = company19.createWorker("", qualificationSet29, 1.0d);
        edu.colostate.cs415.model.Worker worker35 = company14.createWorker("hi!", qualificationSet29, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company14.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str40 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company39.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company52.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        edu.colostate.cs415.model.Project project56 = company47.createProject("hi!", qualificationSet54, projectSize55);
        edu.colostate.cs415.model.Worker worker58 = company44.createWorker("", qualificationSet54, 1.0d);
        edu.colostate.cs415.model.Worker worker60 = company39.createWorker("hi!", qualificationSet54, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company39.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company39.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification64 = company39.createQualification("");
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company67.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company67.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        edu.colostate.cs415.model.Project project71 = company39.createProject("hi!:0:0", qualificationSet69, projectSize70);
        edu.colostate.cs415.model.Worker worker73 = company14.createWorker("", qualificationSet69, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company2.createProject("hi!:0:0", qualificationSet69, projectSize74);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker77 = new edu.colostate.cs415.model.Worker("hi!:0:1:0", qualificationSet69, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNull(worker33);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNull(project56);
        org.junit.Assert.assertNull(worker58);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualificationSet69);
        org.junit.Assert.assertNull(project71);
        org.junit.Assert.assertNull(worker73);
        org.junit.Assert.assertNull(project75);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.lang.String str12 = company7.getName();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company15.createProject("hi!", qualificationSet22, projectSize23);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company27.createQualification("");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = company27.createWorker("hi!:0:0", qualificationSet35, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker39 = company15.createWorker("", qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker41 = company7.createWorker("hi!:0:0", qualificationSet35, (double) 'a');
        edu.colostate.cs415.model.Worker worker43 = company1.createWorker("hi!:0:0", qualificationSet35, (double) (byte) -1);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification47.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification47.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification47.getWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification55.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification55.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification55.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification55.toDTO();
        boolean boolean61 = qualification47.equals((java.lang.Object) qualification55);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification55.toDTO();
        boolean boolean63 = company1.equals((java.lang.Object) qualificationDTO62);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNull(worker41);
        org.junit.Assert.assertNull(worker43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification11.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification11.toDTO();
        boolean boolean17 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification11.toDTO();
        edu.colostate.cs415.model.Qualification qualification20 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        edu.colostate.cs415.model.Project project37 = company23.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, projectSize36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = worker40.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker40.getQualifications();
        qualification20.removeWorker(worker40);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification47.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification47.toDTO();
        worker40.addQualification(qualification47);
        edu.colostate.cs415.model.Project project54 = null;
        boolean boolean55 = worker40.willOverload(project54);
        worker40.setSalary((double) ' ');
        java.lang.String str58 = worker40.toString();
        qualification11.removeWorker(worker40);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification11.getWorkers();
        java.lang.String str61 = qualification11.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification11.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(project37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:1:32" + "'", str58, "hi!:0:1:32");
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO62);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company6.getUnavailableWorkers();
        boolean boolean39 = company1.equals((java.lang.Object) company6);
        java.lang.String str40 = company1.getName();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification44.toDTO();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        boolean boolean53 = qualification44.equals((java.lang.Object) qualification52);
        java.lang.String str54 = qualification52.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        boolean boolean62 = company58.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray68 = new edu.colostate.cs415.model.Qualification[] { qualification67 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet69 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet69, qualificationArray68);
        edu.colostate.cs415.model.ProjectSize projectSize71 = null;
        edu.colostate.cs415.model.Project project72 = company58.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet69, projectSize71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company58.getQualifications();
        edu.colostate.cs415.model.Worker worker75 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet73, (double) 0L);
        qualification52.removeWorker(worker75);
        int int77 = worker75.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet78 = worker75.getQualifications();
        edu.colostate.cs415.model.Project project79 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker75, project79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(qualificationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(project72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(qualificationSet78);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification3.toDTO();
        java.lang.Object obj17 = null;
        boolean boolean18 = qualification3.equals(obj17);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean31 = qualification28.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification28.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification28.toDTO();
        worker21.addQualification(qualification28);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = worker21.getProjects();
        java.lang.String str36 = worker21.toString();
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker21.removeProject(project37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:1:0" + "'", str36, "hi!:0:1:0");
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        double double38 = worker34.getSalary();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company40.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company40.createQualification("");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company46.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = company40.createWorker("hi!:0:0", qualificationSet48, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company60.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize63 = null;
        edu.colostate.cs415.model.Project project64 = company55.createProject("hi!", qualificationSet62, projectSize63);
        edu.colostate.cs415.model.Worker worker66 = company40.createWorker("hi!", qualificationSet62, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company40.getEmployedWorkers();
        boolean boolean69 = worker34.equals((java.lang.Object) company40);
        edu.colostate.cs415.model.Project project70 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.addProject(project70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNull(worker50);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertNull(project64);
        org.junit.Assert.assertNull(worker66);
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        boolean boolean44 = worker34.equals((java.lang.Object) '#');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = worker34.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker34.getQualifications();
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker34.willOverload(project47);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean31 = qualification22.equals((java.lang.Object) qualification30);
        java.lang.String str32 = qualification30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        boolean boolean40 = company36.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray46 = new edu.colostate.cs415.model.Qualification[] { qualification45 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet47 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet47, qualificationArray46);
        edu.colostate.cs415.model.ProjectSize projectSize49 = null;
        edu.colostate.cs415.model.Project project50 = company36.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet47, projectSize49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet51, (double) 0L);
        qualification30.removeWorker(worker53);
        qualification8.addWorker(worker53);
        qualification3.addWorker(worker53);
        double double57 = worker53.getSalary();
        int int58 = worker53.getWorkload();
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker53.addProject(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(project50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        worker38.setSalary((double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO42 = worker38.toDTO();
        java.lang.String str43 = worker38.getName();
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker38, project44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(workerDTO42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        boolean boolean42 = qualification37.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean49 = company45.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray55 = new edu.colostate.cs415.model.Qualification[] { qualification54 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet56 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet56, qualificationArray55);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company45.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet56, projectSize58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company45.getUnavailableWorkers();
        boolean boolean61 = qualification37.equals((java.lang.Object) workerSet60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        worker29.setSalary(10.0d);
        edu.colostate.cs415.model.Project project66 = null;
        boolean boolean67 = worker29.willOverload(project66);
        double double68 = worker29.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 10.0d + "'", double68 == 10.0d);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company6.getUnavailableWorkers();
        boolean boolean39 = company1.equals((java.lang.Object) company6);
        java.lang.String str40 = company1.getName();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        edu.colostate.cs415.model.Worker worker59 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, (double) (byte) 1);
        edu.colostate.cs415.model.Qualification qualification61 = company1.createQualification("hi!:0:1:0");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification65.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO68 = qualification65.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification65.toDTO();
        java.lang.Object obj70 = null;
        boolean boolean71 = qualification65.equals(obj70);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification76 = company74.createQualification("hi!");
        boolean boolean78 = company74.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company81 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification83 = company81.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray84 = new edu.colostate.cs415.model.Qualification[] { qualification83 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet85 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet85, qualificationArray84);
        edu.colostate.cs415.model.ProjectSize projectSize87 = null;
        edu.colostate.cs415.model.Project project88 = company74.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet85, projectSize87);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = company74.getQualifications();
        edu.colostate.cs415.model.Worker worker91 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet89, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet92 = worker91.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet93 = worker91.getQualifications();
        qualification65.addWorker(worker91);
        qualification61.removeWorker(worker91);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet96 = worker91.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(qualificationDTO68);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(qualification83);
        org.junit.Assert.assertNotNull(qualificationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(project88);
        org.junit.Assert.assertNotNull(qualificationSet89);
        org.junit.Assert.assertNotNull(qualificationSet92);
        org.junit.Assert.assertNotNull(qualificationSet93);
        org.junit.Assert.assertNotNull(projectSet96);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        boolean boolean33 = qualification28.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification28.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification28.getWorkers();
        boolean boolean36 = worker21.equals((java.lang.Object) workerSet35);
        double double37 = worker21.getSalary();
        int int38 = worker21.getWorkload();
        boolean boolean39 = worker21.isAvailable();
        java.lang.String str40 = worker21.toString();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str43 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company42.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company50.createProject("hi!", qualificationSet57, projectSize58);
        edu.colostate.cs415.model.Worker worker61 = company47.createWorker("", qualificationSet57, 1.0d);
        edu.colostate.cs415.model.Worker worker63 = company42.createWorker("hi!", qualificationSet57, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company42.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company42.getAssignedWorkers();
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        boolean boolean72 = company68.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray78 = new edu.colostate.cs415.model.Qualification[] { qualification77 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet79 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet79, qualificationArray78);
        edu.colostate.cs415.model.ProjectSize projectSize81 = null;
        edu.colostate.cs415.model.Project project82 = company68.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet79, projectSize81);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = company68.getQualifications();
        edu.colostate.cs415.model.Worker worker85 = company42.createWorker("hi!", qualificationSet83, (double) (short) 10);
        boolean boolean86 = worker21.equals((java.lang.Object) worker85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<edu.colostate.cs415.model.Project> projectSet87 = worker85.getProjects();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:1:0" + "'", str40, "hi!:0:1:0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertNull(worker63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(qualificationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(project82);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertNull(worker85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        double double40 = worker34.getSalary();
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.removeProject(project41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.lang.String str12 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.lang.String str14 = company1.toString();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        qualification3.removeWorker(worker48);
        int int51 = worker48.getWorkload();
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker48.addProject(project52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!:0:2:0", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        boolean boolean48 = qualification3.equals((java.lang.Object) worker46);
        java.lang.String str49 = worker46.toString();
        java.lang.String str50 = worker46.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:1:0" + "'", str49, "hi!:0:1:0");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean23 = qualification14.equals((java.lang.Object) qualification22);
        java.lang.String str24 = qualification22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray38 = new edu.colostate.cs415.model.Qualification[] { qualification37 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet39 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet39, qualificationArray38);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company28.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet39, projectSize41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 0L);
        qualification22.removeWorker(worker45);
        qualification3.addWorker(worker45);
        java.lang.Class<?> wildcardClass48 = worker45.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.lang.String str13 = company1.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getAvailableWorkers();
        java.lang.String str18 = company16.toString();
        java.lang.String str19 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!:0:0", qualificationSet20, 1.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project24 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(workerSet23);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray19 = new edu.colostate.cs415.model.Qualification[] { qualification18 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet20 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet20, qualificationArray19);
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company9.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet20, projectSize22);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = worker26.getQualifications();
        edu.colostate.cs415.model.Project project28 = null;
        boolean boolean29 = worker26.willOverload(project28);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = worker26.getProjects();
        java.lang.String str31 = worker26.getName();
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker26, project32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        java.lang.String str23 = company1.toString();
        java.lang.String str24 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company1.getProjects();
        java.lang.Class<?> wildcardClass27 = projectSet26.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        edu.colostate.cs415.model.Worker worker38 = company2.createWorker("hi!:0:0", qualificationSet30, 0.0d);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company2.getProjects();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company42.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company42.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize46 = null;
        edu.colostate.cs415.model.Project project47 = company2.createProject("", qualificationSet45, projectSize46);
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project49 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet45, projectSize48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNull(worker38);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNull(project47);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        worker34.setSalary((double) 10.0f);
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        boolean boolean45 = company41.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company41.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getUnavailableWorkers();
        boolean boolean49 = worker34.equals((java.lang.Object) company41);
        worker34.setSalary((double) 0L);
        edu.colostate.cs415.model.Qualification qualification53 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        boolean boolean60 = company56.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray66 = new edu.colostate.cs415.model.Qualification[] { qualification65 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet67 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet67, qualificationArray66);
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company56.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet67, projectSize69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = company56.getQualifications();
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet71, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = worker73.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = worker73.getQualifications();
        qualification53.removeWorker(worker73);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification80.getWorkers();
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company83.getUnavailableWorkers();
        boolean boolean85 = qualification80.equals((java.lang.Object) workerSet84);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification80.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = qualification80.getWorkers();
        boolean boolean88 = worker73.equals((java.lang.Object) workerSet87);
        double double89 = worker73.getSalary();
        int int90 = worker73.getWorkload();
        boolean boolean91 = worker34.equals((java.lang.Object) int90);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(qualificationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertNotNull(qualificationSet74);
        org.junit.Assert.assertNotNull(qualificationSet75);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNotNull(workerSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertNotNull(workerSet87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.lang.String str11 = company9.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company16.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, projectSize29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = worker33.getQualifications();
        worker33.setSalary((double) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = worker33.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker33.getQualifications();
        qualification13.addWorker(worker33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker33.getQualifications();
        java.lang.String str41 = worker33.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray17 = new edu.colostate.cs415.model.Qualification[] { qualification16 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet18 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet18, qualificationArray17);
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        edu.colostate.cs415.model.Project project21 = company7.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet18, projectSize20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker24.getQualifications();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnassignedWorkers();
        java.lang.String str32 = company28.getName();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getAvailableWorkers();
        java.lang.String str37 = company35.toString();
        java.lang.String str38 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company28.createProject("hi!", qualificationSet39, projectSize40);
        java.lang.String str42 = company28.toString();
        boolean boolean43 = worker24.equals((java.lang.Object) str42);
        qualification3.addWorker(worker24);
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker24.toDTO();
        edu.colostate.cs415.model.Project project46 = null;
        boolean boolean47 = worker24.willOverload(project46);
        boolean boolean48 = worker24.isAvailable();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(project21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Worker worker21 = company7.createWorker("", qualificationSet17, 1.0d);
        edu.colostate.cs415.model.Worker worker23 = company2.createWorker("hi!", qualificationSet17, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company40.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company35.createProject("hi!", qualificationSet42, projectSize43);
        edu.colostate.cs415.model.Worker worker46 = company32.createWorker("", qualificationSet42, 1.0d);
        edu.colostate.cs415.model.Worker worker48 = company27.createWorker("hi!", qualificationSet42, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company27.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification52 = company27.createQualification("");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company27.createProject("hi!:0:0", qualificationSet57, projectSize58);
        edu.colostate.cs415.model.Worker worker61 = company2.createWorker("", qualificationSet57, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker63 = new edu.colostate.cs415.model.Worker("hi!:0:2:0", qualificationSet57, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNull(worker23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNull(worker48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNull(worker61);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:1:100");
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean23 = qualification14.equals((java.lang.Object) qualification22);
        java.lang.String str24 = qualification22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray38 = new edu.colostate.cs415.model.Qualification[] { qualification37 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet39 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet39, qualificationArray38);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company28.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet39, projectSize41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 0L);
        qualification22.removeWorker(worker45);
        qualification3.addWorker(worker45);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        boolean boolean54 = company50.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray60 = new edu.colostate.cs415.model.Qualification[] { qualification59 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet61 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet61, qualificationArray60);
        edu.colostate.cs415.model.ProjectSize projectSize63 = null;
        edu.colostate.cs415.model.Project project64 = company50.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet61, projectSize63);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = company50.getQualifications();
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet65, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = worker67.getQualifications();
        worker67.setSalary((double) 10);
        java.lang.String str71 = worker67.toString();
        worker67.setSalary((double) ' ');
        edu.colostate.cs415.model.Project project74 = null;
        boolean boolean75 = worker67.willOverload(project74);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = qualification79.getWorkers();
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company82.getUnavailableWorkers();
        boolean boolean84 = qualification79.equals((java.lang.Object) workerSet83);
        java.lang.String str85 = qualification79.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet86 = qualification79.getWorkers();
        java.lang.String str87 = qualification79.toString();
        java.lang.String str88 = qualification79.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO89 = qualification79.toDTO();
        worker67.addQualification(qualification79);
        worker45.addQualification(qualification79);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(project64);
        org.junit.Assert.assertNotNull(qualificationSet65);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:0:1:10" + "'", str71, "hi!:0:1:10");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(workerSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertNotNull(workerSet86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO89);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company14.createProject("hi!", qualificationSet21, projectSize22);
        edu.colostate.cs415.model.Worker worker25 = company11.createWorker("", qualificationSet21, 1.0d);
        edu.colostate.cs415.model.Worker worker27 = company6.createWorker("hi!", qualificationSet21, (double) (-1.0f));
        boolean boolean28 = company1.equals((java.lang.Object) qualificationSet21);
        java.lang.String str29 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNull(worker25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company11.getUnassignedWorkers();
        java.lang.String str27 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str38 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company37.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company50.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company50.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize53 = null;
        edu.colostate.cs415.model.Project project54 = company45.createProject("hi!", qualificationSet52, projectSize53);
        edu.colostate.cs415.model.Worker worker56 = company42.createWorker("", qualificationSet52, 1.0d);
        edu.colostate.cs415.model.Worker worker58 = company37.createWorker("hi!", qualificationSet52, (double) (-1.0f));
        boolean boolean59 = company32.equals((java.lang.Object) qualificationSet52);
        edu.colostate.cs415.model.Worker worker61 = company11.createWorker("hi!", qualificationSet52, (double) (-1));
        edu.colostate.cs415.model.Worker worker63 = company2.createWorker("hi!:0:0", qualificationSet52, (double) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker65 = new edu.colostate.cs415.model.Worker("hi!:0:1:32:0:0", qualificationSet52, 32.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertNull(project54);
        org.junit.Assert.assertNull(worker56);
        org.junit.Assert.assertNull(worker58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(worker61);
        org.junit.Assert.assertNull(worker63);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean13 = qualification4.equals((java.lang.Object) qualification12);
        java.lang.String str14 = qualification12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0L);
        qualification12.removeWorker(worker35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company38.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company38.getAssignedWorkers();
        boolean boolean43 = worker35.equals((java.lang.Object) workerSet42);
        boolean boolean45 = worker35.equals((java.lang.Object) '#');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker35.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:1:32:0:1:12", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker48.toDTO();
        edu.colostate.cs415.model.Project project50 = null;
        boolean boolean51 = worker48.willOverload(project50);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company1.getQualifications();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str26 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company25.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company33.createProject("hi!", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Worker worker44 = company30.createWorker("", qualificationSet40, 1.0d);
        edu.colostate.cs415.model.Worker worker46 = company25.createWorker("hi!", qualificationSet40, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company25.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company25.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification50 = company25.createQualification("hi!:0:1:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company25.getAvailableWorkers();
        boolean boolean52 = company1.equals((java.lang.Object) company25);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company25.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNull(worker44);
        org.junit.Assert.assertNull(worker46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(workerSet53);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company36.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company31.createProject("hi!", qualificationSet38, projectSize39);
        edu.colostate.cs415.model.Worker worker42 = company28.createWorker("", qualificationSet38, 1.0d);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company20.createProject("", qualificationSet38, projectSize43);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company14.createProject("hi!", qualificationSet38, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company14.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass49 = company14.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNull(worker42);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.lang.Class<?> wildcardClass22 = qualificationSet19.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification17 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker37.getQualifications();
        qualification17.removeWorker(worker37);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        boolean boolean49 = qualification44.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification44.getWorkers();
        boolean boolean52 = worker37.equals((java.lang.Object) workerSet51);
        qualification3.addWorker(worker37);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean60 = qualification57.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification57.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        boolean boolean66 = qualification57.equals((java.lang.Object) qualification65);
        java.lang.String str67 = qualification65.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification65.getWorkers();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        boolean boolean75 = company71.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray81 = new edu.colostate.cs415.model.Qualification[] { qualification80 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet82 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet82, qualificationArray81);
        edu.colostate.cs415.model.ProjectSize projectSize84 = null;
        edu.colostate.cs415.model.Project project85 = company71.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet82, projectSize84);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker88 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet86, (double) 0L);
        qualification65.removeWorker(worker88);
        edu.colostate.cs415.dto.WorkerDTO workerDTO90 = worker88.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO91 = worker88.toDTO();
        edu.colostate.cs415.model.Project project92 = null;
        boolean boolean93 = worker88.willOverload(project92);
        edu.colostate.cs415.dto.WorkerDTO workerDTO94 = worker88.toDTO();
        qualification3.addWorker(worker88);
        java.lang.String str96 = worker88.getName();
        java.lang.String str97 = worker88.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(qualificationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(project85);
        org.junit.Assert.assertNotNull(qualificationSet86);
        org.junit.Assert.assertNotNull(workerDTO90);
        org.junit.Assert.assertNotNull(workerDTO91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(workerDTO94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!" + "'", str96, "hi!");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "hi!:0:1:0" + "'", str97, "hi!:0:1:0");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.lang.String str32 = company1.getName();
        java.lang.String str33 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification37 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company1.getProjects();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification42.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification42.toDTO();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray58 = new edu.colostate.cs415.model.Qualification[] { qualification57 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet59 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet59, qualificationArray58);
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        edu.colostate.cs415.model.Project project62 = company48.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet59, projectSize61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker65 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet63, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker65.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = worker65.getQualifications();
        qualification42.removeWorker(worker65);
        java.lang.String str69 = worker65.toString();
        edu.colostate.cs415.model.Project project70 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker65, project70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(project62);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:1:0" + "'", str69, "hi!:0:1:0");
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company18.getUnassignedWorkers();
        java.lang.String str34 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str45 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company57.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize60 = null;
        edu.colostate.cs415.model.Project project61 = company52.createProject("hi!", qualificationSet59, projectSize60);
        edu.colostate.cs415.model.Worker worker63 = company49.createWorker("", qualificationSet59, 1.0d);
        edu.colostate.cs415.model.Worker worker65 = company44.createWorker("hi!", qualificationSet59, (double) (-1.0f));
        boolean boolean66 = company39.equals((java.lang.Object) qualificationSet59);
        edu.colostate.cs415.model.Worker worker68 = company18.createWorker("hi!", qualificationSet59, (double) (-1));
        edu.colostate.cs415.model.Worker worker70 = company1.createWorker("hi!", qualificationSet59, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        boolean boolean79 = company75.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray85 = new edu.colostate.cs415.model.Qualification[] { qualification84 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet86 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet86, qualificationArray85);
        edu.colostate.cs415.model.ProjectSize projectSize88 = null;
        edu.colostate.cs415.model.Project project89 = company75.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet86, projectSize88);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = company75.getQualifications();
        edu.colostate.cs415.model.Worker worker92 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet90, (double) 0L);
        worker92.setSalary((double) 0.0f);
        int int95 = worker92.getWorkload();
        edu.colostate.cs415.model.Project project96 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker92, project96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNull(project61);
        org.junit.Assert.assertNull(worker63);
        org.junit.Assert.assertNull(worker65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(worker68);
        org.junit.Assert.assertNull(worker70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualificationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(project89);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean31 = qualification28.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification28.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification28.toDTO();
        worker21.addQualification(qualification28);
        edu.colostate.cs415.model.Project project35 = null;
        boolean boolean36 = worker21.willOverload(project35);
        worker21.setSalary((double) ' ');
        java.lang.String str39 = worker21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = worker21.getProjects();
        boolean boolean41 = worker21.isAvailable();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:1:32" + "'", str39, "hi!:0:1:32");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company12.createQualification("");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = company12.createWorker("hi!:0:0", qualificationSet20, (double) 100.0f);
        boolean boolean23 = qualification3.equals((java.lang.Object) company12);
        edu.colostate.cs415.model.Qualification qualification25 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray38 = new edu.colostate.cs415.model.Qualification[] { qualification37 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet39 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet39, qualificationArray38);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company28.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet39, projectSize41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker45.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker45.getQualifications();
        qualification25.removeWorker(worker45);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification52.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification52.toDTO();
        worker45.addQualification(qualification52);
        java.lang.String str59 = worker45.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = worker45.getProjects();
        qualification3.addWorker(worker45);
        java.lang.String str62 = worker45.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker45.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:1:0" + "'", str59, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet63);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.lang.String str12 = company1.getName();
        java.lang.String str13 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company1.getProjects();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(projectSet14);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company14.createProject("hi!", qualificationSet21, projectSize22);
        edu.colostate.cs415.model.Worker worker25 = company11.createWorker("", qualificationSet21, 1.0d);
        edu.colostate.cs415.model.Worker worker27 = company6.createWorker("hi!", qualificationSet21, (double) (-1.0f));
        boolean boolean28 = company1.equals((java.lang.Object) qualificationSet21);
        edu.colostate.cs415.model.Qualification qualification30 = company1.createQualification("hi!:0:1:10");
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNull(worker25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification12.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification12.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        java.lang.Object obj17 = null;
        boolean boolean18 = qualification12.equals(obj17);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker38.getQualifications();
        qualification12.addWorker(worker38);
        boolean boolean42 = qualification3.equals((java.lang.Object) worker38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = worker38.getQualifications();
        edu.colostate.cs415.model.Project project44 = null;
        boolean boolean45 = worker38.willOverload(project44);
        int int46 = worker38.getWorkload();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification41.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification41.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification41.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification49.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification49.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification49.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification49.toDTO();
        boolean boolean55 = qualification41.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification49.toDTO();
        worker34.addQualification(qualification49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification49.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(qualificationDTO58);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company6.getUnavailableWorkers();
        boolean boolean39 = company1.equals((java.lang.Object) company6);
        java.lang.String str40 = company1.getName();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company48.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize51 = null;
        edu.colostate.cs415.model.Project project52 = company43.createProject("hi!", qualificationSet50, projectSize51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company43.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company1.createProject("hi!:0:1:10", qualificationSet53, projectSize54);
        edu.colostate.cs415.model.Project project56 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertNull(project52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(project55);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.lang.String str16 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getEmployedWorkers();
        java.lang.String str18 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        boolean boolean40 = worker34.isAvailable();
        java.lang.String str41 = worker34.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker34.getQualifications();
        worker34.setSalary((double) 100.0f);
        edu.colostate.cs415.model.Project project45 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.addProject(project45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet42);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company26.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company21.createProject("hi!", qualificationSet28, projectSize29);
        edu.colostate.cs415.model.Worker worker32 = company18.createWorker("", qualificationSet28, 1.0d);
        edu.colostate.cs415.model.Worker worker34 = company13.createWorker("hi!", qualificationSet28, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str39 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company46.createProject("hi!", qualificationSet53, projectSize54);
        edu.colostate.cs415.model.Worker worker57 = company43.createWorker("", qualificationSet53, 1.0d);
        edu.colostate.cs415.model.Worker worker59 = company38.createWorker("hi!", qualificationSet53, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company38.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company38.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification63 = company38.createQualification("");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company66.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company38.createProject("hi!:0:0", qualificationSet68, projectSize69);
        edu.colostate.cs415.model.Worker worker72 = company13.createWorker("", qualificationSet68, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company1.createProject("hi!:0:0", qualificationSet68, projectSize73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company1.getAssignedWorkers();
        java.lang.String str76 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNull(worker72);
        org.junit.Assert.assertNull(project74);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(workerSet77);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company5.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company17.createQualification("");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company17.createWorker("hi!:0:0", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("", qualificationSet25, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company1.createProject("", qualificationSet25, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company1.getProjects();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getAvailableWorkers();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company36.getProjects();
        boolean boolean44 = company1.equals((java.lang.Object) company36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNull(worker29);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(workerSet45);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        boolean boolean42 = qualification37.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean49 = company45.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray55 = new edu.colostate.cs415.model.Qualification[] { qualification54 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet56 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet56, qualificationArray55);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company45.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet56, projectSize58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company45.getUnavailableWorkers();
        boolean boolean61 = qualification37.equals((java.lang.Object) workerSet60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        worker29.setSalary(10.0d);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker29.getQualifications();
        java.lang.String str67 = worker29.getName();
        edu.colostate.cs415.model.Project project68 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.addProject(project68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean13 = qualification8.equals((java.lang.Object) workerSet12);
        java.lang.String str14 = qualification8.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification8.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification8.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification8.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company21.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker38.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO41 = worker38.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker38.getQualifications();
        java.lang.String str43 = worker38.getName();
        boolean boolean44 = worker38.isAvailable();
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker38.toDTO();
        qualification8.addWorker(worker38);
        qualification4.addWorker(worker38);
        edu.colostate.cs415.model.Worker worker48 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification4.addWorker(worker48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNotNull(workerDTO41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(workerDTO45);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company26.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company21.createProject("hi!", qualificationSet28, projectSize29);
        edu.colostate.cs415.model.Worker worker32 = company18.createWorker("", qualificationSet28, 1.0d);
        edu.colostate.cs415.model.Worker worker34 = company13.createWorker("hi!", qualificationSet28, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str39 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company46.createProject("hi!", qualificationSet53, projectSize54);
        edu.colostate.cs415.model.Worker worker57 = company43.createWorker("", qualificationSet53, 1.0d);
        edu.colostate.cs415.model.Worker worker59 = company38.createWorker("hi!", qualificationSet53, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company38.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company38.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification63 = company38.createQualification("");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company66.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company38.createProject("hi!:0:0", qualificationSet68, projectSize69);
        edu.colostate.cs415.model.Worker worker72 = company13.createWorker("", qualificationSet68, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company1.createProject("hi!:0:0", qualificationSet68, projectSize73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company1.getAssignedWorkers();
        java.lang.String str76 = company1.getName();
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        boolean boolean83 = company79.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification88 = company86.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray89 = new edu.colostate.cs415.model.Qualification[] { qualification88 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet90 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet90, qualificationArray89);
        edu.colostate.cs415.model.ProjectSize projectSize92 = null;
        edu.colostate.cs415.model.Project project93 = company79.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet90, projectSize92);
        edu.colostate.cs415.model.ProjectSize projectSize94 = null;
        edu.colostate.cs415.model.Project project95 = company1.createProject("hi!:0:0:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet90, projectSize94);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet96 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNull(worker72);
        org.junit.Assert.assertNull(project74);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(qualification81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertNotNull(qualificationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(project93);
        org.junit.Assert.assertNull(project95);
        org.junit.Assert.assertNotNull(projectSet96);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        qualification3.addWorker(worker48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO51 = worker48.toDTO();
        java.lang.String str52 = worker48.getName();
        worker48.setSalary((double) (byte) 10);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerDTO51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        edu.colostate.cs415.model.Project project21 = null;
        boolean boolean22 = worker19.willOverload(project21);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = worker19.getProjects();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getAvailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getAvailableWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company39.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company34.createProject("hi!", qualificationSet41, projectSize42);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company46.getProjects();
        edu.colostate.cs415.model.Qualification qualification49 = company46.createQualification("");
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company52.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = company46.createWorker("hi!:0:0", qualificationSet54, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker58 = company34.createWorker("", qualificationSet54, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company30.createProject("", qualificationSet54, projectSize59);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company30.getUnavailableWorkers();
        boolean boolean63 = company25.equals((java.lang.Object) company30);
        boolean boolean64 = worker19.equals((java.lang.Object) company30);
        java.lang.String str65 = worker19.toString();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNull(worker56);
        org.junit.Assert.assertNull(worker58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:1:0" + "'", str65, "hi!:0:1:0");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        boolean boolean14 = qualification9.equals((java.lang.Object) workerSet13);
        java.lang.String str15 = qualification9.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification9.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company22.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, projectSize35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = worker39.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO42 = worker39.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = worker39.getQualifications();
        java.lang.String str44 = worker39.getName();
        boolean boolean45 = worker39.isAvailable();
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker39.toDTO();
        qualification9.addWorker(worker39);
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker39, project48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerDTO42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(workerDTO46);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        qualification15.removeWorker(worker35);
        java.lang.String str39 = worker35.getName();
        boolean boolean40 = worker35.isAvailable();
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker35, project41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.lang.String str5 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:1:97");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company4.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company4.getUnassignedWorkers();
        java.lang.String str8 = company4.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getAvailableWorkers();
        java.lang.String str13 = company11.toString();
        java.lang.String str14 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        edu.colostate.cs415.model.Project project17 = company4.createProject("hi!", qualificationSet15, projectSize16);
        java.lang.String str18 = company4.toString();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company21.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification29 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company21.getAvailableWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str34 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company33.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company46.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize49 = null;
        edu.colostate.cs415.model.Project project50 = company41.createProject("hi!", qualificationSet48, projectSize49);
        edu.colostate.cs415.model.Worker worker52 = company38.createWorker("", qualificationSet48, 1.0d);
        edu.colostate.cs415.model.Worker worker54 = company33.createWorker("hi!", qualificationSet48, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company33.getAssignedWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str59 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company58.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company66.createProject("hi!", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.Worker worker77 = company63.createWorker("", qualificationSet73, 1.0d);
        edu.colostate.cs415.model.Worker worker79 = company58.createWorker("hi!", qualificationSet73, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company58.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company58.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification83 = company58.createQualification("");
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = company86.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet88 = company86.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize89 = null;
        edu.colostate.cs415.model.Project project90 = company58.createProject("hi!:0:0", qualificationSet88, projectSize89);
        edu.colostate.cs415.model.Worker worker92 = company33.createWorker("", qualificationSet88, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize93 = null;
        edu.colostate.cs415.model.Project project94 = company21.createProject("hi!:0:0", qualificationSet88, projectSize93);
        edu.colostate.cs415.model.ProjectSize projectSize95 = null;
        edu.colostate.cs415.model.Project project96 = company4.createProject("hi!:0:0", qualificationSet88, projectSize95);
        edu.colostate.cs415.model.ProjectSize projectSize97 = null;
        edu.colostate.cs415.model.Project project98 = company1.createProject("hi!:0:1:32:0:1:12:0:1:100", qualificationSet88, projectSize97);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNull(project17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNull(project50);
        org.junit.Assert.assertNull(worker52);
        org.junit.Assert.assertNull(worker54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(worker79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNull(qualification83);
        org.junit.Assert.assertNotNull(workerSet87);
        org.junit.Assert.assertNotNull(qualificationSet88);
        org.junit.Assert.assertNull(project90);
        org.junit.Assert.assertNull(worker92);
        org.junit.Assert.assertNull(project94);
        org.junit.Assert.assertNull(project96);
        org.junit.Assert.assertNull(project98);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.lang.String str23 = worker19.toString();
        worker19.setSalary((double) ' ');
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getAvailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        edu.colostate.cs415.model.Project project42 = company33.createProject("hi!", qualificationSet40, projectSize41);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company45.getProjects();
        edu.colostate.cs415.model.Qualification qualification48 = company45.createQualification("");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = company45.createWorker("hi!:0:0", qualificationSet53, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker57 = company33.createWorker("", qualificationSet53, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker59 = company27.createWorker("", qualificationSet53, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company27.getUnavailableWorkers();
        boolean boolean61 = worker19.equals((java.lang.Object) company27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company27.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:1:10" + "'", str23, "hi!:0:1:10");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNull(project42);
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(worker55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNotNull(workerSet63);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass28 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker19.getQualifications();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company23.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company23.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification29 = company23.createQualification("hi!:0:0");
        worker19.addQualification(qualification29);
        boolean boolean31 = worker19.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = worker19.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO33 = worker19.toDTO();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO33);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAvailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("hi!", qualificationSet13, projectSize14);
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNull(project15);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        java.lang.String str7 = qualification5.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str25 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company37.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company32.createProject("hi!", qualificationSet39, projectSize40);
        edu.colostate.cs415.model.Worker worker43 = company29.createWorker("", qualificationSet39, 1.0d);
        edu.colostate.cs415.model.Worker worker45 = company24.createWorker("hi!", qualificationSet39, (double) (-1.0f));
        boolean boolean46 = company19.equals((java.lang.Object) qualificationSet39);
        boolean boolean47 = company1.equals((java.lang.Object) boolean46);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean53 = company49.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray59 = new edu.colostate.cs415.model.Qualification[] { qualification58 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet60 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet60, qualificationArray59);
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company49.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet60, projectSize62);
        boolean boolean64 = company1.equals((java.lang.Object) projectSize62);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet65 = company1.getProjects();
        java.lang.String str66 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNull(worker43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(projectSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet67);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company6.getProjects();
        edu.colostate.cs415.model.Qualification qualification9 = company6.createQualification("");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company6.createWorker("hi!:0:0", qualificationSet14, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company1.createProject("hi!:0:0", qualificationSet14, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNull(worker16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(workerSet19);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company16.createProject("hi!", qualificationSet23, projectSize24);
        edu.colostate.cs415.model.Worker worker27 = company1.createWorker("hi!", qualificationSet23, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification29 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.ProjectSize projectSize45 = null;
        edu.colostate.cs415.model.Project project46 = company32.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, projectSize45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet47, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = worker49.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker49.getQualifications();
        qualification29.removeWorker(worker49);
        edu.colostate.cs415.model.Project project53 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker49, project53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(project46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertNotNull(qualificationSet51);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker48.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO51 = worker48.toDTO();
        boolean boolean52 = qualification3.equals((java.lang.Object) workerDTO51);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet56 = company55.getProjects();
        edu.colostate.cs415.model.Qualification qualification58 = company55.createQualification("");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker65 = company55.createWorker("hi!:0:0", qualificationSet63, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company55.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company55.getUnassignedWorkers();
        java.lang.String str68 = company55.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company55.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company55.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company55.getAssignedWorkers();
        boolean boolean72 = qualification3.equals((java.lang.Object) workerSet71);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(workerDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(projectSet56);
        org.junit.Assert.assertNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertNull(worker65);
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.getName();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        java.lang.String str11 = company8.toString();
        boolean boolean13 = company8.equals((java.lang.Object) (-1L));
        java.lang.String str14 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company8.getQualifications();
        boolean boolean18 = company1.equals((java.lang.Object) company8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean26 = qualification23.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification23.toDTO();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean32 = qualification23.equals((java.lang.Object) qualification31);
        java.lang.String str33 = qualification31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray47 = new edu.colostate.cs415.model.Qualification[] { qualification46 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet48 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet48, qualificationArray47);
        edu.colostate.cs415.model.ProjectSize projectSize50 = null;
        edu.colostate.cs415.model.Project project51 = company37.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet48, projectSize50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet52, (double) 0L);
        qualification31.removeWorker(worker54);
        int int56 = worker54.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = worker54.getProjects();
        worker54.setSalary((double) 100);
        edu.colostate.cs415.model.Project project60 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker54, project60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(project51);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(projectSet57);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        boolean boolean44 = worker34.equals((java.lang.Object) '#');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = worker34.getQualifications();
        java.lang.String str46 = worker34.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        worker19.setSalary((double) 0.0f);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean28 = qualification25.equals((java.lang.Object) 'a');
        java.lang.String str29 = qualification25.toString();
        java.lang.String str30 = qualification25.toString();
        boolean boolean31 = worker19.equals((java.lang.Object) qualification25);
        boolean boolean32 = worker19.isAvailable();
        edu.colostate.cs415.model.Project project33 = null;
        boolean boolean34 = worker19.willOverload(project33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = worker19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = worker19.getProjects();
        java.lang.String str37 = worker19.toString();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:1:0" + "'", str37, "hi!:0:1:0");
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.lang.String str5 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        worker34.setSalary((double) 10.0f);
        worker34.setSalary(10.0d);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = worker34.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet40);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company26.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company21.createProject("hi!", qualificationSet28, projectSize29);
        edu.colostate.cs415.model.Worker worker32 = company18.createWorker("", qualificationSet28, 1.0d);
        edu.colostate.cs415.model.Worker worker34 = company13.createWorker("hi!", qualificationSet28, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str39 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company46.createProject("hi!", qualificationSet53, projectSize54);
        edu.colostate.cs415.model.Worker worker57 = company43.createWorker("", qualificationSet53, 1.0d);
        edu.colostate.cs415.model.Worker worker59 = company38.createWorker("hi!", qualificationSet53, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company38.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company38.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification63 = company38.createQualification("");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company66.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company38.createProject("hi!:0:0", qualificationSet68, projectSize69);
        edu.colostate.cs415.model.Worker worker72 = company13.createWorker("", qualificationSet68, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company1.createProject("hi!:0:0", qualificationSet68, projectSize73);
        java.lang.Class<?> wildcardClass75 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNull(worker72);
        org.junit.Assert.assertNull(project74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        boolean boolean25 = qualification20.equals((java.lang.Object) workerSet24);
        java.lang.String str26 = qualification20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification20.getWorkers();
        java.lang.String str28 = qualification20.toString();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean35 = qualification32.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification32.toDTO();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean41 = qualification32.equals((java.lang.Object) qualification40);
        java.lang.String str42 = qualification40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        boolean boolean50 = company46.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray56 = new edu.colostate.cs415.model.Qualification[] { qualification55 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet57 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet57, qualificationArray56);
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company46.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet57, projectSize59);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company46.getQualifications();
        edu.colostate.cs415.model.Worker worker63 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet61, (double) 0L);
        qualification40.removeWorker(worker63);
        boolean boolean65 = qualification20.equals((java.lang.Object) worker63);
        worker63.setSalary((double) 'a');
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO73 = qualification71.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification71.getWorkers();
        java.lang.String str75 = qualification71.toString();
        worker63.addQualification(qualification71);
        boolean boolean77 = worker63.isAvailable();
        boolean boolean78 = worker63.isAvailable();
        boolean boolean79 = worker63.isAvailable();
        qualification3.addWorker(worker63);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet83 = company82.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet84 = company82.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet85 = company82.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet86 = company82.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = company82.getAvailableWorkers();
        java.lang.String str88 = company82.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = null;
        edu.colostate.cs415.model.Worker worker92 = company82.createWorker("", qualificationSet90, (double) (short) -1);
        boolean boolean93 = qualification3.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationDTO73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(projectSet83);
        org.junit.Assert.assertNotNull(projectSet84);
        org.junit.Assert.assertNotNull(projectSet85);
        org.junit.Assert.assertNotNull(workerSet86);
        org.junit.Assert.assertNotNull(workerSet87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!:0:0" + "'", str88, "hi!:0:0");
        org.junit.Assert.assertNull(worker92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification3.toDTO();
        java.lang.String str14 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification17 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker37.getQualifications();
        qualification17.removeWorker(worker37);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        boolean boolean49 = qualification44.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification44.getWorkers();
        boolean boolean52 = worker37.equals((java.lang.Object) workerSet51);
        double double53 = worker37.getSalary();
        boolean boolean54 = worker37.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker37.getQualifications();
        qualification3.addWorker(worker37);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(qualificationSet55);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        boolean boolean42 = qualification37.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean49 = company45.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray55 = new edu.colostate.cs415.model.Qualification[] { qualification54 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet56 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet56, qualificationArray55);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company45.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet56, projectSize58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company45.getUnavailableWorkers();
        boolean boolean61 = qualification37.equals((java.lang.Object) workerSet60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        boolean boolean64 = worker29.isAvailable();
        edu.colostate.cs415.model.Project project65 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker29.removeProject(project65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        boolean boolean9 = company1.equals((java.lang.Object) (short) -1);
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        boolean boolean19 = company15.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray25 = new edu.colostate.cs415.model.Qualification[] { qualification24 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet26 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet26, qualificationArray25);
        edu.colostate.cs415.model.ProjectSize projectSize28 = null;
        edu.colostate.cs415.model.Project project29 = company15.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet26, projectSize28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) 0L);
        worker32.setSalary((double) 0.0f);
        int int35 = worker32.getWorkload();
        worker32.setSalary(100.0d);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker32.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = company1.createWorker("", qualificationSet38, (double) 1.0f);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str43 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company42.getUnavailableWorkers();
        java.lang.String str45 = company42.toString();
        boolean boolean47 = company42.equals((java.lang.Object) (-1L));
        boolean boolean48 = company1.equals((java.lang.Object) company42);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(project29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNull(worker40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.lang.String str23 = worker19.toString();
        worker19.setSalary((double) ' ');
        edu.colostate.cs415.model.Project project26 = null;
        boolean boolean27 = worker19.willOverload(project26);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.addProject(project28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:1:10" + "'", str23, "hi!:0:1:10");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        boolean boolean8 = company4.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray14 = new edu.colostate.cs415.model.Qualification[] { qualification13 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet15 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet15, qualificationArray14);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company4.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet15, projectSize17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company4.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = worker21.getQualifications();
        qualification1.removeWorker(worker21);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        boolean boolean33 = qualification28.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification28.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification28.getWorkers();
        boolean boolean36 = worker21.equals((java.lang.Object) workerSet35);
        double double37 = worker21.getSalary();
        int int38 = worker21.getWorkload();
        boolean boolean39 = worker21.isAvailable();
        java.lang.String str40 = worker21.toString();
        java.lang.String str41 = worker21.toString();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:1:0" + "'", str40, "hi!:0:1:0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:1:0" + "'", str41, "hi!:0:1:0");
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        boolean boolean10 = company6.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray16 = new edu.colostate.cs415.model.Qualification[] { qualification15 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet17 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet17, qualificationArray16);
        edu.colostate.cs415.model.ProjectSize projectSize19 = null;
        edu.colostate.cs415.model.Project project20 = company6.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet17, projectSize19);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = worker23.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker23.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO26 = worker23.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = worker23.getQualifications();
        boolean boolean28 = company1.equals((java.lang.Object) worker23);
        java.lang.String str29 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(project20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(workerDTO26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getAvailableWorkers();
        java.lang.String str10 = company8.toString();
        java.lang.String str11 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company8.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        edu.colostate.cs415.model.Project project14 = company1.createProject("hi!", qualificationSet12, projectSize13);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNull(project14);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnavailableWorkers();
        java.lang.String str23 = company1.toString();
        java.lang.String str24 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = new edu.colostate.cs415.model.Qualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        java.lang.String str29 = qualification27.toString();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.lang.String str34 = qualification33.toString();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean41 = qualification38.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification45.toDTO();
        boolean boolean47 = qualification38.equals((java.lang.Object) qualificationDTO46);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification38.getWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification52.toDTO();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        boolean boolean61 = qualification52.equals((java.lang.Object) qualification60);
        java.lang.String str62 = qualification60.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification60.getWorkers();
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        boolean boolean70 = company66.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray76 = new edu.colostate.cs415.model.Qualification[] { qualification75 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet77 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet77, qualificationArray76);
        edu.colostate.cs415.model.ProjectSize projectSize79 = null;
        edu.colostate.cs415.model.Project project80 = company66.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet77, projectSize79);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet81 = company66.getQualifications();
        edu.colostate.cs415.model.Worker worker83 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet81, (double) 0L);
        qualification60.removeWorker(worker83);
        qualification38.addWorker(worker83);
        qualification33.addWorker(worker83);
        qualification27.addWorker(worker83);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet88 = qualification27.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO89 = qualification27.toDTO();
        boolean boolean90 = company1.equals((java.lang.Object) qualification27);
        java.lang.Class<?> wildcardClass91 = company1.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(qualificationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(project80);
        org.junit.Assert.assertNotNull(qualificationSet81);
        org.junit.Assert.assertNotNull(workerSet88);
        org.junit.Assert.assertNotNull(qualificationDTO89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        edu.colostate.cs415.model.Project project21 = null;
        boolean boolean22 = worker19.willOverload(project21);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = worker19.getProjects();
        java.lang.String str24 = worker19.getName();
        edu.colostate.cs415.model.Qualification qualification26 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker19.addQualification(qualification26);
        double double28 = worker19.getSalary();
        java.lang.String str29 = worker19.toString();
        edu.colostate.cs415.model.Qualification qualification31 = new edu.colostate.cs415.model.Qualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        java.lang.String str33 = qualification31.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.lang.String str38 = qualification37.toString();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification42.getWorkers();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        boolean boolean59 = qualification56.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification56.toDTO();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        boolean boolean65 = qualification56.equals((java.lang.Object) qualification64);
        java.lang.String str66 = qualification64.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = qualification64.getWorkers();
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        boolean boolean74 = company70.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray80 = new edu.colostate.cs415.model.Qualification[] { qualification79 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet81 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet81, qualificationArray80);
        edu.colostate.cs415.model.ProjectSize projectSize83 = null;
        edu.colostate.cs415.model.Project project84 = company70.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet81, projectSize83);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = company70.getQualifications();
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet85, (double) 0L);
        qualification64.removeWorker(worker87);
        qualification42.addWorker(worker87);
        qualification37.addWorker(worker87);
        qualification31.addWorker(worker87);
        worker19.addQualification(qualification31);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:2:0" + "'", str29, "hi!:0:2:0");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(qualificationArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(project84);
        org.junit.Assert.assertNotNull(qualificationSet85);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Project project38 = null;
        boolean boolean39 = worker34.willOverload(project38);
        double double40 = worker34.getSalary();
        worker34.setSalary((double) (byte) 1);
        java.lang.Class<?> wildcardClass43 = worker34.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        qualification15.removeWorker(worker35);
        boolean boolean39 = company1.equals((java.lang.Object) worker35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company1.getProjects();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        boolean boolean50 = qualification45.equals((java.lang.Object) workerSet49);
        java.lang.String str51 = qualification45.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification45.getWorkers();
        java.lang.String str53 = qualification45.toString();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean60 = qualification57.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification57.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        boolean boolean66 = qualification57.equals((java.lang.Object) qualification65);
        java.lang.String str67 = qualification65.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification65.getWorkers();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        boolean boolean75 = company71.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray81 = new edu.colostate.cs415.model.Qualification[] { qualification80 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet82 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet82, qualificationArray81);
        edu.colostate.cs415.model.ProjectSize projectSize84 = null;
        edu.colostate.cs415.model.Project project85 = company71.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet82, projectSize84);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker88 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet86, (double) 0L);
        qualification65.removeWorker(worker88);
        boolean boolean90 = qualification45.equals((java.lang.Object) worker88);
        java.lang.String str91 = worker88.toString();
        java.lang.String str92 = worker88.toString();
        edu.colostate.cs415.model.Project project93 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker88, project93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(qualificationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(project85);
        org.junit.Assert.assertNotNull(qualificationSet86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:0:1:0" + "'", str91, "hi!:0:1:0");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!:0:1:0" + "'", str92, "hi!:0:1:0");
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:1:10");
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company11.getUnavailableWorkers();
        boolean boolean27 = qualification3.equals((java.lang.Object) workerSet26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(workerSet28);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        boolean boolean6 = company1.equals((java.lang.Object) (-1L));
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        boolean boolean18 = qualification13.equals((java.lang.Object) workerSet17);
        java.lang.String str19 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification13.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean28 = company24.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        edu.colostate.cs415.model.Project project38 = company24.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, projectSize37);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker41.getQualifications();
        worker41.setSalary((double) 10);
        worker41.setSalary(10.0d);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker41.getQualifications();
        boolean boolean48 = qualification13.equals((java.lang.Object) qualificationSet47);
        boolean boolean49 = company1.equals((java.lang.Object) boolean48);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(project38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company11.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company18.createQualification("");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company18.createWorker("hi!:0:0", qualificationSet26, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company11.createWorker("", qualificationSet29, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company11.getUnassignedWorkers();
        boolean boolean34 = qualification3.equals((java.lang.Object) workerSet33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean41 = qualification38.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification38.toDTO();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        boolean boolean47 = qualification38.equals((java.lang.Object) qualification46);
        java.lang.String str48 = qualification46.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification46.getWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        boolean boolean56 = company52.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray62 = new edu.colostate.cs415.model.Qualification[] { qualification61 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet63 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet63, qualificationArray62);
        edu.colostate.cs415.model.ProjectSize projectSize65 = null;
        edu.colostate.cs415.model.Project project66 = company52.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet63, projectSize65);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company52.getQualifications();
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet67, (double) 0L);
        qualification46.removeWorker(worker69);
        edu.colostate.cs415.dto.WorkerDTO workerDTO71 = worker69.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO72 = worker69.toDTO();
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification76 = company74.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = qualification76.getWorkers();
        boolean boolean79 = qualification76.equals((java.lang.Object) 'a');
        worker69.addQualification(qualification76);
        java.lang.String str81 = worker69.getName();
        edu.colostate.cs415.model.Project project82 = null;
        boolean boolean83 = worker69.willOverload(project82);
        worker69.setSalary((double) 1);
        qualification3.removeWorker(worker69);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNull(worker28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNull(worker31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualificationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(project66);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertNotNull(workerDTO71);
        org.junit.Assert.assertNotNull(workerDTO72);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification22.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification22.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification22.toDTO();
        java.lang.Object obj27 = null;
        boolean boolean28 = qualification22.equals(obj27);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker48.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = worker48.getQualifications();
        qualification22.addWorker(worker48);
        int int52 = worker48.getWorkload();
        edu.colostate.cs415.model.Project project53 = null;
        boolean boolean54 = worker48.willOverload(project53);
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker48.toDTO();
        edu.colostate.cs415.model.Project project56 = null;
        boolean boolean57 = worker48.willOverload(project56);
        java.lang.String str58 = worker48.getName();
        boolean boolean59 = qualification18.equals((java.lang.Object) worker48);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(workerDTO55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:1:97");
        edu.colostate.cs415.model.Project project2 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("");
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:1:32:0:1:12:0:1:100");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        worker34.setSalary((double) 0.0f);
        java.lang.String str48 = worker34.toString();
        edu.colostate.cs415.model.Project project49 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.addProject(project49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:1:0" + "'", str48, "hi!:0:1:0");
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company16.createProject("hi!", qualificationSet23, projectSize24);
        edu.colostate.cs415.model.Worker worker27 = company1.createWorker("hi!", qualificationSet23, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification30 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        boolean boolean38 = company34.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.ProjectSize projectSize47 = null;
        edu.colostate.cs415.model.Project project48 = company34.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, projectSize47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker51.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker51.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO54 = worker51.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker51.getQualifications();
        java.lang.String str56 = worker51.getName();
        boolean boolean57 = worker51.isAvailable();
        worker51.setSalary((double) (short) 100);
        edu.colostate.cs415.model.Project project60 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker51, project60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(project48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(workerDTO54);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Project project34 = null;
        boolean boolean35 = worker29.willOverload(project34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker29.toDTO();
        java.lang.String str37 = worker29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = worker29.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:1:0" + "'", str37, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(projectSet38);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:1:0");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray17 = new edu.colostate.cs415.model.Qualification[] { qualification16 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet18 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet18, qualificationArray17);
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        edu.colostate.cs415.model.Project project21 = company7.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet18, projectSize20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = worker24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = worker24.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO27 = worker24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker24.getQualifications();
        boolean boolean29 = qualification4.equals((java.lang.Object) qualificationSet28);
        edu.colostate.cs415.model.Qualification qualification31 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        boolean boolean38 = company34.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.ProjectSize projectSize47 = null;
        edu.colostate.cs415.model.Project project48 = company34.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, projectSize47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker51.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker51.getQualifications();
        qualification31.removeWorker(worker51);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean61 = qualification58.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification58.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification58.toDTO();
        worker51.addQualification(qualification58);
        edu.colostate.cs415.model.Project project65 = null;
        boolean boolean66 = worker51.willOverload(project65);
        worker51.setSalary((double) ' ');
        java.lang.String str69 = worker51.toString();
        qualification4.removeWorker(worker51);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = qualification4.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO72 = qualification4.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(project21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerDTO27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(project48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:1:32" + "'", str69, "hi!:0:1:32");
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(qualificationDTO72);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean25 = qualification16.equals((java.lang.Object) qualification24);
        java.lang.String str26 = qualification24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification39 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company30.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, projectSize43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 0L);
        qualification24.removeWorker(worker47);
        qualification11.addWorker(worker47);
        boolean boolean50 = worker47.isAvailable();
        int int51 = worker47.getWorkload();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean21 = qualification12.equals((java.lang.Object) qualification20);
        java.lang.String str22 = qualification20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company26.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, projectSize39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0L);
        qualification20.removeWorker(worker43);
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker43.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker43.toDTO();
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker43.willOverload(project47);
        qualification8.addWorker(worker43);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = worker43.getProjects();
        java.lang.Object obj51 = null;
        boolean boolean52 = worker43.equals(obj51);
        worker43.setSalary((double) 1);
        int int55 = worker43.getWorkload();
        edu.colostate.cs415.model.Project project56 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker43.addProject(project56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.lang.String str12 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.lang.String str14 = company1.getName();
        java.lang.Class<?> wildcardClass15 = company1.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        java.lang.String str13 = company1.toString();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company26.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company21.createProject("hi!", qualificationSet28, projectSize29);
        edu.colostate.cs415.model.Worker worker32 = company18.createWorker("", qualificationSet28, 1.0d);
        edu.colostate.cs415.model.Worker worker34 = company13.createWorker("hi!", qualificationSet28, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str39 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company46.createProject("hi!", qualificationSet53, projectSize54);
        edu.colostate.cs415.model.Worker worker57 = company43.createWorker("", qualificationSet53, 1.0d);
        edu.colostate.cs415.model.Worker worker59 = company38.createWorker("hi!", qualificationSet53, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company38.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company38.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification63 = company38.createQualification("");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company66.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company38.createProject("hi!:0:0", qualificationSet68, projectSize69);
        edu.colostate.cs415.model.Worker worker72 = company13.createWorker("", qualificationSet68, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company1.createProject("hi!:0:0", qualificationSet68, projectSize73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company1.getAssignedWorkers();
        java.lang.String str76 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNull(worker72);
        org.junit.Assert.assertNull(project74);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!:0:0" + "'", str76, "hi!:0:0");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass21 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        double double34 = worker29.getSalary();
        // The following exception was thrown during execution in test generation
        try {
            worker29.setSalary((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str2 = qualification1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = qualification1.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification1.toDTO();
        edu.colostate.cs415.model.Qualification qualification6 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray19 = new edu.colostate.cs415.model.Qualification[] { qualification18 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet20 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet20, qualificationArray19);
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        edu.colostate.cs415.model.Project project23 = company9.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet20, projectSize22);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = worker26.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker26.getQualifications();
        qualification6.removeWorker(worker26);
        qualification1.addWorker(worker26);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification34.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification34.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification34.toDTO();
        java.lang.Object obj39 = null;
        boolean boolean40 = qualification34.equals(obj39);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.ProjectSize projectSize56 = null;
        edu.colostate.cs415.model.Project project57 = company43.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, projectSize56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker60.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker60.getQualifications();
        qualification34.addWorker(worker60);
        int int64 = worker60.getWorkload();
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean71 = qualification68.equals((java.lang.Object) 'a');
        java.lang.String str72 = qualification68.toString();
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean75 = qualification68.equals((java.lang.Object) company74);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO76 = qualification68.toDTO();
        worker60.addQualification(qualification68);
        edu.colostate.cs415.dto.WorkerDTO workerDTO78 = worker60.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = worker60.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO80 = worker60.toDTO();
        qualification1.addWorker(worker60);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(project23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualificationDTO38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(project57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualificationDTO76);
        org.junit.Assert.assertNotNull(workerDTO78);
        org.junit.Assert.assertNotNull(qualificationSet79);
        org.junit.Assert.assertNotNull(workerDTO80);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification3.toDTO();
        java.lang.String str11 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean13 = qualification4.equals((java.lang.Object) qualification12);
        java.lang.String str14 = qualification12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.ProjectSize projectSize31 = null;
        edu.colostate.cs415.model.Project project32 = company18.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, projectSize31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0L);
        qualification12.removeWorker(worker35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company38.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company38.getAssignedWorkers();
        boolean boolean43 = worker35.equals((java.lang.Object) workerSet42);
        boolean boolean45 = worker35.equals((java.lang.Object) '#');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker35.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:1:32:0:1:12", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Project project49 = null;
        boolean boolean50 = worker48.willOverload(project49);
        java.lang.Class<?> wildcardClass51 = worker48.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(project32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification5.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray18 = new edu.colostate.cs415.model.Qualification[] { qualification17 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet19 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet19, qualificationArray18);
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company8.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet19, projectSize21);
        boolean boolean23 = company1.equals((java.lang.Object) projectSize21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.lang.String str29 = qualification28.toString();
        boolean boolean30 = company1.equals((java.lang.Object) str29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        java.lang.Object obj44 = null;
        boolean boolean45 = qualification34.equals(obj44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification49.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        boolean boolean58 = qualification49.equals((java.lang.Object) qualification57);
        java.lang.String str59 = qualification57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification57.getWorkers();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        boolean boolean67 = company63.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray73 = new edu.colostate.cs415.model.Qualification[] { qualification72 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet74 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet74, qualificationArray73);
        edu.colostate.cs415.model.ProjectSize projectSize76 = null;
        edu.colostate.cs415.model.Project project77 = company63.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet74, projectSize76);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet78 = company63.getQualifications();
        edu.colostate.cs415.model.Worker worker80 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet78, (double) 0L);
        qualification57.removeWorker(worker80);
        edu.colostate.cs415.dto.WorkerDTO workerDTO82 = worker80.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO83 = worker80.toDTO();
        edu.colostate.cs415.model.Project project84 = null;
        boolean boolean85 = worker80.willOverload(project84);
        boolean boolean86 = worker80.isAvailable();
        java.lang.String str87 = worker80.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet88 = worker80.getQualifications();
        qualification34.removeWorker(worker80);
        edu.colostate.cs415.model.Project project90 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker80, project90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(qualificationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(project77);
        org.junit.Assert.assertNotNull(qualificationSet78);
        org.junit.Assert.assertNotNull(workerDTO82);
        org.junit.Assert.assertNotNull(workerDTO83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet88);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean10 = qualification3.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!:0:1:10");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification17 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker37.getQualifications();
        qualification17.removeWorker(worker37);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        boolean boolean49 = qualification44.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification44.getWorkers();
        boolean boolean52 = worker37.equals((java.lang.Object) workerSet51);
        qualification3.addWorker(worker37);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean60 = qualification57.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification57.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        boolean boolean66 = qualification57.equals((java.lang.Object) qualification65);
        java.lang.String str67 = qualification65.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification65.getWorkers();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        boolean boolean75 = company71.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray81 = new edu.colostate.cs415.model.Qualification[] { qualification80 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet82 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet82, qualificationArray81);
        edu.colostate.cs415.model.ProjectSize projectSize84 = null;
        edu.colostate.cs415.model.Project project85 = company71.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet82, projectSize84);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker88 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet86, (double) 0L);
        qualification65.removeWorker(worker88);
        edu.colostate.cs415.dto.WorkerDTO workerDTO90 = worker88.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO91 = worker88.toDTO();
        edu.colostate.cs415.model.Project project92 = null;
        boolean boolean93 = worker88.willOverload(project92);
        edu.colostate.cs415.dto.WorkerDTO workerDTO94 = worker88.toDTO();
        qualification3.addWorker(worker88);
        java.lang.String str96 = worker88.toString();
        int int97 = worker88.getWorkload();
        java.lang.String str98 = worker88.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(qualificationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(project85);
        org.junit.Assert.assertNotNull(qualificationSet86);
        org.junit.Assert.assertNotNull(workerDTO90);
        org.junit.Assert.assertNotNull(workerDTO91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(workerDTO94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!:0:1:0" + "'", str96, "hi!:0:1:0");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!:0:1:0" + "'", str98, "hi!:0:1:0");
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAvailableWorkers();
        java.lang.String str4 = company2.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 'a');
        java.lang.String str13 = qualification9.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean16 = qualification9.equals((java.lang.Object) company15);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str20 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company19.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company32.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company27.createProject("hi!", qualificationSet34, projectSize35);
        edu.colostate.cs415.model.Worker worker38 = company24.createWorker("", qualificationSet34, 1.0d);
        edu.colostate.cs415.model.Worker worker40 = company19.createWorker("hi!", qualificationSet34, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company19.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company19.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company19.createQualification("");
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company47.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize50 = null;
        edu.colostate.cs415.model.Project project51 = company19.createProject("hi!:0:0", qualificationSet49, projectSize50);
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company15.createProject("hi!:0:0", qualificationSet49, projectSize52);
        edu.colostate.cs415.model.Worker worker55 = company2.createWorker("hi!:0:1:0", qualificationSet49, (double) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker57 = new edu.colostate.cs415.model.Worker("hi!:0:1:32:0:1:12", qualificationSet49, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNull(worker38);
        org.junit.Assert.assertNull(worker40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNull(project51);
        org.junit.Assert.assertNull(project53);
        org.junit.Assert.assertNull(worker55);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:1:10");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker28.getQualifications();
        edu.colostate.cs415.model.Project project30 = null;
        boolean boolean31 = worker28.willOverload(project30);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = worker28.getProjects();
        java.lang.String str33 = worker28.getName();
        edu.colostate.cs415.model.Qualification qualification35 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker28.addQualification(qualification35);
        double double37 = worker28.getSalary();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker28.getQualifications();
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker28, project39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean9 = qualification4.equals((java.lang.Object) workerSet8);
        java.lang.String str10 = qualification4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification4.getWorkers();
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean25 = qualification16.equals((java.lang.Object) qualification24);
        java.lang.String str26 = qualification24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification39 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company30.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, projectSize43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 0L);
        qualification24.removeWorker(worker47);
        boolean boolean49 = qualification4.equals((java.lang.Object) worker47);
        java.lang.String str50 = worker47.toString();
        java.lang.String str51 = worker47.toString();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        boolean boolean57 = company53.equals((java.lang.Object) 10L);
        java.lang.String str58 = company53.getName();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company66.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company61.createProject("hi!", qualificationSet68, projectSize69);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet74 = company73.getProjects();
        edu.colostate.cs415.model.Qualification qualification76 = company73.createQualification("");
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company79.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet81 = company79.getQualifications();
        edu.colostate.cs415.model.Worker worker83 = company73.createWorker("hi!:0:0", qualificationSet81, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker85 = company61.createWorker("", qualificationSet81, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker87 = company53.createWorker("hi!:0:0", qualificationSet81, (double) 'a');
        edu.colostate.cs415.model.Company company90 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet91 = company90.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet92 = company90.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet93 = company90.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize94 = null;
        edu.colostate.cs415.model.Project project95 = company53.createProject("hi!:0:0:0:0", qualificationSet93, projectSize94);
        boolean boolean96 = worker47.equals((java.lang.Object) qualificationSet93);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker98 = new edu.colostate.cs415.model.Worker("", qualificationSet93, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!:0:1:0" + "'", str50, "hi!:0:1:0");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:1:0" + "'", str51, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNotNull(projectSet74);
        org.junit.Assert.assertNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(qualificationSet81);
        org.junit.Assert.assertNull(worker83);
        org.junit.Assert.assertNull(worker85);
        org.junit.Assert.assertNull(worker87);
        org.junit.Assert.assertNotNull(workerSet91);
        org.junit.Assert.assertNotNull(projectSet92);
        org.junit.Assert.assertNotNull(qualificationSet93);
        org.junit.Assert.assertNull(project95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company26.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        edu.colostate.cs415.model.Project project30 = company21.createProject("hi!", qualificationSet28, projectSize29);
        edu.colostate.cs415.model.Worker worker32 = company18.createWorker("", qualificationSet28, 1.0d);
        edu.colostate.cs415.model.Worker worker34 = company13.createWorker("hi!", qualificationSet28, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str39 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company51.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        edu.colostate.cs415.model.Project project55 = company46.createProject("hi!", qualificationSet53, projectSize54);
        edu.colostate.cs415.model.Worker worker57 = company43.createWorker("", qualificationSet53, 1.0d);
        edu.colostate.cs415.model.Worker worker59 = company38.createWorker("hi!", qualificationSet53, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company38.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company38.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification63 = company38.createQualification("");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company66.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        edu.colostate.cs415.model.Project project70 = company38.createProject("hi!:0:0", qualificationSet68, projectSize69);
        edu.colostate.cs415.model.Worker worker72 = company13.createWorker("", qualificationSet68, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize73 = null;
        edu.colostate.cs415.model.Project project74 = company1.createProject("hi!:0:0", qualificationSet68, projectSize73);
        edu.colostate.cs415.model.Project project75 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNull(project30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNull(project55);
        org.junit.Assert.assertNull(worker57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNull(project70);
        org.junit.Assert.assertNull(worker72);
        org.junit.Assert.assertNull(project74);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        java.lang.String str46 = worker34.getName();
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker34.willOverload(project47);
        java.lang.String str49 = worker34.getName();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker34.toDTO();
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.addProject(project51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(workerDTO50);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("");
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean19 = qualification10.equals((java.lang.Object) qualification18);
        java.lang.String str20 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean28 = company24.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        edu.colostate.cs415.model.Project project38 = company24.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, projectSize37);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, (double) 0L);
        qualification18.removeWorker(worker41);
        edu.colostate.cs415.dto.WorkerDTO workerDTO43 = worker41.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO44 = worker41.toDTO();
        edu.colostate.cs415.model.Project project45 = null;
        boolean boolean46 = worker41.willOverload(project45);
        boolean boolean47 = worker41.isAvailable();
        java.lang.String str48 = worker41.getName();
        double double49 = worker41.getSalary();
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(project38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(workerDTO43);
        org.junit.Assert.assertNotNull(workerDTO44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean21 = qualification12.equals((java.lang.Object) qualification20);
        java.lang.String str22 = qualification20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        edu.colostate.cs415.model.Project project40 = company26.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, projectSize39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0L);
        qualification20.removeWorker(worker43);
        edu.colostate.cs415.dto.WorkerDTO workerDTO45 = worker43.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker43.toDTO();
        edu.colostate.cs415.model.Project project47 = null;
        boolean boolean48 = worker43.willOverload(project47);
        qualification8.addWorker(worker43);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = worker43.getProjects();
        java.lang.Object obj51 = null;
        boolean boolean52 = worker43.equals(obj51);
        worker43.setSalary((double) 1);
        int int55 = worker43.getWorkload();
        java.lang.String str56 = worker43.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(project40);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(workerDTO45);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        boolean boolean12 = company7.equals((java.lang.Object) (-1));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str24 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("");
        java.lang.String str28 = company23.toString();
        boolean boolean29 = qualification17.equals((java.lang.Object) str28);
        boolean boolean30 = company7.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        boolean boolean37 = company33.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.ProjectSize projectSize46 = null;
        edu.colostate.cs415.model.Project project47 = company33.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, projectSize46);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet48, (double) 0L);
        worker50.setSalary((double) 0.0f);
        int int53 = worker50.getWorkload();
        worker50.setSalary(100.0d);
        worker50.setSalary(10.0d);
        boolean boolean58 = worker50.isAvailable();
        qualification17.addWorker(worker50);
        boolean boolean60 = company1.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification17.getWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNull(qualification27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(project47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(workerSet61);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        qualification3.removeWorker(worker48);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = company52.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company52.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company52.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification58 = company52.createQualification("hi!:0:0");
        boolean boolean60 = company52.equals((java.lang.Object) (short) -1);
        edu.colostate.cs415.model.Qualification qualification62 = company52.createQualification("");
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company65.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company65.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company65.getQualifications();
        edu.colostate.cs415.model.Worker worker70 = company52.createWorker("hi!:0:0", qualificationSet68, 100.0d);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company72.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company72.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification76 = company72.createQualification("hi!:0:0");
        boolean boolean77 = company52.equals((java.lang.Object) company72);
        boolean boolean78 = worker48.equals((java.lang.Object) boolean77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = worker48.getQualifications();
        java.lang.String str80 = worker48.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(projectSet54);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNull(worker70);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(qualificationSet79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!:0:1:0" + "'", str80, "hi!:0:1:0");
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company11.getUnavailableWorkers();
        boolean boolean27 = qualification3.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification39 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company30.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, projectSize43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker47.getQualifications();
        worker47.setSalary((double) 10);
        qualification3.removeWorker(worker47);
        java.lang.String str52 = worker47.toString();
        edu.colostate.cs415.model.Project project53 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker47.addProject(project53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:1:10" + "'", str52, "hi!:0:1:10");
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.lang.String str16 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company1.createQualification("");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNull(qualification20);
        org.junit.Assert.assertNull(qualification22);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        boolean boolean16 = qualification11.equals((java.lang.Object) workerSet15);
        java.lang.String str17 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification11.getWorkers();
        java.lang.String str19 = qualification11.toString();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean26 = qualification23.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification23.toDTO();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean32 = qualification23.equals((java.lang.Object) qualification31);
        java.lang.String str33 = qualification31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray47 = new edu.colostate.cs415.model.Qualification[] { qualification46 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet48 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet48, qualificationArray47);
        edu.colostate.cs415.model.ProjectSize projectSize50 = null;
        edu.colostate.cs415.model.Project project51 = company37.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet48, projectSize50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet52, (double) 0L);
        qualification31.removeWorker(worker54);
        boolean boolean56 = qualification11.equals((java.lang.Object) worker54);
        edu.colostate.cs415.model.Project project57 = null;
        boolean boolean58 = worker54.willOverload(project57);
        qualification3.removeWorker(worker54);
        edu.colostate.cs415.dto.WorkerDTO workerDTO60 = worker54.toDTO();
        boolean boolean61 = worker54.isAvailable();
        edu.colostate.cs415.model.Project project62 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker54.addProject(project62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(project51);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(workerDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        worker19.setSalary((double) 0.0f);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean28 = qualification25.equals((java.lang.Object) 'a');
        java.lang.String str29 = qualification25.toString();
        java.lang.String str30 = qualification25.toString();
        boolean boolean31 = worker19.equals((java.lang.Object) qualification25);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = worker19.getProjects();
        java.lang.String str33 = worker19.getName();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        worker19.setSalary((double) 10);
        java.lang.String str23 = worker19.toString();
        worker19.setSalary((double) ' ');
        edu.colostate.cs415.model.Project project26 = null;
        boolean boolean27 = worker19.willOverload(project26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        boolean boolean36 = qualification31.equals((java.lang.Object) workerSet35);
        java.lang.String str37 = qualification31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification31.getWorkers();
        java.lang.String str39 = qualification31.toString();
        java.lang.String str40 = qualification31.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO41 = qualification31.toDTO();
        worker19.addQualification(qualification31);
        java.lang.String str43 = worker19.toString();
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.addProject(project44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:1:10" + "'", str23, "hi!:0:1:10");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:1:32" + "'", str43, "hi!:0:1:32");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        edu.colostate.cs415.model.Project project13 = company4.createProject("hi!", qualificationSet11, projectSize12);
        edu.colostate.cs415.model.Worker worker15 = company1.createWorker("", qualificationSet11, 1.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company26.createProject("hi!", qualificationSet33, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company23.createWorker("", qualificationSet33, 1.0d);
        edu.colostate.cs415.model.Worker worker39 = company18.createWorker("hi!", qualificationSet33, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str44 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company43.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company48.createWorker("", qualificationSet58, 1.0d);
        edu.colostate.cs415.model.Worker worker64 = company43.createWorker("hi!", qualificationSet58, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company43.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company43.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification68 = company43.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company43.createProject("hi!:0:0", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.Worker worker77 = company18.createWorker("", qualificationSet73, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet80 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = company1.getQualifications();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNull(project13);
        org.junit.Assert.assertNull(worker15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(worker64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(projectSet80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertNotNull(qualificationSet83);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray20 = new edu.colostate.cs415.model.Qualification[] { qualification19 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet21 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet21, qualificationArray20);
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company10.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet21, projectSize23);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker27.getQualifications();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company31.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company31.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company31.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification37 = company31.createQualification("hi!:0:0");
        worker27.addQualification(qualification37);
        java.lang.String str39 = worker27.getName();
        edu.colostate.cs415.dto.WorkerDTO workerDTO40 = worker27.toDTO();
        double double41 = worker27.getSalary();
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker27, project42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(workerDTO40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray18 = new edu.colostate.cs415.model.Qualification[] { qualification17 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet19 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet19, qualificationArray18);
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company8.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet19, projectSize21);
        edu.colostate.cs415.model.Qualification qualification24 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company8.getUnavailableWorkers();
        boolean boolean26 = company1.equals((java.lang.Object) workerSet25);
        java.lang.String str27 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray13 = new edu.colostate.cs415.model.Qualification[] { qualification12 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet14 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet14, qualificationArray13);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        edu.colostate.cs415.model.Project project17 = company3.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet14, projectSize16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = worker20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = worker20.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO23 = worker20.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = worker20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project26 = new edu.colostate.cs415.model.Project("", qualificationSet24, projectSize25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(project17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(workerDTO23);
        org.junit.Assert.assertNotNull(qualificationSet24);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        edu.colostate.cs415.model.Project project13 = company4.createProject("hi!", qualificationSet11, projectSize12);
        edu.colostate.cs415.model.Worker worker15 = company1.createWorker("", qualificationSet11, 1.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        edu.colostate.cs415.model.Project project35 = company26.createProject("hi!", qualificationSet33, projectSize34);
        edu.colostate.cs415.model.Worker worker37 = company23.createWorker("", qualificationSet33, 1.0d);
        edu.colostate.cs415.model.Worker worker39 = company18.createWorker("hi!", qualificationSet33, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str44 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company43.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        edu.colostate.cs415.model.Project project60 = company51.createProject("hi!", qualificationSet58, projectSize59);
        edu.colostate.cs415.model.Worker worker62 = company48.createWorker("", qualificationSet58, 1.0d);
        edu.colostate.cs415.model.Worker worker64 = company43.createWorker("hi!", qualificationSet58, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company43.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company43.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification68 = company43.createQualification("");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company71.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        edu.colostate.cs415.model.Project project75 = company43.createProject("hi!:0:0", qualificationSet73, projectSize74);
        edu.colostate.cs415.model.Worker worker77 = company18.createWorker("", qualificationSet73, 100.0d);
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0", qualificationSet73, projectSize78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass81 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNull(project13);
        org.junit.Assert.assertNull(worker15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(project35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(worker39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNull(project60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(worker64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNull(project75);
        org.junit.Assert.assertNull(worker77);
        org.junit.Assert.assertNull(project79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str21 = company20.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getAvailableWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company33.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        edu.colostate.cs415.model.Project project37 = company28.createProject("hi!", qualificationSet35, projectSize36);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company40.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company40.createQualification("");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company46.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = company40.createWorker("hi!:0:0", qualificationSet48, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker52 = company28.createWorker("", qualificationSet48, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize53 = null;
        edu.colostate.cs415.model.Project project54 = company24.createProject("", qualificationSet48, projectSize53);
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        edu.colostate.cs415.model.Project project56 = company20.createProject("hi!:0:0", qualificationSet48, projectSize55);
        edu.colostate.cs415.model.ProjectSize projectSize57 = null;
        edu.colostate.cs415.model.Project project58 = company1.createProject("hi!:0:1:32:0:1:12:0:1:100", qualificationSet48, projectSize57);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNull(project37);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNull(worker50);
        org.junit.Assert.assertNull(worker52);
        org.junit.Assert.assertNull(project54);
        org.junit.Assert.assertNull(project56);
        org.junit.Assert.assertNull(project58);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.lang.String str14 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company1.getQualifications();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet35, 32.0d);
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        int int33 = worker29.getWorkload();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean40 = qualification37.equals((java.lang.Object) 'a');
        java.lang.String str41 = qualification37.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean44 = qualification37.equals((java.lang.Object) company43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        edu.colostate.cs415.dto.WorkerDTO workerDTO47 = worker29.toDTO();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        boolean boolean54 = company50.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray60 = new edu.colostate.cs415.model.Qualification[] { qualification59 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet61 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet61, qualificationArray60);
        edu.colostate.cs415.model.ProjectSize projectSize63 = null;
        edu.colostate.cs415.model.Project project64 = company50.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet61, projectSize63);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = company50.getQualifications();
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet65, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = worker67.getQualifications();
        edu.colostate.cs415.model.Project project69 = null;
        boolean boolean70 = worker67.willOverload(project69);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet71 = worker67.getProjects();
        java.lang.String str72 = worker67.getName();
        edu.colostate.cs415.model.Qualification qualification74 = new edu.colostate.cs415.model.Qualification("hi!:0:1:10");
        worker67.addQualification(qualification74);
        double double76 = worker67.getSalary();
        java.lang.String str77 = worker67.toString();
        boolean boolean78 = worker29.equals((java.lang.Object) str77);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet79 = worker29.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(workerDTO47);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(project64);
        org.junit.Assert.assertNotNull(qualificationSet65);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(projectSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!:0:2:0" + "'", str77, "hi!:0:2:0");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(projectSet79);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company51.getProjects();
        edu.colostate.cs415.model.Qualification qualification54 = company51.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company51.getAssignedWorkers();
        boolean boolean56 = worker48.equals((java.lang.Object) workerSet55);
        boolean boolean58 = worker48.equals((java.lang.Object) '#');
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification62.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification62.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO65 = qualification62.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification62.toDTO();
        java.lang.Object obj67 = null;
        boolean boolean68 = qualification62.equals(obj67);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        boolean boolean75 = company71.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray81 = new edu.colostate.cs415.model.Qualification[] { qualification80 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet82 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet82, qualificationArray81);
        edu.colostate.cs415.model.ProjectSize projectSize84 = null;
        edu.colostate.cs415.model.Project project85 = company71.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet82, projectSize84);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker88 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet86, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = worker88.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = worker88.getQualifications();
        qualification62.addWorker(worker88);
        boolean boolean92 = worker48.equals((java.lang.Object) qualification62);
        java.lang.String str93 = worker48.toString();
        edu.colostate.cs415.model.Project project94 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker48, project94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(projectSet52);
        org.junit.Assert.assertNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertNotNull(qualificationDTO65);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(qualificationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(project85);
        org.junit.Assert.assertNotNull(qualificationSet86);
        org.junit.Assert.assertNotNull(qualificationSet89);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!:0:1:0" + "'", str93, "hi!:0:1:0");
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company7.createProject("hi!", qualificationSet14, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("", qualificationSet17, (double) (short) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(worker19);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str10 = qualification9.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.lang.Object obj13 = null;
        boolean boolean14 = qualification3.equals(obj13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification17 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        edu.colostate.cs415.model.Project project34 = company20.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, projectSize33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = worker37.getQualifications();
        qualification17.removeWorker(worker37);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        boolean boolean49 = qualification44.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification44.getWorkers();
        boolean boolean52 = worker37.equals((java.lang.Object) workerSet51);
        qualification3.addWorker(worker37);
        boolean boolean54 = worker37.isAvailable();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(project34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray13 = new edu.colostate.cs415.model.Qualification[] { qualification12 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet14 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet14, qualificationArray13);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        edu.colostate.cs415.model.Project project17 = company3.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet14, projectSize16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 0L);
        worker20.setSalary((double) 0.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean29 = qualification26.equals((java.lang.Object) 'a');
        java.lang.String str30 = qualification26.toString();
        java.lang.String str31 = qualification26.toString();
        boolean boolean32 = worker20.equals((java.lang.Object) qualification26);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = worker20.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project35 = new edu.colostate.cs415.model.Project("hi!:0:1:32:0:0", qualificationSet33, projectSize34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(project17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:1:32:0:1:12:0:1:32");
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean26 = qualification17.equals((java.lang.Object) qualification25);
        java.lang.String str27 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        edu.colostate.cs415.model.Project project45 = company31.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, projectSize44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) 0L);
        qualification25.removeWorker(worker48);
        qualification3.addWorker(worker48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO51 = worker48.toDTO();
        java.lang.String str52 = worker48.getName();
        boolean boolean53 = worker48.isAvailable();
        int int54 = worker48.getWorkload();
        int int55 = worker48.getWorkload();
        // The following exception was thrown during execution in test generation
        try {
            worker48.setSalary((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(project45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerDTO51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        edu.colostate.cs415.model.Qualification qualification2 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str3 = qualification2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification2.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification2.toDTO();
        edu.colostate.cs415.model.Qualification qualification7 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray20 = new edu.colostate.cs415.model.Qualification[] { qualification19 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet21 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet21, qualificationArray20);
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        edu.colostate.cs415.model.Project project24 = company10.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet21, projectSize23);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = worker27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = worker27.getQualifications();
        qualification7.removeWorker(worker27);
        qualification2.addWorker(worker27);
        worker27.setSalary((double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = worker27.getQualifications();
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet34, (double) 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(project24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNotNull(qualificationSet34);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean28 = qualification25.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification25.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean34 = qualification25.equals((java.lang.Object) qualification33);
        java.lang.String str35 = qualification33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification33.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean43 = company39.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray49 = new edu.colostate.cs415.model.Qualification[] { qualification48 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet50 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet50, qualificationArray49);
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company39.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet50, projectSize52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet54, (double) 0L);
        qualification33.removeWorker(worker56);
        edu.colostate.cs415.dto.WorkerDTO workerDTO58 = worker56.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO59 = worker56.toDTO();
        edu.colostate.cs415.model.Project project60 = null;
        boolean boolean61 = worker56.willOverload(project60);
        qualification21.addWorker(worker56);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = worker56.getProjects();
        java.lang.Object obj64 = null;
        boolean boolean65 = worker56.equals(obj64);
        edu.colostate.cs415.model.Project project66 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker56, project66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(project53);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNotNull(workerDTO58);
        org.junit.Assert.assertNotNull(workerDTO59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(projectSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification25 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company33.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        edu.colostate.cs415.model.Project project37 = company28.createProject("hi!", qualificationSet35, projectSize36);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company21.createProject("hi!", qualificationSet35, projectSize38);
        edu.colostate.cs415.model.Worker worker41 = company1.createWorker("hi!:0:0:0:0", qualificationSet35, (double) 100L);
        java.lang.Class<?> wildcardClass42 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNull(project37);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNull(worker41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company18.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        edu.colostate.cs415.model.Project project22 = company13.createProject("hi!", qualificationSet20, projectSize21);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company25.createQualification("");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = company25.createWorker("hi!:0:0", qualificationSet33, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker37 = company13.createWorker("", qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        edu.colostate.cs415.model.Project project39 = company9.createProject("", qualificationSet33, projectSize38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company9.getUnavailableWorkers();
        boolean boolean41 = qualification3.equals((java.lang.Object) workerSet40);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNull(project22);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNull(project39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = null;
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        edu.colostate.cs415.model.Project project11 = company1.createProject("", qualificationSet9, projectSize10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("");
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(project11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNull(qualification14);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.lang.String str16 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company1.createQualification("hi!:0:1:100");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        edu.colostate.cs415.model.Project project19 = company10.createProject("hi!", qualificationSet17, projectSize18);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company22.createQualification("");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company22.createWorker("hi!:0:0", qualificationSet30, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("", qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        edu.colostate.cs415.model.Project project36 = company6.createProject("", qualificationSet30, projectSize35);
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        edu.colostate.cs415.model.Project project38 = company2.createProject("hi!:0:0", qualificationSet30, projectSize37);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company42.getProjects();
        edu.colostate.cs415.model.Qualification qualification45 = company42.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company42.getAssignedWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company49.getProjects();
        edu.colostate.cs415.model.Qualification qualification52 = company49.createQualification("");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        edu.colostate.cs415.model.Worker worker59 = company49.createWorker("hi!:0:0", qualificationSet57, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company49.getQualifications();
        edu.colostate.cs415.model.Worker worker62 = company42.createWorker("", qualificationSet60, (double) 'a');
        edu.colostate.cs415.model.ProjectSize projectSize63 = null;
        edu.colostate.cs415.model.Project project64 = company2.createProject("hi!:0:0", qualificationSet60, projectSize63);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        boolean boolean72 = qualification69.equals((java.lang.Object) 'a');
        boolean boolean73 = company2.equals((java.lang.Object) 'a');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker76 = new edu.colostate.cs415.model.Worker("hi!:0:1:0", qualificationSet74, (double) 12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(project19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNull(worker32);
        org.junit.Assert.assertNull(worker34);
        org.junit.Assert.assertNull(project36);
        org.junit.Assert.assertNull(project38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNull(worker59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(project64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualificationSet74);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.getName();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        edu.colostate.cs415.model.Qualification qualification17 = company14.createQualification("");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = company14.createWorker("hi!:0:0", qualificationSet22, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company9.createProject("hi!:0:0", qualificationSet22, projectSize25);
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        edu.colostate.cs415.model.Project project28 = company1.createProject("hi!:0:1:10", qualificationSet22, projectSize27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company1.getQualifications();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNull(worker24);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNull(project28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        edu.colostate.cs415.dto.WorkerDTO workerDTO33 = worker29.toDTO();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        boolean boolean42 = qualification37.equals((java.lang.Object) workerSet41);
        java.lang.String str43 = qualification37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification37.getWorkers();
        java.lang.String str45 = qualification37.toString();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification49.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        boolean boolean58 = qualification49.equals((java.lang.Object) qualification57);
        java.lang.String str59 = qualification57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification57.getWorkers();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        boolean boolean67 = company63.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray73 = new edu.colostate.cs415.model.Qualification[] { qualification72 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet74 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet74, qualificationArray73);
        edu.colostate.cs415.model.ProjectSize projectSize76 = null;
        edu.colostate.cs415.model.Project project77 = company63.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet74, projectSize76);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet78 = company63.getQualifications();
        edu.colostate.cs415.model.Worker worker80 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet78, (double) 0L);
        qualification57.removeWorker(worker80);
        boolean boolean82 = qualification37.equals((java.lang.Object) worker80);
        worker80.setSalary((double) 'a');
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification88 = company86.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = qualification88.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO90 = qualification88.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet91 = qualification88.getWorkers();
        java.lang.String str92 = qualification88.toString();
        worker80.addQualification(qualification88);
        double double94 = worker80.getSalary();
        java.lang.String str95 = worker80.getName();
        java.lang.String str96 = worker80.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet97 = worker80.getProjects();
        boolean boolean98 = worker29.equals((java.lang.Object) worker80);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(workerDTO33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(qualificationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(project77);
        org.junit.Assert.assertNotNull(qualificationSet78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertNotNull(qualificationDTO90);
        org.junit.Assert.assertNotNull(workerSet91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 97.0d + "'", double94 == 97.0d);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!:0:1:97" + "'", str96, "hi!:0:1:97");
        org.junit.Assert.assertNotNull(projectSet97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray12 = new edu.colostate.cs415.model.Qualification[] { qualification11 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet13 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet13, qualificationArray12);
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        edu.colostate.cs415.model.Project project16 = company2.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet13, projectSize15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        worker19.setSalary((double) 0.0f);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean28 = qualification25.equals((java.lang.Object) 'a');
        java.lang.String str29 = qualification25.toString();
        java.lang.String str30 = qualification25.toString();
        boolean boolean31 = worker19.equals((java.lang.Object) qualification25);
        boolean boolean32 = worker19.isAvailable();
        worker19.setSalary((double) (short) 0);
        int int35 = worker19.getWorkload();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(project16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = null;
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        edu.colostate.cs415.model.Project project11 = company1.createProject("", qualificationSet9, projectSize10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNull(project11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company8.createWorker("hi!:0:0", qualificationSet16, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("", qualificationSet19, (double) 'a');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company1.getProjects();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(worker18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNull(worker21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(projectSet23);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        java.lang.Object obj8 = null;
        boolean boolean9 = qualification3.equals(obj8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray22 = new edu.colostate.cs415.model.Qualification[] { qualification21 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet23 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet23, qualificationArray22);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        edu.colostate.cs415.model.Project project26 = company12.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet23, projectSize25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = worker29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = worker29.getQualifications();
        qualification3.addWorker(worker29);
        java.lang.String str33 = worker29.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        boolean boolean42 = qualification37.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification37.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean49 = company45.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray55 = new edu.colostate.cs415.model.Qualification[] { qualification54 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet56 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet56, qualificationArray55);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        edu.colostate.cs415.model.Project project59 = company45.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet56, projectSize58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company45.getUnavailableWorkers();
        boolean boolean61 = qualification37.equals((java.lang.Object) workerSet60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification37.toDTO();
        worker29.addQualification(qualification37);
        worker29.setSalary(10.0d);
        edu.colostate.cs415.model.Project project66 = null;
        boolean boolean67 = worker29.willOverload(project66);
        worker29.setSalary((double) (short) 1);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(project26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:1:0" + "'", str33, "hi!:0:1:0");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(project59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray21 = new edu.colostate.cs415.model.Qualification[] { qualification20 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet22 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet22, qualificationArray21);
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company11.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet22, projectSize24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company11.getUnavailableWorkers();
        boolean boolean27 = qualification3.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification39 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        edu.colostate.cs415.model.Project project44 = company30.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, projectSize43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker47.getQualifications();
        worker47.setSalary((double) 10);
        qualification3.removeWorker(worker47);
        edu.colostate.cs415.model.Project project52 = null;
        boolean boolean53 = worker47.willOverload(project52);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(project44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        edu.colostate.cs415.model.Project project18 = company9.createProject("hi!", qualificationSet16, projectSize17);
        edu.colostate.cs415.model.Worker worker20 = company6.createWorker("", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!", qualificationSet16, (double) (-1.0f));
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company1.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNull(project18);
        org.junit.Assert.assertNull(worker20);
        org.junit.Assert.assertNull(worker22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(workerSet29);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        java.lang.String str17 = company1.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str25 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company37.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        edu.colostate.cs415.model.Project project41 = company32.createProject("hi!", qualificationSet39, projectSize40);
        edu.colostate.cs415.model.Worker worker43 = company29.createWorker("", qualificationSet39, 1.0d);
        edu.colostate.cs415.model.Worker worker45 = company24.createWorker("hi!", qualificationSet39, (double) (-1.0f));
        boolean boolean46 = company19.equals((java.lang.Object) qualificationSet39);
        boolean boolean47 = company1.equals((java.lang.Object) boolean46);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean53 = company49.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray59 = new edu.colostate.cs415.model.Qualification[] { qualification58 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet60 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet60, qualificationArray59);
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company49.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet60, projectSize62);
        boolean boolean64 = company1.equals((java.lang.Object) projectSize62);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet65 = company1.getProjects();
        java.lang.String str66 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification68 = company1.createQualification("");
        java.lang.String str69 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(project15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNull(project41);
        org.junit.Assert.assertNull(worker43);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(projectSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNull(qualification68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company37.createQualification("");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getAssignedWorkers();
        boolean boolean42 = worker34.equals((java.lang.Object) workerSet41);
        boolean boolean44 = worker34.equals((java.lang.Object) '#');
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification48.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification48.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification48.toDTO();
        java.lang.Object obj53 = null;
        boolean boolean54 = qualification48.equals(obj53);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        boolean boolean61 = company57.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray67 = new edu.colostate.cs415.model.Qualification[] { qualification66 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet68 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet68, qualificationArray67);
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        edu.colostate.cs415.model.Project project71 = company57.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet68, projectSize70);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company57.getQualifications();
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet72, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = worker74.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = worker74.getQualifications();
        qualification48.addWorker(worker74);
        boolean boolean78 = worker34.equals((java.lang.Object) qualification48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO79 = worker34.toDTO();
        edu.colostate.cs415.model.Project project80 = null;
        boolean boolean81 = worker34.willOverload(project80);
        edu.colostate.cs415.model.Project project82 = null;
        boolean boolean83 = worker34.willOverload(project82);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(qualificationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(project71);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertNotNull(qualificationSet75);
        org.junit.Assert.assertNotNull(qualificationSet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(workerDTO79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean20 = qualification11.equals((java.lang.Object) qualification19);
        java.lang.String str21 = qualification11.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean28 = qualification25.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification25.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean34 = qualification25.equals((java.lang.Object) qualification33);
        java.lang.String str35 = qualification33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification33.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean43 = company39.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray49 = new edu.colostate.cs415.model.Qualification[] { qualification48 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet50 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet50, qualificationArray49);
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        edu.colostate.cs415.model.Project project53 = company39.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet50, projectSize52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet54, (double) 0L);
        qualification33.removeWorker(worker56);
        qualification11.removeWorker(worker56);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company60.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company60.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company60.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification66 = company60.createQualification("hi!:0:0");
        boolean boolean68 = company60.equals((java.lang.Object) (short) -1);
        edu.colostate.cs415.model.Qualification qualification70 = company60.createQualification("");
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company73.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet75 = company73.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company73.getQualifications();
        edu.colostate.cs415.model.Worker worker78 = company60.createWorker("hi!:0:0", qualificationSet76, 100.0d);
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company80.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company80.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification84 = company80.createQualification("hi!:0:0");
        boolean boolean85 = company60.equals((java.lang.Object) company80);
        boolean boolean86 = worker56.equals((java.lang.Object) boolean85);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = worker56.getQualifications();
        qualification3.removeWorker(worker56);
        double double89 = worker56.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(project53);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(qualification70);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(projectSet75);
        org.junit.Assert.assertNotNull(qualificationSet76);
        org.junit.Assert.assertNull(worker78);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(qualificationSet87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass8 = company1.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = company1.createWorker("hi!:0:0", qualificationSet9, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        edu.colostate.cs415.model.Project project25 = company16.createProject("hi!", qualificationSet23, projectSize24);
        edu.colostate.cs415.model.Worker worker27 = company1.createWorker("hi!", qualificationSet23, (double) 100.0f);
        java.lang.String str28 = company1.toString();
        java.lang.String str29 = company1.toString();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str32 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company31.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company44.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize47 = null;
        edu.colostate.cs415.model.Project project48 = company39.createProject("hi!", qualificationSet46, projectSize47);
        edu.colostate.cs415.model.Worker worker50 = company36.createWorker("", qualificationSet46, 1.0d);
        edu.colostate.cs415.model.Worker worker52 = company31.createWorker("hi!", qualificationSet46, (double) (-1.0f));
        boolean boolean53 = company1.equals((java.lang.Object) company31);
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNull(worker11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNull(project25);
        org.junit.Assert.assertNull(worker27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNull(project48);
        org.junit.Assert.assertNull(worker50);
        org.junit.Assert.assertNull(worker52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean12 = qualification3.equals((java.lang.Object) qualification11);
        java.lang.String str13 = qualification11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.ProjectSize projectSize30 = null;
        edu.colostate.cs415.model.Project project31 = company17.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification11.removeWorker(worker34);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker34.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO37 = worker34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 'a');
        worker34.addQualification(qualification41);
        java.lang.Class<?> wildcardClass46 = qualification41.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(project31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(workerDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        boolean boolean10 = company6.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray16 = new edu.colostate.cs415.model.Qualification[] { qualification15 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet17 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet17, qualificationArray16);
        edu.colostate.cs415.model.ProjectSize projectSize19 = null;
        edu.colostate.cs415.model.Project project20 = company6.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet17, projectSize19);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 0L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = worker23.getQualifications();
        java.lang.String str25 = worker23.getName();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company27.createQualification("");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = company27.createWorker("hi!:0:0", qualificationSet35, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company27.getProjects();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        boolean boolean43 = company27.equals((java.lang.Object) company40);
        java.lang.String str44 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company27.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company27.getAvailableWorkers();
        boolean boolean47 = worker23.equals((java.lang.Object) workerSet46);
        boolean boolean48 = company1.equals((java.lang.Object) boolean47);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company59.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        edu.colostate.cs415.model.Project project63 = company54.createProject("hi!", qualificationSet61, projectSize62);
        edu.colostate.cs415.model.Worker worker65 = company51.createWorker("", qualificationSet61, 1.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company51.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company51.getQualifications();
        edu.colostate.cs415.model.Worker worker69 = company1.createWorker("hi!:0:1:32:0:0", qualificationSet67, (double) (byte) -1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(project20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNull(worker37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNull(project63);
        org.junit.Assert.assertNull(worker65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertNull(worker69);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean8 = qualification3.equals((java.lang.Object) workerSet7);
        java.lang.String str9 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification3.getWorkers();
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 'a');
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean24 = qualification15.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        edu.colostate.cs415.model.Project project43 = company29.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, projectSize42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 0L);
        qualification23.removeWorker(worker46);
        boolean boolean48 = qualification3.equals((java.lang.Object) worker46);
        edu.colostate.cs415.model.Project project49 = null;
        boolean boolean50 = worker46.willOverload(project49);
        edu.colostate.cs415.dto.WorkerDTO workerDTO51 = worker46.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        boolean boolean58 = qualification55.equals((java.lang.Object) 'a');
        java.lang.String str59 = qualification55.toString();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean62 = qualification55.equals((java.lang.Object) company61);
        java.lang.String str63 = company61.getName();
        edu.colostate.cs415.model.Qualification qualification65 = company61.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        boolean boolean73 = company69.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray79 = new edu.colostate.cs415.model.Qualification[] { qualification78 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet80 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet80, qualificationArray79);
        edu.colostate.cs415.model.ProjectSize projectSize82 = null;
        edu.colostate.cs415.model.Project project83 = company69.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet80, projectSize82);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = company69.getQualifications();
        edu.colostate.cs415.model.Worker worker86 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet84, (double) 0L);
        boolean boolean87 = qualification65.equals((java.lang.Object) 0L);
        boolean boolean88 = worker46.equals((java.lang.Object) qualification65);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(project43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(workerDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(project83);
        org.junit.Assert.assertNotNull(qualificationSet84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }
}

